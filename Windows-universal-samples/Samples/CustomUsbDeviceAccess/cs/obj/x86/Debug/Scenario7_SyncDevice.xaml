<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="CustomUsbDeviceAccess.Scenario7_SyncDevice"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CustomUsbDeviceAccess"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Sync Device in Background" Style="{StaticResource SampleHeaderTextStyle}"/>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <!-- Place scenario content here -->

                <Grid x:ConnectionId='3' x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid x:ConnectionId='4' x:Name="Input" Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel x:ConnectionId='10' x:Name="DeviceScenarioContainer" Orientation="Vertical" Margin="0,10,0,0" Grid.Row="0">
                            <StackPanel x:ConnectionId='11' x:Name="GeneralScenario" Orientation="Vertical">
                                <TextBlock x:ConnectionId='12' x:Name="GeneralScenarioText" Margin="0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
               This scenario shows how to sync with the device (the sample only
              demonstrates writing, for more information on reading a writing to
              the device, please go to the "Bulk Pipes" scenario). The device
              must be closed by the app so that the background task can later
              open the device and sync with it. Other scenarios (except for
              scenario 1) will not work until the sync is complete and the
              device is reopened.
                                </TextBlock>
                                <Button x:ConnectionId='13' x:Name="ButtonSync" Content="Sync with the device"                   />
                                <Button x:ConnectionId='14' x:Name="ButtonCancelSync" Content="Cancel Sync with the device"                         />
                                <StackPanel Orientation="Vertical">
                                    <TextBlock x:ConnectionId='15' x:Name="ProgressBarText" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left"> Sync progress:</TextBlock>
                                    <ProgressBar x:ConnectionId='16' x:Name="SyncProgressBar" Width="500" Height="10" Margin="10,0" VerticalAlignment="Top" Maximum="100"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:ConnectionId='17' x:Name="InputFullScreenLandscape"/>
                                <VisualState x:ConnectionId='18' x:Name="InputFilled"/>
                                <VisualState x:ConnectionId='19' x:Name="InputFullScreenPortrait"/>
                                <VisualState x:ConnectionId='20' x:Name="InputSnapped"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <Grid x:ConnectionId='5' x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
                        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:ConnectionId='6' x:Name="OutputFullScreenLandscape"/>
                                <VisualState x:ConnectionId='7' x:Name="OutputFilled"/>
                                <VisualState x:ConnectionId='8' x:Name="OutputFullScreenPortrait"/>
                                <VisualState x:ConnectionId='9' x:Name="OutputSnapped"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </Grid>


            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:ConnectionId='2' x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>

