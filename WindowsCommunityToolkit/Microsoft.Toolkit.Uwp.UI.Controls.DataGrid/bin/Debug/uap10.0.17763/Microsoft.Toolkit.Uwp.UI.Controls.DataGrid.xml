<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Toolkit.Uwp.UI.Controls.DataGrid</name>
    </assembly>
    <members>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentChanging">
            <summary>
            Raise this event before changing currency.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentChanged">
            <summary>
            Raise this event after changing currency.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <summary>
            CollectionChanged event (per <see cref="T:System.Collections.Specialized.INotifyCollectionChanged" />).
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged" />).
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Windows#Foundation#Collections#IObservableVector{System#Object}#VectorChanged">
            <summary>
            Unused VectorChanged event from the ICollectionView interface.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Culture">
            <summary>
            Gets or sets the Culture to use during sorting.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.DeferRefresh">
            <summary>
            Enter a Defer Cycle.
            Defer cycles are used to coalesce changes to the ICollectionView.
            </summary>
            <returns>An IDisposable deferral object.</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem">
            <summary>
            Gets the "current item" for this view
            </summary>
            <remarks>
            Only wrapper classes (those that pass currency handling calls to another internal
            CollectionView) should override CurrentItem; all other derived classes
            should use SetCurrent() to update the current values stored in the base class.
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> within the (optionally
            sorted and filtered) view.
            </summary>
            <returns>
            -1 if the CurrentPosition is unknown, because the collection does not have an
            effective notion of indices, or because CurrentPosition is being forcibly changed
            due to a CollectionChange.
            </returns>
            <remarks>
            Only wrapper classes (those that pass currency handling calls to another internal
            CollectionView) should override CurrenPosition; all other derived classes
            should use SetCurrent() to update the current values stored in the base class.
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.HasMoreItems">
            <summary>
            Gets a value indicating whether the source has more items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IsCurrentAfterLast">
            <summary>
            Gets a value indicating whether <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> is beyond the end (End-Of-File).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IsCurrentBeforeFirst">
            <summary>
            Gets a value indicating whether <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> is before the beginning (Beginning-Of-File).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.SourceCollection">
            <summary>
            Gets the underlying collection.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Contains(System.Object)">
            <summary>
            Return true if the item belongs to this view.  No assumptions are
            made about the item. This method will behave similarly to IList.Contains().
            </summary>
            <remarks>
            <p>If the caller knows that the item belongs to the
            underlying collection, it is more efficient to call PassesFilter.
            If the underlying collection is only of type IEnumerable, this method
            is a O(N) operation</p>
            </remarks>
            <returns>True if the item belongs to this view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Invoked to load more items from the source.
            </summary>
            <param name="count">number of items to load</param>
            <returns>Async operation of LoadMoreItemsResult</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentToFirst">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the first item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentToLast">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the last item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentToNext">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the next item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentToPrevious">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the previous item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentTo(System.Object)">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the given item.
            If the item is not found, move to BeforeFirst.
            </summary>
            <param name="item">Move CurrentItem to this item.</param>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> to the item at the given index.
            </summary>
            <param name="position">Move CurrentItem to this index</param>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Refresh">
            <summary>
            Re-create the view, using any SortDescriptions and/or Filter.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an object that enumerates the items in this view.
            </summary>
            <returns>IEnumerator object that enumerates the items in this view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IndexOf(System.Object)">
            <summary>
            Return the index where the given item belongs, or -1 if this index is unknown.
            </summary>
            <remarks>
            If this method returns an index other than -1, it must always be true that
            view[index-1] &lt; item &lt;= view[index], where the comparisons are done via
            the view's IComparer.Compare method (if any).
            (This method is used by a listener's (e.g. System.Windows.Controls.ItemsControl)
            CollectionChanged event handler to speed up its reaction to insertion and deletion of items.
            If IndexOf is  not implemented, a listener does a binary search using IComparer.Compare.)
            </remarks>
            <param name="item">data item</param>
            <returns>The index where the given item belongs, or -1 if this index is unknown.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieve item at the given zero-based index in this CollectionView.
            </summary>
            <remarks>
            <p>The index is evaluated with any SortDescriptions or Filter being set on this CollectionView.
            If the underlying collection is only of type IEnumerable, this method
            is a O(N) operation.</p>
            <p>When deriving from CollectionView, override this method to provide
            a more efficient implementation.</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if index is out of range
            </exception>
            <returns>Item at the given zero-based index in this CollectionView.</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Count">
            <summary>
            Gets the number of items (or -1, meaning "don't know");
            if a Filter is set, this counts only items that pass the filter.
            </summary>
            <remarks>
            <p>If the underlying collection is only of type IEnumerable, this count
            is a O(N) operation; this Count value will be cached until the
            collection changes again.</p>
            <p>When deriving from CollectionView, override this property to provide
            a more efficient implementation.</p>
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IsEmpty">
            <summary>
            Gets a value indicating whether the resulting (filtered) view is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.Comparer">
            <summary>
            Gets an object that compares items in this view.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.NeedsRefresh">
            <summary>
            Gets a value indicating whether this view needs to be refreshed.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.CollectionChanged">
            <summary>
            Raise this event when the (filtered) view changes
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged" />).
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged" />).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.RefreshOverride">
            <summary>
            Re-create the view, using any SortDescriptions and/or Filter.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.GetEnumerator">
            <summary>
            Returns an object that enumerates the items in this view.
            </summary>
            <returns>An object that enumerates the items in this view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Notify listeners that this View has changed
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should take their filter/sort/grouping
            into account before calling this method to forward CollectionChanged events.
            </remarks>
            <param name="args">
            The NotifyCollectionChangedEventArgs to be passed to the EventHandler
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.SetCurrent(System.Object,System.Int32)">
            <summary>
            set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            CollectionViews (and sub-classes) should use this method to update
            the Current__ values.
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
            <summary>
            set CurrentItem and CurrentPosition, no questions asked!
            </summary>
            <remarks>
            This method can be called from a constructor - it does not call
            any virtuals.  The 'count' parameter is substitute for the real Count,
            used only when newItem is null.
            In that case, this method sets IsCurrentAfterLast to true if and only
            if newPosition >= count.  This distinguishes between a null belonging
            to the view and the dummy null when CurrentPosition is past the end.
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OKToChangeCurrent">
            <summary>
            Ask listeners (via <seealso cref="E:Windows.UI.Xaml.Data.ICollectionView.CurrentChanging"/> event) if it's OK to change currency
            </summary>
            <returns>false if a listener cancels the change, true otherwise</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnCurrentChanging">
            <summary>
            Raise a CurrentChanging event that is not cancelable.
            Internally, CurrentPosition is set to -1.
            This is called by CollectionChanges (Remove and Refresh) that affect the CurrentItem.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnCurrentChanging(Windows.UI.Xaml.Data.CurrentChangingEventArgs)">
            <summary>
            Raises the CurrentChanging event
            </summary>
            <param name="args">
                CancelEventArgs used by the consumer of the event.  args.Cancel will
                be true after this call if the CurrentItem should not be changed for
                any reason.
            </param>
            <exception cref="T:System.InvalidOperationException">
                This CurrentChanging event cannot be canceled.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnCurrentChanged">
            <summary>
            Raises the CurrentChanged event
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Must be implemented by the derived classes to process a single change on the
            UI thread.  The UI thread will have already been entered by now.
            </summary>
            <param name="args">
            The NotifyCollectionChangedEventArgs to be processed.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle CollectionChanged events.
            Calls ProcessCollectionChanged() or posts the change to the Dispatcher to process on the correct thread.
            </summary>
            <remarks>
            User should override <see cref="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.RefreshOrDefer">
            <summary>
                Refresh, or mark that refresh is needed when defer cycle completes.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IsRefreshDeferred">
            <summary>
            Gets a value indicating whether isRefreshDeferred there is still an outstanding
            DeferRefresh in use. If at all possible, derived classes should not call Refresh
            if IsRefreshDeferred is true.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.IsCurrentInSync">
            <summary>
            Gets a value indicating whether CurrentItem and CurrentPosition are
            up-to-date with the state and content of the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.GetItemType(System.Boolean)">
            <summary>
            Returns type of the items in the source collection.
            </summary>
            <returns>Type of the items in the source collection.</returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.PlaceholderAwareEnumerator.Position.BeforeNewItem">
            <summary>
            Whether the position is before the new item
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.PlaceholderAwareEnumerator.Position.OnNewItem">
            <summary>
            Whether the position is on the new item that is being created
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.PlaceholderAwareEnumerator.Position.AfterNewItem">
            <summary>
            Whether the position is after the new item
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.OnPropertyChanged(System.String)">
            <summary>
            Helper to raise a PropertyChanged event  />).
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.CollectionView.DeferHelper">
            <summary>
            IDisposable deferral object.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView">
            <summary>
            A collection view implementation that supports an IEnumerable source.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.Culture">
            <summary>
            Gets or sets culture to use during sorting.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.Contains(System.Object)">
            <summary>
            Return true if the item belongs to this view.  No assumptions are
            made about the item. This method will behave similarly to IList.Contains().
            If the caller knows that the item belongs to the
            underlying collection, it is more efficient to call PassesFilter.
            </summary>
            <returns>True if the item belongs to this view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.DeferRefresh">
            <summary>
            Enter a Defer Cycle.
            Defer cycles are used to coalesce changes to the ICollectionView.
            </summary>
            <returns>An IDisposable deferral object.</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem">
            <summary>
            Gets the current item.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> within the (optionally
            sorted and filtered) view.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.IsCurrentAfterLast">
            <summary>
            Gets a value indicating whether the currency is beyond the end (End-Of-File).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.IsCurrentBeforeFirst">
            <summary>
            Gets a value indicating whether the currency is before the beginning (Beginning-Of-File).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentToFirst">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the first item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentToPrevious">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the previous item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentToNext">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the next item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentToLast">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the last item.
            </summary>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentTo(System.Object)">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the given item.
            If the item is not found, move to BeforeFirst.
            </summary>
            <param name="item">Move CurrentItem to this item.</param>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Move <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> to the item at the given index.
            </summary>
            <param name="position">Move CurrentItem to this index</param>
            <returns>True if <seealso cref="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.CurrentItem"/> points to an item within the view.</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.Count">
            <summary>
            Gets the number of records (or -1, meaning "don't know").
            A virtualizing view should return the best estimate it can
            without de-virtualizing all the data.  A non-virtualizing view
            should return the exact count of its (filtered) data.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.NeedsRefresh">
            <summary>
            Gets a value indicating whether this view needs to be refreshed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.IndexOf(System.Object)">
            <summary>
            Return the index where the given item appears, or -1 if doesn't appear.
            </summary>
            <param name="item">data item</param>
            <returns>The index where the given item belongs, or -1 if this index is unknown.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieve item at the given zero-based index in this CollectionView.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if index is out of range
            </exception>
            <returns>Item at the given zero-based index in this CollectionView.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.GetEnumerator">
            <summary> Implementation of IEnumerable.GetEnumerator().
            This provides a way to enumerate the members of the collection
            without changing the currency.
            </summary>
            <returns>IEnumerator object that enumerates the items in this view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.RefreshOverride">
            <summary>
            Re-create the view over the associated IList
            </summary>
            <remarks>
            Any sorting and filtering will take effect during Refresh.
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.EnumerableCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes a single collection change on the UI thread.
            </summary>
            <param name="args">
            The NotifyCollectionChangedEventArgs to be processed.
            </param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView">
            <summary>
            A collection view implementation that supports an IList source.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView"/> class.
            </summary>
            <param name="list">Underlying IList</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.RefreshOverride">
            <summary>
            Re-create the view over the associated IList
            </summary>
            <remarks>
            Any sorting and filtering will take effect during Refresh.
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.Contains(System.Object)">
            <summary>
            Return true if the item belongs to this view.  No assumptions are
            made about the item. This method will behave similarly to IList.Contains()
            and will do an exhaustive search through all items in this view.
            If the caller knows that the item belongs to the
            underlying collection, it is more efficient to call PassesFilter.
            </summary>
            <returns>True if collection contains item.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Move CurrentItem to the item at the given index.
            </summary>
            <param name="position">Move CurrentItem to this index</param>
            <returns>true if CurrentItem points to an item within the view.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.IndexOf(System.Object)">
            <summary>
            Return the index where the given item belongs, or -1 if this index is unknown.
            </summary>
            <remarks>
            If this method returns an index other than -1, it must always be true that
            view[index-1] &lt; item &lt;= view[index], where the comparisons are done via
            the view's IComparer.Compare method (if any).
            (This method is used by a listener's (e.g. System.Windows.Controls.ItemsControl)
            CollectionChanged event handler to speed up its reaction to insertion and deletion of items.
            If IndexOf is  not implemented, a listener does a binary search using IComparer.Compare.)
            </remarks>
            <param name="item">data item</param>
            <returns>The index where the given item belongs, or -1 if this index is unknown.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieve item at the given zero-based index in this CollectionView.
            </summary>
            <remarks>
            <p>The index is evaluated with any SortDescriptions or Filter being set on this CollectionView.</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if index is out of range
            </exception>
            <returns>Item at the given zero-based index in this CollectionView.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.System#Collections#Generic#IComparer{System#Object}#Compare(System.Object,System.Object)">
            <summary>
            Return -, 0, or +, according to whether o1 occurs before, at, or after o2 (respectively)
            </summary>
            <param name="o1">first object</param>
            <param name="o2">second object</param>
            <remarks>
            Compares items by their resp. index in the IList.
            </remarks>
            <returns>-, 0, or +, according to whether o1 occurs before, at, or after o2 (respectively).</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.Compare(System.Object,System.Object)">
            <summary>
            Return -, 0, or +, according to whether o1 occurs before, at, or after o2 (respectively)
            </summary>
            <param name="o1">first object</param>
            <param name="o2">second object</param>
            <remarks>
            Compares items by their resp. index in the IList.
            </remarks>
            <returns>Return -, 0, or +, according to whether o1 occurs before, at, or after o2 (respectively).</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.GetEnumerator">
            <summary>
            Implementation of IEnumerable.GetEnumerator().
            This provides a way to enumerate the members of the collection
            without changing the currency.
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.Count">
            <summary>
            Gets the estimated number of records (or -1, meaning "don't know").
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.IsEmpty">
            <summary>
            Gets a value indicating whether the resulting (filtered) view is empty.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle CollectionChange events
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalIndexOf(System.Object)">
            <summary>
            Return index of item in the internal list.
            </summary>
            <returns>Index of item in the internal list.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalItemAt(System.Int32)">
            <summary>
            Return item at the given index in the internal list.
            </summary>
            <returns>Item at the given index in the internal list.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalContains(System.Object)">
            <summary>
            Return true if internal list contains the item.
            </summary>
            <returns>True if internal list contains the item.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalGetEnumerator">
            <summary>
            Return an enumerator for the internal list.
            </summary>
            <returns>An enumerator for the internal list.</returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalList">
            <summary>
            Gets a protected accessor to private _internalList field.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.IsGrouping">
            <summary>
            Gets a value indicating whether grouping is supported.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.InternalCount">
            <summary>
            Gets a protected accessor to private count.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.Debug_ValidateCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Validates provided NotifyCollectionChangedEventArgs
            </summary>
            <param name="e">NotifyCollectionChangedEventArgs to validate.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.OnPropertyChanged(System.String)">
            <summary>
            Helper to raise a PropertyChanged event  />).
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ListCollectionView.EffectiveNotifyCollectionChangedAction">
            <summary>
            Private EffectiveNotifyCollectionChangedAction enum
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo">
            <summary>
            Stores information about a Binding, including the BindingExpression, BindingTarget and associated Element.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo.#ctor(Windows.UI.Xaml.Data.BindingExpression,Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo"/> class
            with the specified BindingExpression, DependencyProperty and FrameworkElement.
            </summary>
            <param name="bindingExpression">BindingExpression</param>
            <param name="bindingTarget">BindingTarget</param>
            <param name="element">Element</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo.BindingExpression">
            <summary>
            Gets or sets the BindingExpression.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo.BindingTarget">
            <summary>
            Gets or sets the BindingTarget.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Data.Utilities.BindingInfo.Element">
            <summary>
            Gets or sets the Element.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil">
            <summary>
            Static class with methods to help with validation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.AddIfNew(System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Adds a new ValidationResult to the collection if an equivalent does not exist.
            </summary>
            <param name="collection">ValidationResults to search through</param>
            <param name="value">ValidationResult to add</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.CatchNonCriticalExceptions(System.Action)">
            <summary>
            Performs an action and catches any non-critical exceptions.
            </summary>
            <param name="action">Action to perform</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.ContainsEqualValidationResult(System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Determines whether the collection contains an equivalent ValidationResult
            </summary>
            <param name="collection">ValidationResults to search through</param>
            <param name="target">ValidationResult to search for</param>
            <returns>True when the collection contains an equivalent ValidationResult.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.ContainsMemberName(System.ComponentModel.DataAnnotations.ValidationResult,System.String)">
            <summary>
            Searches a ValidationResult for the specified target member name.  If the target is null
            or empty, this method will return true if there are no member names at all.
            </summary>
            <param name="validationResult">ValidationResult to search.</param>
            <param name="target">Member name to search for.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.FindEqualValidationResult(System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Finds an equivalent ValidationResult if one exists.
            </summary>
            <param name="collection">ValidationResults to search through.</param>
            <param name="target">ValidationResult to find.</param>
            <returns>Equal ValidationResult if found, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.GetBindingInfo(Windows.UI.Xaml.FrameworkElement,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Type[])">
            <summary>
            Searches through all Bindings on the specified element and returns a list of BindingInfo objects
            for each Binding that matches the specified criteria.
            </summary>
            <param name="element">FrameworkElement to search</param>
            <param name="dataItem">Only return Bindings with a context element equal to this object</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <param name="searchChildren">If true, searches through the children</param>
            <param name="excludedTypes">The Binding search will skip all of these Types</param>
            <returns>List of BindingInfo for every Binding found</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.GetDependencyProperties(Windows.UI.Xaml.FrameworkElement,System.Boolean)">
            <summary>
            Gets a list of the specified FrameworkElement's DependencyProperties. This method will return all
            DependencyProperties of the element unless 'useBlockList' is true, in which case all bindings on elements
            that are typically not used as input controls will be ignored.
            </summary>
            <param name="element">FrameworkElement of interest</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <returns>List of DependencyProperties</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.IsCriticalException(System.Exception)">
            <summary>
            Determines if the specified exception is un-recoverable.
            </summary>
            <param name="exception">The exception.</param>
            <returns>True if the process cannot be recovered from the exception.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Data.Utilities.ValidationUtil.GetBindingInfoOfSingleElement(Windows.UI.Xaml.FrameworkElement,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Gets a list of active bindings on the specified FrameworkElement.  Bindings are gathered
            according to the same conditions BindingGroup uses to find bindings of descendant elements
            within the visual tree.
            </summary>
            <param name="element">Root FrameworkElement to search under</param>
            <param name="inheritedDataContext">DomainContext of the element's parent</param>
            <param name="dataItem">Target DomainContext</param>
            <param name="twoWayOnly">If true, only returns TwoWay Bindings</param>
            <param name="useBlockList">If true, ignores elements not typically used for input</param>
            <returns>List of active bindings on the specified FrameworkElement.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer">
            <summary>
            Exposes <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid" /> types to UI Automation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer"/> class.
            </summary>
            <param name="owner">
            The <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid" /> that is associated with this <see cref="T:Windows.UI.Xaml.Automation.Peers.DataGridAutomationPeer" />.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
            <returns>The children elements.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.GetNameCore">
            <summary>
            Called by GetName.
            </summary>
            <returns>
            Returns the first of these that is not null or empty:
            - Value returned by the base implementation
            - Name of the owning DataGrid
            - DataGrid class name
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer">
            <summary>
            AutomationPeer for DataGridCell
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridCell</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridCellAutomationPeer.IsKeyboardFocusableCore">
            <summary>
            Gets a value that indicates whether the element can accept keyboard focus.
            </summary>
            <returns>true if the element can accept keyboard focus; otherwise, false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridColumnHeader
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridColumnHeader</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetHelpTextCore">
            <summary>
            Gets the string that describes the functionality of the control that is associated with the automation peer.
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeaderAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>True if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
            <summary>
            AutomationPeer for DataGridColumnHeadersPresenter
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridColumnHeadersPresenter</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>True if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
            <summary>
            AutomationPeer for DataGridDetailsPresenter
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridDetailsPresenter</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the DataGridDetailsPresenter element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsControlElementCore">
            <summary>
            Gets or sets a value indicating whether the DataGridDetailsPresenter associated with this UIElementAutomationPeer
            is understood by the end user as interactive.
            </summary>
            <returns>True if the DataGridDetailsPresenter associated with this UIElementAutomationPeer
            is understood by the end user as interactive.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridDetailsPresenterAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>True if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer">
            <summary>
            AutomationPeer for a group of items in a DataGrid
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.#ctor(Windows.UI.Xaml.Data.ICollectionViewGroup,Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.OwningDataGrid">
            <summary>
            Gets the owning DataGrid
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.OwningDataGridPeer">
            <summary>
            Gets the owning DataGrid's Automation Peer
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.OwningRowGroupHeader">
            <summary>
            Gets the owning DataGridRowGroupHeader
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.OwningRowGroupHeaderPeer">
            <summary>
            Gets the owning DataGridRowGroupHeader's Automation Peer
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetAcceleratorKeyCore">
            <summary>
            Returns the accelerator key for the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The accelerator key for the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetAccessKeyCore">
            <summary>
            Returns the access key for the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The access key for the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The control type for the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetAutomationIdCore">
            <summary>
            Returns the string that uniquely identifies the FrameworkElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The string that uniquely identifies the FrameworkElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetBoundingRectangleCore">
            <summary>
            Returns the Rect that represents the bounding rectangle of the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The Rect that represents the bounding rectangle of the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
            <returns>The children elements.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetClickablePointCore">
            <summary>
            Returns a Point that represents the clickable space that is on the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>A Point that represents the clickable space that is on the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the control that is associated with the automation peer.
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemStatusCore">
            <summary>
            Returns a string that communicates the visual status of the UIElement that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>A string that communicates the visual status of the UIElement that is associated with this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetItemTypeCore">
            <summary>
            Returns a human-readable string that contains the item type that the UIElement for this DataGridGroupItemAutomationPeer represents.
            </summary>
            <returns>A human-readable string that contains the item type that the UIElement for this DataGridGroupItemAutomationPeer represents.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetLabeledByCore">
            <summary>
            Returns the AutomationPeer for the element that is targeted to the UIElement for this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The AutomationPeer for the element that is targeted to the UIElement for this DataGridGroupItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns a localized human readable string for this control type.
            </summary>
            <returns>A localized human readable string for this control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetNameCore">
            <summary>
            Returns the string that describes the functionality of the control that is associated with this DataGridGroupItemAutomationPeer.
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetOrientationCore">
            <summary>
            Returns a value indicating whether the element associated with this DataGridGroupItemAutomationPeer is laid out in a specific direction.
            </summary>
            <returns>A value indicating whether the element associated with this DataGridGroupItemAutomationPeer is laid out in a specific direction.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.HasKeyboardFocusCore">
            <summary>
            Returns a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer can accept keyboard focus.
            </summary>
            <returns>True if the element is focusable by the keyboard; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsContentElementCore">
            <summary>
            Returns a value indicating whether the element associated with this DataGridGroupItemAutomationPeer is an element that contains data that is presented to the user.
            </summary>
            <returns>True if the element contains data for the user to read; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsControlElementCore">
            <summary>
            Gets or sets a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer
            is understood by the end user as interactive.
            </summary>
            <returns>True if the UIElement associated with this DataGridGroupItemAutomationPeer
            is understood by the end user as interactive.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsEnabledCore">
            <summary>
            Gets a value indicating whether this DataGridGroupItemAutomationPeer can receive and send events to the associated element.
            </summary>
            <returns>True if this DataGridGroupItemAutomationPeer can receive and send events; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsKeyboardFocusableCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer can accept keyboard focus.
            </summary>
            <returns>True if the UIElement associated with this DataGridGroupItemAutomationPeer can accept keyboard focus.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsOffscreenCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer is off the screen.
            </summary>
            <returns>True if the element is not on the screen; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsPasswordCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer contains protected content.
            </summary>
            <returns>True if the UIElement contains protected content.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.IsRequiredForFormCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridGroupItemAutomationPeer is required to be completed on a form.
            </summary>
            <returns>True if the UIElement is required to be completed on a form.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridGroupItemAutomationPeer.SetFocusCore">
            <summary>
            Sets the keyboard input focus on the UIElement associated with this DataGridGroupItemAutomationPeer.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer">
            <summary>
            AutomationPeer for an item in a DataGrid
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetAcceleratorKeyCore">
            <summary>
            Returns the accelerator key for the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The accelerator key for the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetAccessKeyCore">
            <summary>
            Returns the access key for the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The access key for the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The control type for the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetAutomationIdCore">
            <summary>
            Returns the string that uniquely identifies the FrameworkElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The string that uniquely identifies the FrameworkElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetBoundingRectangleCore">
            <summary>
            Returns the Rect that represents the bounding rectangle of the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The Rect that represents the bounding rectangle of the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
            <returns>The children elements.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetClickablePointCore">
            <summary>
            Returns a Point that represents the clickable space that is on the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>A Point that represents the clickable space that is on the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the control that is associated with the automation peer.
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetItemStatusCore">
            <summary>
            Returns a string that communicates the visual status of the UIElement that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>A string that communicates the visual status of the UIElement that is associated with this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetItemTypeCore">
            <summary>
            Returns a human-readable string that contains the item type that the UIElement for this DataGridItemAutomationPeer represents.
            </summary>
            <returns>A human-readable string that contains the item type that the UIElement for this DataGridItemAutomationPeer represents.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetLabeledByCore">
            <summary>
            Returns the AutomationPeer for the element that is targeted to the UIElement for this DataGridItemAutomationPeer.
            </summary>
            <returns>The AutomationPeer for the element that is targeted to the UIElement for this DataGridItemAutomationPeer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns a localized human readable string for this control type.
            </summary>
            <returns>A localized human readable string for this control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetNameCore">
            <summary>
            Returns the string that describes the functionality of the control that is associated with this DataGridItemAutomationPeer.
            </summary>
            <returns>The string that contains the help text.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetOrientationCore">
            <summary>
            Returns a value indicating whether the element associated with this DataGridItemAutomationPeer is laid out in a specific direction.
            </summary>
            <returns>A value indicating whether the element associated with this DataGridItemAutomationPeer is laid out in a specific direction.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
            <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
            <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.HasKeyboardFocusCore">
            <summary>
            Returns a value indicating whether the UIElement associated with this DataGridItemAutomationPeer can accept keyboard focus.
            </summary>
            <returns>True if the element is focusable by the keyboard; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsContentElementCore">
            <summary>
            Returns a value indicating whether the element associated with this DataGridItemAutomationPeer is an element that contains data that is presented to the user.
            </summary>
            <returns>True if the element contains data for the user to read; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsControlElementCore">
            <summary>
            Gets or sets a value indicating whether the UIElement associated with this DataGridItemAutomationPeer
            is understood by the end user as interactive.
            </summary>
            <returns>True if the UIElement associated with this DataGridItemAutomationPeer
            is understood by the end user as interactive.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsEnabledCore">
            <summary>
            Gets a value indicating whether this DataGridItemAutomationPeer can receive and send events to the associated element.
            </summary>
            <returns>True if this DataGridItemAutomationPeer can receive and send events; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsKeyboardFocusableCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridItemAutomationPeer can accept keyboard focus.
            </summary>
            <returns>True if the UIElement associated with this DataGridItemAutomationPeer can accept keyboard focus.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsOffscreenCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridItemAutomationPeer is off the screen.
            </summary>
            <returns>True if the element is not on the screen; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsPasswordCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridItemAutomationPeer contains protected content.
            </summary>
            <returns>True if the UIElement contains protected content.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.IsRequiredForFormCore">
            <summary>
            Gets a value indicating whether the UIElement associated with this DataGridItemAutomationPeer is required to be completed on a form.
            </summary>
            <returns>True if the UIElement is required to be completed on a form.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridItemAutomationPeer.SetFocusCore">
            <summary>
            Sets the keyboard input focus on the UIElement associated with this DataGridItemAutomationPeer.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer">
            <summary>
            AutomationPeer for DataGridRow
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridRow</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowAutomationPeer.GetItemTypeCore">
            <summary>
            Returns a human-readable string that contains the item type that the UIElement for this DataGridRowAutomationPeer represents.
            </summary>
            <returns>A human-readable string that contains the item type that the UIElement for this DataGridRowAutomationPeer represents.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowGroupHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridRowGroupHeader
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowGroupHeaderAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridRowGroupHeader</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowGroupHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer">
            <summary>
            AutomationPeer for DataGridRowHeader
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer"/> class.
            </summary>
            <param name="owner">DataGridRowHeader</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the element.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowHeaderAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>True if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer">
            <summary>
            AutomationPeer for the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer"/> class.
            </summary>
            <param name="owner">Owning DataGridRowsPresenter</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the element that is associated with the UI Automation peer.
            </summary>
            <returns>The control type.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
            <returns>The children elements.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer.GetClassNameCore">
            <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
            <returns>The string that contains the name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Automation.Peers.DataGridRowsPresenterAutomationPeer.IsContentElementCore">
            <summary>
            Gets a value that specifies whether the element is a content element.
            </summary>
            <returns>True if the element is a content element; otherwise false</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid">
            <summary>
            Control to represent data in columns and rows.
            </summary>
            <summary>
            Control to represent data in columns and rows.
            </summary>
            <summary>
            Control to represent data in columns and rows.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DATAGRID_defaultColumnDisplayOrder">
            <summary>
            The default order to use for columns when there is no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order"/>
            value available for the property.
            </summary>
            <remarks>
            The value of 10,000 comes from the DataAnnotations spec, allowing
            some properties to be ordered at the beginning and some at the end.
            </remarks>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoGeneratingColumn">
            <summary>
            Occurs one time for each public, non-static property in the bound data type when the
            <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSource"/> property is changed and the
            <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoGenerateColumns"/> property is true.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.BeginningEdit">
            <summary>
            Occurs before a cell or row enters editing mode.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CellEditEnded">
            <summary>
            Occurs after cell editing has ended.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CellEditEnding">
            <summary>
            Occurs immediately before cell editing has ended.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnDisplayIndexChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.DisplayIndex"/>
            property of a column changes.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderDragCompleted">
            <summary>
            Occurs when the user drops a column header that was being dragged using the mouse.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderDragDelta">
            <summary>
            Occurs one or more times while the user drags a column header using the mouse.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderDragStarted">
            <summary>
            Occurs when the user begins dragging a column header using the mouse.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnReordered">
            <summary>
            Raised when column reordering ends, to allow subscribers to clean up.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnReordering">
            <summary>
            Raised when starting a column reordering action.  Subscribers to this event can
            set tooltip and caret UIElements, constrain tooltip position, indicate that
            a preview should be shown, or cancel reordering.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CopyingRowClipboardContent">
            <summary>
            This event is raised by OnCopyingRowClipboardContent method after the default row content is prepared.
            Event listeners can modify or add to the row clipboard content.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CurrentCellChanged">
            <summary>
            Occurs when a different cell becomes the current cell.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.LoadingRow">
            <summary>
            Occurs after a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>
            is instantiated, so that you can customize it before it is used.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.LoadingRowDetails">
            <summary>
            Occurs when a new row details template is applied to a row, so that you can customize
            the details section before it is used.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.LoadingRowGroup">
            <summary>
            Occurs before a DataGridRowGroupHeader header is used.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.PreparingCellForEdit">
            <summary>
            Occurs when a cell in a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn"/> enters editing mode.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsVisibilityChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsVisibilityMode"/>
            property value changes.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowEditEnded">
            <summary>
            Occurs when the row has been successfully committed or canceled.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowEditEnding">
            <summary>
            Occurs immediately before the row has been successfully committed or canceled.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectionChanged">
            <summary>
            Occurs when the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedItem"/> or
            <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedItems"/> property value changes.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.Sorting">
            <summary>
            Occurs when the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn"/> sorting request is triggered.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UnloadingRow">
            <summary>
            Occurs when a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>
            object becomes available for reuse.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UnloadingRowGroup">
            <summary>
            Occurs when the DataGridRowGroupHeader is available for reuse.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UnloadingRowDetails">
            <summary>
            Occurs when a row details element becomes available for reuse.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the background of odd-numbered rows.
            </summary>
            <returns>
            The brush that is used to paint the background of odd-numbered rows.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowBackground"/>
            dependency property.
            </summary>
            <returns>
            The identifier for the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowBackground"/>
            dependency property.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint the foreground of odd-numbered rows.
            </summary>
            <returns>
            The brush that is used to paint the foreground of odd-numbered rows.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowForegroundProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowForeground"/>
            dependency property.
            </summary>
            <returns>
            The identifier for the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AlternatingRowForeground"/>
            dependency property.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AreRowDetailsFrozen">
            <summary>
            Gets or sets a value indicating whether the row details sections remain
            fixed at the width of the display area or can scroll horizontally.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AreRowDetailsFrozenProperty">
            <summary>
            Identifies the AreRowDetailsFrozen dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AreRowGroupHeadersFrozen">
            <summary>
            Gets or sets a value indicating whether the row group header sections
            remain fixed at the width of the display area or can scroll horizontally.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AreRowGroupHeadersFrozenProperty">
            <summary>
            Identifies the AreRowDetailsFrozen dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether columns are created
            automatically when the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSource"/> property is set.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the AutoGenerateColumns dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserReorderColumns">
            <summary>
            Gets or sets a value indicating whether the user can change
            the column display order by dragging column headers with the mouse.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserReorderColumnsProperty">
            <summary>
            Identifies the CanUserReorderColumns dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserResizeColumns">
            <summary>
            Gets or sets a value indicating whether the user can adjust column widths using the mouse.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserResizeColumnsProperty">
            <summary>
            Identifies the CanUserResizeColumns dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCanUserResizeColumnsPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            CanUserResizeColumns property changed handler.
            </summary>
            <param name="d">DataGrid that changed its CanUserResizeColumns.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserSortColumns">
            <summary>
            Gets or sets a value indicating whether the user can sort columns by clicking the column header.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserSortColumnsProperty">
            <summary>
            Identifies the CanUserSortColumns dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering the data grid cells.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CellStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CellStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClipboardCopyMode">
            <summary>
            Gets or sets the property which determines how DataGrid content is copied to the Clipboard.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClipboardCopyModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClipboardCopyMode"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of the column headers row.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderHeightProperty">
            <summary>
            Identifies the ColumnHeaderHeight dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnHeaderHeightPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ColumnHeaderHeightProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnHeaderHeight.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnHeaderStyleProperty">
            <summary>
            Identifies the ColumnHeaderStyle dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnWidth">
            <summary>
            Gets or sets the standard width or automatic sizing mode of columns in the control.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnWidthProperty">
            <summary>
            Identifies the ColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnWidthPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DataFetchSize">
            <summary>
            Gets or sets the amount of data to fetch for virtualizing/prefetch operations.
            </summary>
            <returns>
            The amount of data to fetch per interval, in pages.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DataFetchSizeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DataFetchSize"/> dependency property
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnDataFetchSizePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            DataFetchSizeProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its DataFetchSize.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DragIndicatorStyle">
            <summary>
            Gets or sets the style that is used when rendering the drag indicator
            that is displayed while dragging column headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DragIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DragIndicatorStyle"/>
            dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DropLocationIndicatorStyle">
            <summary>
            Gets or sets the style that is used when rendering the column headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DropLocationIndicatorStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DropLocationIndicatorStyle"/>
            dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.FrozenColumnCount">
            <summary>
            Gets or sets the number of columns that the user cannot scroll horizontally.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.FrozenColumnCountProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.FrozenColumnCount"/>
            dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GridLinesVisibility">
            <summary>
            Gets or sets a value indicating which grid lines separating inner cells are shown.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GridLinesVisibilityProperty">
            <summary>
            Identifies the GridLinesVisibility dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnGridLinesVisibilityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            GridLinesProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its GridLines.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HeadersVisibility">
            <summary>
            Gets or sets a value indicating the visibility of row and column headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HeadersVisibilityProperty">
            <summary>
            Identifies the HeadersVisibility dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnHeadersVisibilityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeadersVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HeadersVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HorizontalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint grid lines separating rows.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HorizontalGridLinesBrushProperty">
            <summary>
            Identifies the HorizontalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnHorizontalGridLinesBrushPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalGridLinesBrushProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HorizontalGridLinesBrush.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value indicating how the horizontal scroll bar is displayed.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnHorizontalScrollBarVisibilityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalScrollBarVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its HorizontalScrollBarVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the user can edit the values in the control.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnIsReadOnlyPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnlyProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its IsReadOnly.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IsValid">
            <summary>
            Gets a value indicating whether data in the grid is valid.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnIsValidPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingThreshold">
            <summary>
            Gets or sets the threshold range that governs when the DataGrid class will begin to prefetch more items.
            </summary>
            <returns>
            The loading threshold, in terms of pages.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingThresholdProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingThreshold"/> dependency property
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnIncrementalLoadingThresholdPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IncrementalLoadingThresholdProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its IncrementalLoadingThreshold.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingTrigger">
            <summary>
            Gets or sets a value that indicates the conditions for prefetch operations by the DataGrid class.
            </summary>
            <returns>
            An enumeration value that indicates the conditions that trigger prefetch operations. The default is **Edge**.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingTriggerProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncrementalLoadingTrigger"/> dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of the control.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnItemsSourcePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ItemsSource.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of columns in the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.MaxColumnWidthProperty">
            <summary>
            Identifies the MaxColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnMaxColumnWidthPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.MinColumnWidth">
            <summary>
            Gets or sets the minimum width of columns in the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.MinColumnWidthProperty">
            <summary>
            Identifies the MinColumnWidth dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnMinColumnWidthPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            MinColumnWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its ColumnWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowBackground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint row backgrounds.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowBackground"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the details section of rows.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsTemplateProperty">
            <summary>
            Identifies the RowDetailsTemplate dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsVisibilityMode">
            <summary>
            Gets or sets a value indicating when the details sections of rows are displayed.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsVisibilityModeProperty">
            <summary>
            Identifies the RowDetailsVisibilityMode dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowDetailsVisibilityModePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            RowDetailsVisibilityModeProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowDetailsVisibilityMode.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowForeground">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used as the default cells foreground.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowForegroundProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowForeground"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeight">
            <summary>
            Gets or sets the standard height of rows in the control.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeightProperty">
            <summary>
            Identifies the RowHeight dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowHeightPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            RowHeightProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowHeight.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header column.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeaderWidthProperty">
            <summary>
            Identifies the RowHeaderWidth dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowHeaderWidthPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            RowHeaderWidthProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its RowHeaderWidth.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowHeaderStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowStyle">
            <summary>
            Gets or sets the style that is used when rendering the rows.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectionMode">
            <summary>
            Gets or sets the selection behavior of the data grid.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnSelectionModePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectionModeProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectionMode.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedIndex">
            <summary>
            Gets or sets the index of the current selection.
            </summary>
            <returns>The index of the current selection, or -1 if the selection is empty.</returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnSelectedIndexPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndexProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectedIndex.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedItem">
            <summary>
            Gets or sets the data item corresponding to the selected row.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnSelectedItemPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its SelectedItem.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.VerticalGridLinesBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that is used to paint grid lines separating columns.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.VerticalGridLinesBrushProperty">
            <summary>
            Identifies the VerticalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnVerticalGridLinesBrushPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalGridLinesBrushProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its VerticalGridLinesBrush.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value indicating how the vertical scroll bar is displayed.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnVerticalScrollBarVisibilityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalScrollBarVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGrid that changed its VerticalScrollBarVisibility.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.Columns">
            <summary>
            Gets a collection that contains all the columns in the control.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CurrentColumn">
            <summary>
            Gets or sets the column that contains the current cell.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowGroupHeaderPropertyNameAlternative">
            <summary>
            Gets or sets the label to display in a DataGridRowGroupHeader when its PropertyName is not set.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowGroupHeaderStyles">
            <summary>
            Gets the style that is used when rendering the row group header.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SelectedItems">
            <summary>
            Gets a list that contains the data items corresponding to the selected rows.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CurrentItem">
            <summary>
            Gets the data item bound to the row that contains the current cell.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoSizingColumns">
            <summary>
            Gets or sets a value indicating whether or not at least one auto-sizing column is waiting for all the rows
            to be measured before its final width is determined.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClipboardContentControl">
            <summary>
            Gets an empty content control that's used during the DataGrid's copy procedure
            to determine the value of a ClipboardContentBinding for a particular column and item.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UsesStarSizing">
            <summary>
            Gets a value indicating whether or not to use star-sizing logic.  If the DataGrid has infinite available space,
            then star sizing doesn't make sense.  In this case, all star columns grow to a predefined size of
            10,000 pixels in order to show the developer that star columns shouldn't be used.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.BeginEdit">
            <summary>
            Enters editing mode for the current cell and current row (if they're not already in editing mode).
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.BeginEdit(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Enters editing mode for the current cell and current row (if they're not already in editing mode).
            </summary>
            <param name="editingEventArgs">Provides information about the user gesture that caused the call to BeginEdit. Can be null.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CancelEdit">
            <summary>
            Cancels editing mode and restores the original value.
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CancelEdit(Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit)">
            <summary>
            Cancels editing mode for the specified DataGridEditingUnit and restores its original value.
            </summary>
            <param name="editingUnit">Specifies whether to cancel edit for a Cell or Row.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CommitEdit">
            <summary>
            Commits editing mode and pushes changes to the backend.
            </summary>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CommitEdit(Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit,System.Boolean)">
            <summary>
            Commits editing mode for the specified DataGridEditingUnit and pushes changes to the backend.
            </summary>
            <param name="editingUnit">Specifies whether to commit edit for a Cell or Row.</param>
            <param name="exitEditingMode">Editing mode is left if True.</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetGroupFromItem(System.Object,System.Int32)">
            <summary>
            Returns the Group at the indicated level or null if the item is not in the ItemsSource
            </summary>
            <param name="item">item</param>
            <param name="groupLevel">groupLevel</param>
            <returns>The group the given item falls under or null if the item is not in the ItemsSource</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ScrollIntoView(System.Object,Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Scrolls the specified item or RowGroupHeader and/or column into view.
            If item is not null: scrolls the row representing the item into view;
            If column is not null: scrolls the column into view;
            If both item and column are null, the method returns without scrolling.
            </summary>
            <param name="item">an item from the DataGrid's items source or a CollectionViewGroup from the collection view</param>
            <param name="column">a column from the DataGrid's columns collection</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>.
            </summary>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
            <returns>
            The actual size used by the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> to prepare for
            arranging them during the
            <see cref="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <returns>
            The size that the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that
            child elements should not exceed.
            </param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DisplayIndexComparer">
            <summary>
            Comparator class so we can sort list by the display index
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnAutoGeneratingColumn(Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs)">
            <summary>
            Raises the AutoGeneratingColumn event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnBeginningEdit(Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs)">
            <summary>
            Raises the BeginningEdit event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCellEditEnded(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs)">
            <summary>
            Raises the CellEditEnded event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCellEditEnding(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs)">
            <summary>
            Raises the CellEditEnding event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCopyingRowClipboardContent(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs)">
            <summary>
            This method raises the CopyingRowClipboardContent event.
            </summary>
            <param name="e">Contains the necessary information for generating the row clipboard content.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
            <summary>
            Raises the CurrentCellChanged event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnLoadingRow(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs)">
            <summary>
            Raises the LoadingRow event for row preparation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnLoadingRowGroup(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs)">
            <summary>
            Raises the LoadingRowGroup event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnLoadingRowDetails(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the LoadingRowDetails for row details preparation
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Scrolls the DataGrid according to the direction of the delta.
            </summary>
            <param name="e">PointerRoutedEventArgs</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnPreparingCellForEdit(Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs)">
            <summary>
            Raises the PreparingCellForEdit event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowEditEnded(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs)">
            <summary>
            Raises the RowEditEnded event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowEditEnding(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs)">
            <summary>
            Raises the RowEditEnding event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnSelectionChanged(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the SelectionChanged event and clears the _selectionChanged.
            This event won't get raised again until after _selectionChanged is set back to true.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnUnloadingRow(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs)">
            <summary>
            Raises the UnloadingRow event for row recycling.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnUnloadingRowDetails(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the UnloadingRowDetails event
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnUnloadingRowGroup(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs)">
            <summary>
            Raises the UnloadingRowGroup event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CancelEdit(Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit,System.Boolean)">
            <summary>
            Cancels editing mode for the specified DataGridEditingUnit and restores its original value.
            </summary>
            <param name="editingUnit">Specifies whether to cancel edit for a Cell or Row.</param>
            <param name="raiseEvents">Specifies whether or not to raise editing events</param>
            <returns>True if operation was successful. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CoerceSelectedItem">
            <summary>
            call when: selection changes or SelectedItems object changes
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ProcessSelectionAndCurrency(System.Int32,System.Object,System.Int32,Microsoft.Toolkit.Uwp.UI.Controls.DataGridSelectionAction,System.Boolean)">
            <summary>
            Selects items and updates currency based on parameters
            </summary>
            <param name="columnIndex">column index to make current</param>
            <param name="item">data item or CollectionViewGroup to make current</param>
            <param name="backupSlot">slot to use in case the item is no longer valid</param>
            <param name="action">selection action to perform</param>
            <param name="scrollIntoView">whether or not the new current item should be scrolled into view</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.WaitForLostFocus(System.Action)">
            <summary>
            If the editing element has focus, this method will set focus to the DataGrid itself
            in order to force the element to lose focus.  It will then wait for the editing element's
            LostFocus event, at which point it will perform the specified action.
            NOTE: It is important to understand that the specified action will be performed when the editing
            element loses focus only if this method returns true.  If it returns false, then the action
            will not be performed later on, and should instead be performed by the caller, if necessary.
            </summary>
            <param name="action">Action to perform after the editing element loses focus</param>
            <returns>True if the editing element had focus and the action was cached away; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.EditingElement_LostFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the current editing element's LostFocus event by performing any actions that
            were cached by the WaitForLostFocus method.
            </summary>
            <param name="sender">Editing element</param>
            <param name="e">RoutedEventArgs</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.EnsureRowHeaderWidth">
            <summary>
            Ensures that the RowHeader widths are properly sized and invalidates them if they are not
            </summary>
            <returns>True if a RowHeader or RowGroupHeader was invalidated</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ExitEdit(System.Boolean)">
            <summary>
            Exits editing mode without trying to commit or revert the editing, and
            without repopulating the edited row's cell.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.FormatClipboardContent(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs)">
            <summary>
            This method formats a row (specified by a DataGridRowClipboardEventArgs) into
            a single string to be added to the Clipboard when the DataGrid is copying its contents.
            </summary>
            <param name="e">DataGridRowClipboardEventArgs</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ProcessCopyKey">
            <summary>
            Handles the case where a 'Copy' key ('C' or 'Insert') has been pressed.  If pressed in combination with
            the control key, and the necessary prerequisites are met, the DataGrid will copy its contents
            to the Clipboard as text.
            </summary>
            <returns>Whether or not the DataGrid handled the key press.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UpdateValidationResults(System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
            <summary>
            Updates the DataGrid's validation results, modifies the ValidationSummary's items,
            and sets the IsValid states of the UIElements.
            </summary>
            <param name="newValidationResults">New validation results.</param>
            <param name="scrollIntoView">If the validation results have changed, scrolls the editing row into view.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UpdateValidationStatus">
            <summary>
            Updates the IsValid states of the DataGrid, the EditingRow and its cells. All cells related to
            property-level errors are set to Invalid.  If there is an object-level error selected in the
            ValidationSummary, then its associated cells will also be flagged (if there are any).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ValidateEditingRow(System.Boolean,System.Boolean)">
            <summary>
            Validates the current editing row and updates the visual states.
            </summary>
            <param name="scrollIntoView">If true, will scroll the editing row into view when a new error is introduced.</param>
            <param name="wireEvents">If true, subscribes to the asynchronous INDEI ErrorsChanged events.</param>
            <returns>True if the editing row is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ValidateIndei(System.ComponentModel.INotifyDataErrorInfo,System.String,System.String,System.String,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
            <summary>
            Checks an INDEI data object for errors on the specified path. New errors are added to the
            list of validation results.
            </summary>
            <param name="indei">INDEI object to validate.</param>
            <param name="bindingProperty">Name of the property to validate.</param>
            <param name="bindingPath">Path of the binding.</param>
            <param name="declaringPath">Path of the INDEI object.</param>
            <param name="validationResults">List of results to add to.</param>
            <param name="wireEvents">True if the ErrorsChanged event should be subscribed to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ValidationItem_ErrorsChanged(System.Object,System.ComponentModel.DataErrorsChangedEventArgs)">
            <summary>
            Handles the asynchronous INDEI errors that occur while the DataGrid is in editing mode.
            </summary>
            <param name="sender">INDEI item whose errors changed.</param>
            <param name="e">Error event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnDisplayIndexChanged(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs)">
            <summary>
            OnColumnDisplayIndexChanged
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnReordered(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs)">
            <summary>
            OnColumnReordered
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnReordering(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs)">
            <summary>
            OnColumnReordering
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnSorting(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs)">
            <summary>
            OnColumnSorting
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AdjustColumnWidths(System.Int32,System.Double,System.Boolean)">
            <summary>
            Adjusts the widths of all columns with DisplayIndex >= displayIndex such that the total
            width is adjusted by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="amount">Adjustment amount (positive for increase, negative for decrease).</param>
            <param name="userInitiated">Whether or not this adjustment was initiated by a user action.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoSizeColumn(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double)">
            <summary>
            Grows an auto-column's width to the desired width.
            </summary>
            <param name="column">Auto-column to adjust.</param>
            <param name="desiredWidth">The new desired width of the column.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DecreaseColumnWidths(System.Int32,System.Double,System.Boolean)">
            <summary>
            Decreases the widths of all columns with DisplayIndex >= displayIndex such that the total
            width is decreased by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="amount">Amount to decrease (in pixels).</param>
            <param name="userInitiated">Whether or not this adjustment was initiated by a user action.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncreaseColumnWidths(System.Int32,System.Double,System.Boolean)">
            <summary>
            Increases the widths of all columns with DisplayIndex >= displayIndex such that the total
            width is increased by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="amount">Amount of increase (in pixels).</param>
            <param name="userInitiated">Whether or not this adjustment was initiated by a user action.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnCanUserResizeChanged(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Invalidates the widths of all columns because the resizing behavior of an individual column has changed.
            </summary>
            <param name="column">Column with CanUserResize property that has changed.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnMaxWidthChanged(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double)">
            <summary>
            Adjusts the specified column's width according to its new maximum value.
            </summary>
            <param name="column">The column to adjust.</param>
            <param name="oldValue">The old ActualMaxWidth of the column.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnColumnMinWidthChanged(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double)">
            <summary>
            Adjusts the specified column's width according to its new minimum value.
            </summary>
            <param name="column">The column to adjust.</param>
            <param name="oldValue">The old ActualMinWidth of the column.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RefreshColumnElements(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.String)">
            <summary>
            Called when a column property changes, and its cells need to adjust that column change.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DecreaseNonStarColumnWidth(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double,System.Double)">
            <summary>
            Decreases the width of a non-star column by the given amount, if possible.  If the total desired
            adjustment amount could not be met, the remaining amount of adjustment is returned.  The adjustment
            stops when the column's target width has been met.
            </summary>
            <param name="column">Column to adjust.</param>
            <param name="targetWidth">The target width of the column (in pixels).</param>
            <param name="amount">Amount to decrease (in pixels).</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncreaseNonStarColumnWidth(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double,System.Double)">
            <summary>
            Increases the width of a non-star column by the given amount, if possible.  If the total desired
            adjustment amount could not be met, the remaining amount of adjustment is returned.  The adjustment
            stops when the column's target width has been met.
            </summary>
            <param name="column">Column to adjust.</param>
            <param name="targetWidth">The target width of the column (in pixels).</param>
            <param name="amount">Amount to increase (in pixels).</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AdjustStarColumnWidths(System.Int32,System.Double,System.Boolean)">
            <summary>
            Adjusts the widths of all star columns with DisplayIndex >= displayIndex such that the total
            width is adjusted by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="adjustment">Adjustment amount (positive for increase, negative for decrease).</param>
            <param name="userInitiated">Whether or not this adjustment was initiated by a user action.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AdjustStarColumnWidths(System.Int32,System.Double,System.Boolean,System.Func{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double})">
            <summary>
            Adjusts the widths of all star columns with DisplayIndex >= displayIndex such that the total
            width is adjusted by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.  The columns will stop adjusting
            once they hit their target widths.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="remainingAdjustment">Adjustment amount (positive for increase, negative for decrease).</param>
            <param name="userInitiated">Whether or not this adjustment was initiated by a user action.</param>
            <param name="targetWidth">The target width of the column.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.DecreaseNonStarColumnWidths(System.Int32,System.Func{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double},System.Double,System.Boolean,System.Boolean)">
            <summary>
            Decreases the widths of all non-star columns with DisplayIndex >= displayIndex such that the total
            width is decreased by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.  The adjustment stops when
            the column's target width has been met.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="targetWidth">The target width of the column (in pixels).</param>
            <param name="amount">Amount to decrease (in pixels).</param>
            <param name="reverse">Whether or not to reverse the order in which the columns are traversed.</param>
            <param name="affectNewColumns">Whether or not to adjust widths of columns that do not yet have their initial desired width.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetColumnXFromIndex(System.Int32)">
            <summary>
                 Returns the absolute coordinate of the left edge of the given column (including
                 the potential gridline - that is the left edge of the gridline is returned). Note that
                 the column does not need to be in the display area.
            </summary>
            <returns>Absolute coordinate of the left edge of the given column.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.IncreaseNonStarColumnWidths(System.Int32,System.Func{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Double},System.Double,System.Boolean,System.Boolean)">
            <summary>
            Increases the widths of all non-star columns with DisplayIndex >= displayIndex such that the total
            width is increased by the given amount, if possible.  If the total desired adjustment amount
            could not be met, the remaining amount of adjustment is returned.  The adjustment stops when
            the column's target width has been met.
            </summary>
            <param name="displayIndex">Starting column DisplayIndex.</param>
            <param name="targetWidth">The target width of the column (in pixels).</param>
            <param name="amount">Amount to increase (in pixels).</param>
            <param name="reverse">Whether or not to reverse the order in which the columns are traversed.</param>
            <param name="affectNewColumns">Whether or not to adjust widths of columns that do not yet have their initial desired width.</param>
            <returns>The remaining amount of adjustment.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CollapseRowGroup(Windows.UI.Xaml.Data.ICollectionViewGroup,System.Boolean)">
            <summary>
            Collapses the DataGridRowGroupHeader that represents a given CollectionViewGroup
            </summary>
            <param name="collectionViewGroup">CollectionViewGroup</param>
            <param name="collapseAllSubgroups">Set to true to collapse all Subgroups</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ExpandRowGroup(Windows.UI.Xaml.Data.ICollectionViewGroup,System.Boolean)">
            <summary>
            Expands the DataGridRowGroupHeader that represents a given CollectionViewGroup
            </summary>
            <param name="collectionViewGroup">CollectionViewGroup</param>
            <param name="expandAllSubgroups">Set to true to expand all Subgroups</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.OnRowDetailsVisibilityChanged(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClearRowSelection(System.Boolean)">
            <summary>
            Clears the entire selection. Displayed rows are deselected explicitly to visualize
            potential transition effects
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ClearRowSelection(System.Int32,System.Boolean)">
            <summary>
            Clears the entire selection except the indicated row. Displayed rows are deselected explicitly to
            visualize potential transition effects. The row indicated is selected if it is not already.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetRowFromItem(System.Object)">
            <summary>
            Returns the row associated to the provided backend data item.
            </summary>
            <param name="dataItem">backend data item</param>
            <returns>null if the DataSource is null, the provided item in not in the source, or the item is not displayed; otherwise, the associated Row</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CorrectSlotsAfterDeletion(System.Int32,System.Boolean)">
            <summary>
            Adjusts the index of all displayed, loaded and edited rows after a row was deleted.
            Removes the deleted row from the list of loaded rows if present.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CorrectSlotsAfterInsertion(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adjusts the index of all displayed, loaded and edited rows after rows were deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GenerateEditingElements">
            <summary>
            Creates all the editing elements for the current editing row, so the bindings
            all exist during validation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GenerateRow(System.Int32,System.Int32)">
            <summary>
            Returns a row for the provided index. The row gets first loaded through the LoadingRow event.
            </summary>
            <returns>A row for the provided index.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GenerateRow(System.Int32,System.Int32,System.Object)">
            <summary>
            Returns a row for the provided index. The row gets first loaded through the LoadingRow event.
            </summary>
            <returns>A row for the provided index.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetExactSlotElementHeight(System.Int32)">
            <summary>
            Returns the exact row height, whether it is currently displayed or not.
            The row is generated and added to the displayed rows in case it is not already displayed.
            The horizontal gridlines thickness are added.
            </summary>
            <returns>Exact row height with gridlines thickness.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetSlotElementHeight(System.Int32)">
            <summary>
            If the provided slot is displayed, returns the exact height.
            If the slot is not displayed, returns a default height.
            </summary>
            <returns>Exact height of displayed slot, or default height otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetSlotElementsHeight(System.Int32,System.Int32)">
            <summary>
            Cumulates the approximate height of the non-collapsed slots from fromSlot to toSlot inclusive.
            Including the potential gridline thickness.
            </summary>
            <returns>Cumulated approximate height of the non-collapsed slots from fromSlot to toSlot inclusive including the potential gridline thickness.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.GetGeneratedRow(System.Object)">
            <summary>
            Checks if the row for the provided dataContext has been generated and is present
            in either the loaded rows, pre-fetched rows, or editing row.
            The displayed rows are *not* searched. Returns null if the row does not belong to those 3 categories.
            </summary>
            <returns>Either a loaded, or pre-fetched or editing row.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RemoveEditingElements">
            <summary>
            Removes all of the editing elements for the row that is just leaving editing mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.SlotIsDisplayed(System.Int32)">
            <summary>
            Determines whether the row at the provided index must be displayed or not.
            </summary>
            <returns>True when the slot is displayed.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.AutoGeneratingColumn" /> event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs"/> class.
            </summary>
            <param name="propertyName">
            The name of the property bound to the generated column.
            </param>
            <param name="propertyType">
            The <see cref="T:System.Type" /> of the property bound to the generated column.
            </param>
            <param name="column">
            The generated column.
            </param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
            <summary>
            Gets or sets the generated column.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
            <summary>
            Gets the name of the property bound to the generated column.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the property bound to the generated column.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.BeginningEdit" /> event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs"/> class.
            </summary>
            <param name="column">
            The column that contains the cell to be edited.
            </param>
            <param name="row">
            The row that contains the cell to be edited.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that caused the cell to enter edit mode.
            </param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs.Column">
            <summary>
            Gets the column that contains the cell to be edited.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
            <summary>
            Gets information about the user gesture that caused the cell to enter edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBeginningEditEventArgs.Row">
            <summary>
            Gets the row that contains the cell to be edited.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column that can
            bind to a property in the grid's data source.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding">
            <summary>
            Gets or sets the binding that associates the column with a property in the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.ClipboardContentBinding">
            <summary>
            Gets or sets the binding that will be used to get or set cell content for the clipboard.
            If the base ClipboardContentBinding is not explicitly set, this will return the value of Binding.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.EditingElementStyle">
            <summary>
            Gets or sets the style that is used when rendering the element that the column displays for a cell in editing mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.ElementStyle">
            <summary>
            Gets or sets the style that is used when rendering the element that the column displays for a cell that is not in editing mode.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell">
            <summary>
            Represents an individual <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> cell.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.IsValid">
            <summary>
            Gets a value indicating whether the data in a cell is valid.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.OnIsValidPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGridCell that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.OnApplyTemplate">
            <summary>
            Builds the visual tree for the row header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell"/>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell.EnsureStyle(Windows.UI.Xaml.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridInternals.DataGridDataConnection.AllowSort">
            <summary>
            Gets a value indicating whether the collection view says it can sort.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridInternals.DataGridDataConnection.BeginEdit(System.Object)">
            <summary>
            Puts the entity into editing mode if possible
            </summary>
            <param name="dataItem">The entity to edit</param>
            <returns>True if editing was started</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridInternals.DataGridDataConnection.CancelEdit(System.Object)">
            <summary>
            Cancels the current entity editing and exits the editing mode.
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a cancellation operation was invoked.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridInternals.DataGridDataConnection.EndEdit(System.Object)">
            <summary>
            Commits the current entity editing and exits the editing mode.
            </summary>
            <param name="dataItem">The entity being edited</param>
            <returns>True if a commit operation was invoked.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridInternals.DataGridDataConnection.CreateView(System.Collections.IEnumerable)">
            <summary>
            Creates a collection view around the DataGrid's source. ICollectionViewFactory is
            used if the source implements it.
            </summary>
            <param name="source">Enumerable source for which to create a view</param>
            <returns>ICollectionView view over the provided source</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs">
            <summary>
            Provides information just after a cell has exited editing mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs"/> class.
            </summary>
            <param name="column">The column of the cell that has just exited edit mode.</param>
            <param name="row">The row container of the cell container that has just exited edit mode.</param>
            <param name="editAction">The editing action that has been taken.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs.Column">
            <summary>
            Gets the column of the cell that has just exited edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs.EditAction">
            <summary>
            Gets the edit action taken when leaving edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndedEventArgs.Row">
            <summary>
            Gets the row container of the cell container that has just exited edit mode.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs">
            <summary>
            Provides information just before a cell exits editing mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Windows.UI.Xaml.FrameworkElement,Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs"/> class.
            </summary>
            <param name="column">The column of the cell that is about to exit edit mode.</param>
            <param name="row">The row container of the cell container that is about to exit edit mode.</param>
            <param name="editingElement">The editing element within the cell.</param>
            <param name="editAction">The editing action that will be taken.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs.Column">
            <summary>
            Gets the column of the cell that is about to exit edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs.EditAction">
            <summary>
            Gets the edit action to take when leaving edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs.EditingElement">
            <summary>
            Gets the editing element within the cell.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCellEditEndingEventArgs.Row">
            <summary>
            Gets the row container of the cell container that is about to exit edit mode.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter">
            <summary>
            Used within the template of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>
            to specify the location in the control's visual tree where the cells are to be added.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter"/>.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter"/>.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter"/> to
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader">
            <summary>
            Represents an individual <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column header.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the column header separator lines.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorBrush"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
            <summary>
            Gets or sets a value indicating whether the column header separator lines are visible.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <exception cref="T:System.NotSupportedException">
            <paramref name="newContent"/> is not a UIElement.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader"/>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.EnsureStyle(Windows.UI.Xaml.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.CanResizeColumn(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Determines whether a column can be resized by dragging the border of its header.  If star sizing
            is being used, there are special conditions that can prevent a column from being resized:
            1. The column is the last visible column.
            2. All columns are constrained by either their maximum or minimum values.
            </summary>
            <param name="column">Column to check.</param>
            <returns>Whether or not the column can be resized by dragging its header.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.GetReorderingTargetColumn(Windows.Foundation.Point,System.Boolean,System.Double@)">
            <summary>
            Returns the column against whose top-left the reordering caret should be positioned
            </summary>
            <param name="pointerPositionHeaders">Pointer position within the ColumnHeadersPresenter</param>
            <param name="scroll">Whether or not to scroll horizontally when a column is dragged out of bounds</param>
            <param name="scrollAmount">If scroll is true, returns the horizontal amount that was scrolled</param>
            <returns>The column against whose top-left the reordering caret should be positioned.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeader.GetReorderingTargetDisplayIndex(Windows.Foundation.Point)">
            <summary>
            Returns the display index to set the column to
            </summary>
            <param name="pointerPositionHeaders">Pointer position relative to the column headers presenter</param>
            <returns>The display index to set the column to.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter">
            <summary>
            Used within the template of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> to specify the
            location in the control's visual tree where the column headers are to be added.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.DragColumn">
            <summary>
            Gets or sets which column is currently being dragged.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.DragIndicator">
            <summary>
            Gets or sets the current drag indicator control.  This value is null if no column is being dragged.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.DragIndicatorOffset">
            <summary>
            Gets or sets the distance, in pixels, that the DragIndicator should be positioned away from the corresponding DragColumn.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.DropLocationIndicator">
            <summary>
            Gets or sets the drop location indicator control.  This value is null if no column is being dragged.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.DropLocationIndicatorOffset">
            <summary>
            Gets or sets the distance, in pixels, that the drop location indicator should be positioned away from the left edge
            of the ColumnsHeaderPresenter.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter"/>.
            </summary>
            <returns>
            The actual size used by the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter"/>.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.EnsureColumnReorderingClip(Windows.UI.Xaml.Controls.Control,System.Double,System.Double,System.Double)">
            <summary>
            Clips the DragIndicator and DropLocationIndicator controls according to current ColumnHeaderPresenter constraints.
            </summary>
            <param name="control">The DragIndicator or DropLocationIndicator</param>
            <param name="height">The available height</param>
            <param name="frozenColumnsWidth">The width of the frozen column region</param>
            <param name="controlLeftEdge">The left edge of the control to clip</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter"/> to
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridColumnHeadersPresenter"/>.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter">
            <summary>
            Used within the template of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> to specify the location in the control's visual tree
            where the row details are to be added.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.ContentHeight">
            <summary>
            Gets or sets the height of the content.
            </summary>
            <returns>
            The height of the content.
            </returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.ContentHeightProperty">
            <summary>
            Identifies the ContentHeight dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.OnContentHeightPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentHeightProperty property changed handler.
            </summary>
            <param name="d">DataGridDetailsPresenter.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter"/>.
            </summary>
            <returns>
            The actual size used by the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter"/>.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter"/> to
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter"/>.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridFrozenGrid">
            <summary>
            Represents a non-scrollable grid that contains <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row headers.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridFrozenGrid.IsFrozenProperty">
            <summary>
            A dependency property that indicates whether the grid is frozen.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridFrozenGrid.GetIsFrozen(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets a value that indicates whether the grid is frozen.
            </summary>
            <param name="element">
            The object to get the IsFrozen value from.
            </param>
            <returns>true if the grid is frozen; otherwise, false. The default is true.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridFrozenGrid.SetIsFrozen(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets a value that indicates whether the grid is frozen.
            </summary>
            <param name="element">The object to set the IsFrozen value on.</param>
            <param name="value">true if <paramref name="element"/> is frozen; otherwise, false.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="element"/> is null.</exception>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader">
            <summary>
            Represents an individual <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row header.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> used to paint the row header separator lines.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorBrush"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
            <summary>
            Gets or sets a value indicating whether the row header separator lines are visible.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.SeparatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
            <summary>
            Builds the visual tree for the row header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader"/> to prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader"/>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowHeader.EnsureStyle(Windows.UI.Xaml.Style)">
            <summary>
            Ensures that the correct Style is applied to this object.
            </summary>
            <param name="previousStyle">Caller's previous associated Style</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter">
            <summary>
            Used within the template of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> to specify the
            location in the control's visual tree where the rows are to be added.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/>.
            </summary>
            <returns>
            The actual size used by the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/>.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/> to
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridRowsPresenter"/>.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column that hosts
            <see cref="T:System.Windows.Controls.CheckBox"/> controls in its cells.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.IsThreeState">
            <summary>
            Gets or sets a value indicating whether the hosted <see cref="T:System.Windows.Controls.CheckBox"/> controls allow three states or two.
            </summary>
            <returns>
            true if the hosted controls support three states; false if they support two states. The default is false.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.CancelCellEdit(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="uneditedValue">
            The previous, unedited value in the cell being edited.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.GenerateEditingElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.CheckBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new <see cref="T:System.Windows.Controls.CheckBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.GenerateElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a read-only <see cref="T:System.Windows.Controls.CheckBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new, read-only <see cref="T:System.Windows.Controls.CheckBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that is causing a cell to enter editing mode.
            </param>
            <returns>
            The unedited value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.RefreshCellContent(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush,System.String)">
            <summary>
            Called by the DataGrid control when this column asks for its elements to be
            updated, because its CheckBoxContent or IsThreeState property changed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCheckBoxColumn.RefreshForeground(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Called when the computed foreground of a row changed.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent">
            <summary>
            This structure encapsulate the cell information necessary when clipboard content is prepared.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.#ctor(System.Object,Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent"/> struct.
            </summary>
            <param name="item">DataGrid row item containing the cell.</param>
            <param name="column">DataGridColumn containing the cell.</param>
            <param name="content">DataGrid cell value.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.Column">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn"/> column containing the cell.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.Content">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell"/> cell content.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.Item">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> row item containing the cell.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.Equals(System.Object)">
            <summary>
            Field-by-field comparison to avoid reflection-based ValueType.Equals.
            </summary>
            <param name="obj">DataGridClipboardCellContent to compare.</param>
            <returns>True if this and data are equal</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.GetHashCode">
            <summary>
            Returns a deterministic hash code.
            </summary>
            <returns>Hash value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.op_Equality(Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent,Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent)">
            <summary>
            Field-by-field comparison to avoid reflection-based ValueType.Equals.
            </summary>
            <param name="clipboardCellContent1">The first DataGridClipboardCellContent.</param>
            <param name="clipboardCellContent2">The second DataGridClipboardCellContent.</param>
            <returns>True if and only if clipboardCellContent1 and clipboardCellContent2 are equal.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent.op_Inequality(Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent,Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCellContent)">
            <summary>
            Field-by-field comparison to avoid reflection-based ValueType.Equals.
            </summary>
            <param name="clipboardCellContent1">The first DataGridClipboardCellContent.</param>
            <param name="clipboardCellContent2">The second DataGridClipboardCellContent.</param>
            <returns>True if clipboardCellContent1 and clipboardCellContent2 are NOT equal.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.ActualWidth">
            <summary>
            Gets the actual visible width after Width, MinWidth, and MaxWidth setting at the Column level and DataGrid level
            have been taken into account.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CanUserReorder">
            <summary>
            Gets or sets a value indicating whether the user can change the column display position by dragging the column header.
            </summary>
            <returns>
            true if the user can drag the column header to a new position; otherwise, false. The default is the current <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserReorderColumns"/> property value.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CanUserResize">
            <summary>
            Gets or sets a value indicating whether the user can adjust the column width using the mouse.
            </summary>
            <returns>
            True if the user can resize the column; false if the user cannot resize the column. The default is the current <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserResizeColumns"/> property value.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CanUserSort">
            <summary>
            Gets or sets a value indicating whether the user can sort the column by clicking the column header.
            </summary>
            <returns>
            True if the user can sort the column; false if the user cannot sort the column. The default is the current <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.CanUserSortColumns"/> property value.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering cells in the column.
            </summary>
            <returns>
            The style that is used when rendering cells in the column. The default is null.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.ClipboardContentBinding">
            <summary>
            Gets or sets the binding that will be used to get or set cell content for the clipboard.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.DisplayIndex">
             <summary>
             Gets or sets the display position of the column relative to the other columns in the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>.
             </summary>
             <returns>
             The zero-based position of the column as it is displayed in the associated <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>. The default is the index of the corresponding <see cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)"/> in the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.Columns"/> collection.
             </returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             When setting this property, the specified value is less than -1 or equal to <see cref="F:System.Int32.MaxValue"/>.
            
             -or-
            
             When setting this property on a column in a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>, the specified value is less than zero or greater than or equal to the number of columns in the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/>.
             </exception>
             <exception cref="T:System.InvalidOperationException">
             When setting this property, the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> is already making <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.DisplayIndex"/> adjustments. For example, this exception is thrown when you attempt to set <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.DisplayIndex"/> in a <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged"/> event handler.
            
             -or-
            
             When setting this property, the specified value would result in a frozen column being displayed in the range of unfrozen columns, or an unfrozen column being displayed in the range of frozen columns.
             </exception>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.DragIndicatorStyle">
            <summary>
            Gets or sets the style for the drag indicator.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.HeaderStyle">
            <summary>
            Gets or sets the style for the header.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.Header">
            <summary>
            Gets or sets the header object.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.IsAutoGenerated">
            <summary>
            Gets a value indicating whether this column is autoGenerated.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.IsFrozen">
            <summary>
            Gets a value indicating whether this column is frozen.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this column is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.MaxWidth">
            <summary>
            Gets or sets the column's maximum width.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.MinWidth">
            <summary>
            Gets or sets the column's minimum width.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SortDirection">
            <summary>
            Gets or sets the column's sort direction. Null indicates no sorting.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.Tag">
            <summary>
            Gets or sets an object associated with this column.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.Visibility">
            <summary>
            Gets or sets the column's visibility.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.Width">
            <summary>
            Gets or sets the column's width.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.InheritsWidth">
            <summary>
            Gets a value indicating whether or not this column inherits its Width value from the DataGrid.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.IsInitialDesiredWidthDetermined">
            <summary>
            Gets or sets a value indicating whether the column has been fully measured. When a column is initially added,
            we won't know its initial desired value until all rows have been measured.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GetColumnContainingElement(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Returns the column which contains the given element
            </summary>
            <param name="element">element contained in a column</param>
            <returns>Column that contains the element, or null if not found</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GetCellContent(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow)">
            <summary>
            Returns the column's content for the provided row.
            </summary>
            <param name="dataGridRow">Row to get the content for.</param>
            <returns>The column's content for the provided row.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GetCellContent(System.Object)">
            <summary>
            Returns the column's content for the provided row dataItem.
            </summary>
            <param name="dataItem">Row dataItem to get the content for.</param>
            <returns>The column's content for the provided row dataItem.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CancelCellEdit(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            When overridden in a derived class, causes the column cell being edited to revert to the unedited value.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="uneditedValue">
            The previous, unedited value in the cell being edited.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GenerateEditingElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            When overridden in a derived class, gets an editing element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new editing element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GenerateElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            When overridden in a derived class, gets a read-only element that is bound to the column's
            <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">
            The cell that will contain the generated element.
            </param>
            <param name="dataItem">
            The data item represented by the row that contains the intended cell.
            </param>
            <returns>
            A new, read-only element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
            <summary>
            Called by a specific column type when one of its properties changed,
            and its current cells need to be updated.
            </summary>
            <param name="propertyName">Indicates which property changed and caused this call</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.PrepareCellForEdit(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">
            The element that the column displays for a cell in editing mode.
            </param>
            <param name="editingEventArgs">
            Information about the user gesture that is causing a cell to enter editing mode.
            </param>
            <returns>
            The unedited value.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.RefreshCellContent(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush,System.String)">
            <summary>
            Called by the DataGrid control when a column asked for its
            elements to be refreshed, typically because one of its properties changed.
            </summary>
            <param name="element">Indicates the element that needs to be refreshed</param>
            <param name="computedRowForeground">Indicates the computed row foreground based on RowForeground and AlternatingRowForeground</param>
            <param name="propertyName">Indicates which property changed and caused this call</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.RefreshForeground(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Called when the computed foreground of a row changed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.CoerceWidth(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Coerces a DataGridLength to a valid value.  If any value components are double.NaN, this method
            coerces them to a proper initial value.  For star columns, the desired width is calculated based
            on the rest of the star columns.  For pixel widths, the desired value is based on the pixel value.
            For auto widths, the desired value is initialized as the column's minimum width.
            </summary>
            <param name="width">The DataGridLength to coerce.</param>
            <returns>The resultant (coerced) DataGridLength.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.ComputeLayoutRoundedWidth(System.Double)">
            <summary>
            If the DataGrid is using layout rounding, the pixel snapping will force all widths to
            whole numbers. Since the column widths aren't visual elements, they don't go through the normal
            rounding process, so we need to do it ourselves.  If we don't, then we'll end up with some
            pixel gaps and/or overlaps between columns.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.EnsureWidth">
            <summary>
            Ensures that this column's width has been coerced to a valid value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.GetCellValue(System.Object,Windows.UI.Xaml.Data.Binding)">
            <summary>
            Gets the value of a cell according to the specified binding.
            </summary>
            <param name="item">The item associated with a cell.</param>
            <param name="binding">The binding to get the value of.</param>
            <returns>The resultant cell value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.RemoveEditingElement">
            <summary>
            Clears the cached editing element.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.Resize(System.Double,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType,System.Double,System.Double,System.Boolean)">
            <summary>
            Attempts to resize the column's width to the desired DisplayValue, but limits the final size
            to the column's minimum and maximum values.  If star sizing is being used, then the column
            can only decrease in size by the amount that the columns after it can increase in size.
            Likewise, the column can only increase in size if other columns can spare the width.
            </summary>
            <param name="value">The new Value.</param>
            <param name="unitType">The new UnitType.</param>
            <param name="desiredValue">The new DesiredValue.</param>
            <param name="displayValue">The new DisplayValue.</param>
            <param name="userInitiated">Whether or not this resize was initiated by a user action.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SetWidthDesiredValue(System.Double)">
            <summary>
            Sets the column's Width to a new DataGridLength with a different DesiredValue.
            </summary>
            <param name="desiredValue">The new DesiredValue.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SetWidthDisplayValue(System.Double)">
            <summary>
            Sets the column's Width to a new DataGridLength with a different DisplayValue.
            </summary>
            <param name="displayValue">The new DisplayValue.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SetWidthInternal(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Set the column's Width without breaking inheritance.
            </summary>
            <param name="width">The new Width.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SetWidthInternalNoCallback(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Sets the column's Width directly, without any callback effects.
            </summary>
            <param name="width">The new Width.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn.SetWidthStarValue(System.Double)">
            <summary>
            Set the column's star value.  Whenever the star value changes, width inheritance is broken.
            </summary>
            <param name="value">The new star value.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnCollection.VisibleStarColumnCount">
            <summary>
            Gets the number of star columns that are currently visible.
            NOTE: Requires that EnsureVisibleEdgedColumnsWidth has been called.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnCollection.EnsureVisibleEdgedColumnsWidth">
            <summary>
            In addition to ensuring that column widths are valid, this method updates the values of
            VisibleEdgedColumnsWidth and VisibleStarColumnCount.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnCollection.GetDisplayedColumns(System.Predicate{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn})">
            <summary>
            Returns an enumeration of all columns that meet the criteria of the filter predicate.
            </summary>
            <param name="filter">Criteria for inclusion.</param>
            <returns>Columns that meet the criteria, in ascending DisplayIndex order.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnCollection.GetDisplayedColumns(System.Boolean,System.Predicate{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn})">
            <summary>
            Returns an enumeration of all columns that meet the criteria of the filter predicate.
            The columns are returned in the order specified by the reverse flag.
            </summary>
            <param name="reverse">Whether or not to return the columns in descending DisplayIndex order.</param>
            <param name="filter">Criteria for inclusion.</param>
            <returns>Columns that meet the criteria, in the order specified by the reverse flag.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnCollection.GetDisplayedColumnsReverse(System.Predicate{Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn})">
            <summary>
            Returns an enumeration of all columns that meet the criteria of the filter predicate.
            The columns are returned in descending DisplayIndex order.
            </summary>
            <param name="filter">Criteria for inclusion.</param>
            <returns>Columns that meet the criteria, in descending DisplayIndex order.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs">
            <summary>
            Provides data for <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column-related events.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs"/> class.
            </summary>
            <param name="column">The column that the event occurs for.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnEventArgs.Column">
            <summary>
            Gets the column that the event occurs for.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ColumnReordering" /> event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs"/> class.
            </summary>
            <param name="dataGridColumn">The column that the event occurs for.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs.Column">
            <summary>
            Gets the column being moved.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
            <summary>
            Gets or sets the popup indicator displayed while dragging. If null and Handled = true, then do not display a tooltip.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
            <summary>
            Gets or sets the Control to display at the insertion position. If null and Handled = true, then do not display an insertion indicator.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column that hosts textual content in its cells. In edit mode data can be changed to a value from a collection hosted in a ComboBox.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of the ComboBox while in editing mode.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.DisplayMemberPath">
            <summary>
            Gets or sets the name or path of the property that is displayed in the ComboBox.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.FontFamily">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.FontWeight">
            <summary>
            Gets or sets the font weight or thickness.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.Foreground">
            <summary>
            Gets or sets a brush that describes the foreground of the column cells.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.GenerateEditingElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a <see cref="T:Windows.UI.Xaml.Controls.ComboBox"/> control that is bound to the column's ItemsSource collection.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new <see cref="T:Windows.UI.Xaml.Controls.ComboBox"/> control that is bound to the column's ItemsSource collection.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.GenerateElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a read-only <see cref="T:Windows.UI.Xaml.Controls.TextBlock"/> element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new, read-only <see cref="T:Windows.UI.Xaml.Controls.TextBlock"/> element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.CancelCellEdit(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.PrepareCellForEdit(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when the cell in the column enters editing mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
            <returns>The unedited value. </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.RefreshCellContent(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush,System.String)">
            <summary>
            Called by the DataGrid control when this column asks for its elements to be updated, because a property changed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridComboBoxColumn.RefreshForeground(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Called when the computed foreground of a row changed.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCopyMode">
            <summary>
            Defines modes that indicates how DataGrid content is copied to the Clipboard.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCopyMode.None">
            <summary>
            Disable the DataGrid's ability to copy selected items as text.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCopyMode.ExcludeHeader">
            <summary>
            Enable the DataGrid's ability to copy selected items as text, but do not include
            the column header content as the first line in the text that gets copied to the Clipboard.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridClipboardCopyMode.IncludeHeader">
            <summary>
            Enable the DataGrid's ability to copy selected items as text, and include
            the column header content as the first line in the text that gets copied to the Clipboard.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction">
            <summary>
            Used to specify action to take out of edit mode.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction.Cancel">
            <summary>
            Cancel the changes.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction.Commit">
            <summary>
            Commit edited value.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridGridLinesVisibility">
            <summary>
            Determines whether the inner cells' vertical/horizontal gridlines are shown or not.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridGridLinesVisibility.None">
            <summary>
            None DataGridGridLinesVisibility
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridGridLinesVisibility.Horizontal">
            <summary>
            Horizontal DataGridGridLinesVisibility
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridGridLinesVisibility.Vertical">
            <summary>
            Vertical DataGridGridLinesVisibility
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridGridLinesVisibility.All">
            <summary>
            All DataGridGridLinesVisibility
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit">
            <summary>
            Determines whether the current cell or row is edited.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit.Cell">
            <summary>
            Cell DataGridEditingUnit
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditingUnit.Row">
            <summary>
            Row DataGridEditingUnit
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridHeadersVisibility">
            <summary>
            Determines whether the row/column headers are shown or not.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridHeadersVisibility.All">
            <summary>
            Show Row, Column, and Corner Headers
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridHeadersVisibility.Column">
            <summary>
            Show only Column Headers with top-right corner Header
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridHeadersVisibility.Row">
            <summary>
            Show only Row Headers with bottom-left corner
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridHeadersVisibility.None">
            <summary>
            Don’t show any Headers
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsVisibilityMode">
            <summary>
            Determines the visibility of the row details.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
            <summary>
            Collapsed DataGridRowDetailsVisibilityMode
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsVisibilityMode.Visible">
            <summary>
            Visible DataGridRowDetailsVisibilityMode
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
            <summary>
            VisibleWhenSelected DataGridRowDetailsVisibilityMode
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSelectionAction">
            <summary>
            Determines the type of action to take when selecting items.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSelectionMode">
            <summary>
            Determines the selection model.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSelectionMode.Extended">
            <summary>
            Extended DataGridSelectionMode
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSelectionMode.Single">
            <summary>
            Single DataGridSelectionMode
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSortDirection">
            <summary>
            Determines the sort direction of a column.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSortDirection.Ascending">
            <summary>
            Sorts in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridSortDirection.Descending">
            <summary>
            Sorts in descending order.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType">
            <summary>
            DataGridLengthUnitType
            </summary>
            <remarks>
            These aren't flags.
            </remarks>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType.Auto">
            <summary>
            Auto DataGridLengthUnitType
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType.Pixel">
            <summary>
            Pixel DataGridLengthUnitType
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType.SizeToCells">
            <summary>
            SizeToCells DataGridLengthUnitType
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType.SizeToHeader">
            <summary>
            SizeToHeader DataGridLengthUnitType
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType.Star">
            <summary>
            Star DataGridLengthUnitType
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength">
            <summary>
            Represents the lengths of elements within the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> control.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> struct based on a numerical value.
            </summary>
            <param name="value">numerical length</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.#ctor(System.Double,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> struct based on a numerical value and a type.
            </summary>
            <param name="value">The value to hold.</param>
            <param name="type">The unit of <c>value</c>.</param>
            <remarks>
                <c>value</c> is ignored unless <c>type</c> is
                <c>DataGridLengthUnitType.Pixel</c> or
                <c>DataGridLengthUnitType.Star</c>
            </remarks>
            <exception cref="T:System.ArgumentException">
                If <c>value</c> parameter is <c>double.NaN</c>
                or <c>value</c> parameter is <c>double.NegativeInfinity</c>
                or <c>value</c> parameter is <c>double.PositiveInfinity</c>.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.#ctor(System.Double,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> struct based on a numerical value and a unit.
            </summary>
            <param name="value">The value to hold.</param>
            <param name="type">The unit of <c>value</c>.</param>
            <param name="desiredValue">The desired value.</param>
            <param name="displayValue">The display value.</param>
            <remarks>
                <c>value</c> is ignored unless <c>type</c> is
                <c>DataGridLengthUnitType.Pixel</c> or
                <c>DataGridLengthUnitType.Star</c>
            </remarks>
            <exception cref="T:System.ArgumentException">
                If <c>value</c> parameter is <c>double.NaN</c>
                or <c>value</c> parameter is <c>double.NegativeInfinity</c>
                or <c>value</c> parameter is <c>double.PositiveInfinity</c>.
            </exception>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.Auto">
            <summary>
            Gets a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the standard automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the standard automatic sizing mode.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.SizeToCells">
            <summary>
            Gets a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the cell-based automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the cell-based automatic sizing mode.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.SizeToHeader">
            <summary>
            Gets a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the header-based automatic sizing mode.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> structure that represents the header-based automatic sizing mode.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.DesiredValue">
            <summary>
            Gets the desired value of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.DisplayValue">
            <summary>
            Gets the display value of this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.IsAbsolute">
            <summary>
            Gets a value indicating whether this DataGridLength instance holds an absolute (pixel) value.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.IsAuto">
            <summary>
            Gets a value indicating whether this DataGridLength instance is automatic (not specified).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.IsSizeToCells">
            <summary>
            Gets a value indicating whether this DataGridLength instance is to size to the cells of a column or row.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.IsSizeToHeader">
            <summary>
            Gets a value indicating whether this DataGridLength instance is to size to the header of a column or row.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.IsStar">
            <summary>
            Gets a value indicating whether this DataGridLength instance holds a weighted proportion of available space.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.UnitType">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLengthUnitType"/> that represents the current sizing mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.Value">
            <summary>
            Gets the absolute value of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> in pixels.
            </summary>
            <returns>
            The absolute value of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> in pixels.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.ConvertFromString(System.String)">
            <summary>
            Converts a string into a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> instance.
            </summary>
            <param name="value">string to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.ConvertFrom(System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts an object into a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> instance.
            </summary>
            <param name="culture">optional culture to use for conversion.</param>
            <param name="value">object to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.ConvertToString(System.Globalization.CultureInfo,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Converts a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength"/> instance into a string.
            </summary>
            <param name="culture">optional culture to use for conversion.</param>
            <param name="value">value to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.op_Equality(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Overloaded operator, compares 2 DataGridLength's.
            </summary>
            <param name="gl1">first DataGridLength to compare.</param>
            <param name="gl2">second DataGridLength to compare.</param>
            <returns>true if specified DataGridLength have same value,
            unit type, desired value, and display value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.op_Inequality(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength,Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Overloaded operator, compares 2 DataGridLength's.
            </summary>
            <param name="gl1">first DataGridLength to compare.</param>
            <param name="gl2">second DataGridLength to compare.</param>
            <returns>true if specified DataGridLength have either different value,
            unit type, desired value, or display value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.Equals(Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength)">
            <summary>
            Compares this instance of DataGridLength with another instance.
            </summary>
            <param name="other">DataGridLength length instance to compare.</param>
            <returns><c>true</c> if this DataGridLength instance has the same value
            and unit type as gridLength.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.Equals(System.Object)">
            <summary>
            Compares this instance of DataGridLength with another object.
            </summary>
            <param name="obj">Reference to an object for comparison.</param>
            <returns><c>true</c> if this DataGridLength instance has the same value
            and unit type as oCompare.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridLength.GetHashCode">
            <summary>
            Returns a unique hash code for this DataGridLength
            </summary>
            <returns>hash code</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.PreparingCellForEdit"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridColumn,Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Windows.UI.Xaml.RoutedEventArgs,Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs"/> class.
            </summary>
            <param name="column">The column that contains the cell to be edited.</param>
            <param name="row">The row that contains the cell to be edited.</param>
            <param name="editingEventArgs">Information about the user gesture that caused the cell to enter edit mode.</param>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs.Column">
            <summary>
            Gets the column that contains the cell to be edited.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
            <summary>
            Gets the element that the column displays for a cell in editing mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
            <summary>
            Gets information about the user gesture that caused the cell to enter edit mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridPreparingCellForEditEventArgs.Row">
            <summary>
            Gets the row that contains the cell to be edited.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.DetailsTemplate">
            <summary>
            Gets or sets the template that is used to display the details section of the row.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.DetailsTemplateProperty">
            <summary>
            Identifies the DetailsTemplate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnDetailsTemplatePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            DetailsTemplateProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its DetailsTemplate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.DetailsVisibility">
            <summary>
            Gets or sets a value that indicates when the details section of the row is displayed.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.DetailsVisibilityProperty">
            <summary>
            Identifies the DetailsTemplate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnDetailsVisibilityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            DetailsVisibilityProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its DetailsTemplate.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.Header">
            <summary>
            Gets or sets the row header.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnHeaderPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its Header.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.HeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row header.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.HeaderStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.IsValid">
            <summary>
            Gets a value indicating whether the data in a row is valid.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnIsValidPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsValidProperty property changed handler.
            </summary>
            <param name="d">DataGridRow that changed its IsValid.</param>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.Index">
            <summary>
            Gets or sets the index of the row.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.IsLayoutDelayed">
            <summary>
            Gets a value indicating whether the layout when template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.GetRowContainingElement(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Returns the row which contains the given element
            </summary>
            <param name="element">element contained in a row</param>
            <returns>Row that contains the element, or null if not found
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.GetIndex">
            <summary>
            Returns the index of the current row.
            </summary>
            <returns>
            The index of the current row.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges the content of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>.
            </summary>
            <returns>
            The actual size used by the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>.
            </returns>
            <param name="finalSize">
            The final area within the parent that this element should use to arrange itself and its children.
            </param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the children of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> to
            prepare for arranging them during the <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="availableSize">
            The available size that this element can give to child elements. Indicates an upper limit that child elements should not exceed.
            </param>
            <returns>
            The size that the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/> determines it needs during layout, based on its calculations of child object allocated sizes.
            </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnApplyTemplate">
            <summary>
            Builds the visual tree for the column header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow"/>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.ApplyState(System.Boolean)">
            <summary>
            Updates the background brush of the row, using a storyboard if available.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow.Debug_Index">
            <summary>
            Gets the row's Index.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs">
            <summary>
            This class encapsulates a selected row's information necessary for the CopyingRowClipboardContent event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs"/> class.
            </summary>
            <param name="item">The row's associated data item.</param>
            <param name="isColumnHeadersRow">Whether or not this EventArgs is for the column headers.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
            <summary>
            Gets a list used to modify, add or remove a cell content before it gets stored into the clipboard.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
            <summary>
            Gets a value indicating whether this property is true when the ClipboardRowContent represents column headers, in which case the Item is null.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowClipboardEventArgs.Item">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row item used for preparing the ClipboardRowContent.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.LoadingRowDetails"/>, <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.UnloadingRowDetails"/>,
            and <see cref="E:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.RowDetailsVisibilityChanged"/> events.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs"/> class.
            </summary>
            <param name="row">The row that the event occurs for.</param>
            <param name="detailsElement">The row details section as a framework element.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs.DetailsElement">
            <summary>
            Gets the row details section as a framework element.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowDetailsEventArgs.Row">
            <summary>
            Gets the row that the event occurs for.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs">
            <summary>
            Provides information just after a row has exited edit mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs"/> class.
            </summary>
            <param name="row">The row container of the cell container that has just exited edit mode.</param>
            <param name="editAction">The editing action that has been taken.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs.EditAction">
            <summary>
            Gets the editing action that has been taken.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndedEventArgs.Row">
            <summary>
            Gets the row container of the cell container that has just exited edit mode.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs">
            <summary>
            Provides information just before a row exits editing mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow,Microsoft.Toolkit.Uwp.UI.Controls.DataGridEditAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs"/> class.
            </summary>
            <param name="row">The row container of the cell container that is about to exit edit mode.</param>
            <param name="editAction">The editing action that will be taken.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs.EditAction">
            <summary>
            Gets the editing action that will be taken.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEditEndingEventArgs.Row">
            <summary>
            Gets the row container of the cell container that is about to exit edit mode.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs">
            <summary>
            Provides data for <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row-related events.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs"/> class.
            </summary>
            <param name="dataGridRow">The row that the event occurs for.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowEventArgs.Row">
            <summary>
            Gets the row that the event occurs for.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader">
            <summary>
            Represents the header of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row group.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.HeaderStyle">
            <summary>
            Gets or sets the style applied to the header cell of a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.HeaderStyleProperty">
            <summary>
            Dependency Property for HeaderStyle
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.ItemCountVisibility">
            <summary>
            Gets or sets a value that indicates whether the item count is visible.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.ItemCountVisibilityProperty">
            <summary>
            DependencyProperty for ItemCountVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.Level">
            <summary>
            Gets the nesting level of the associated group.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.LevelProperty">
            <summary>
            Identifies the Level dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyName">
            <summary>
            Gets or sets the name of the property that this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row is bound to.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyNameProperty">
            <summary>
            DependencyProperty for PropertyName
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyNameVisibility">
            <summary>
            Gets or sets a value that indicates whether the property name is visible.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyNameVisibilityProperty">
            <summary>
            DependencyProperty for PropertyNameVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyValue">
            <summary>
            Gets or sets the value of the property that this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> row is bound to.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.PropertyValueProperty">
            <summary>
            DependencyProperty for PropertyName
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.SublevelIndent">
            <summary>
            Gets or sets a value that indicates the amount that the
            children of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/> are indented.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.SublevelIndentProperty">
            <summary>
            SublevelIndent Dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.CollectionViewGroup">
            <summary>
            Gets the ICollectionViewGroup implementation associated with this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            ArrangeOverride
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size that is used after the element is arranged in layout.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.OnApplyTemplate">
            <summary>
            Builds the visual tree for the row group header when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader.OnCreateAutomationPeer">
            <summary>
            Creates AutomationPeer (<see cref="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer"/>)
            </summary>
            <returns>An automation peer for this <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/>.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs">
            <summary>
            EventArgs used for the DataGrid's LoadingRowGroup and UnloadingRowGroup events
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs"/> class.
            </summary>
            <param name="rowGroupHeader">The row group header that the event occurs for.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeaderEventArgs.RowGroupHeader">
            <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridRowGroupHeader"/> associated with this instance.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column that hosts template-specified
            content in its cells.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellEditingTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a cell that is in editing mode.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a cell that is not in editing mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CancelCellEdit(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            CancelCellEdit
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.GenerateEditingElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets an element defined by the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellEditingTemplate"/> that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <returns>A new editing element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.</returns>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <exception cref="T:System.TypeInitializationException">
            The <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellEditingTemplate"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.GenerateElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets an element defined by the <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellTemplate"/> that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <returns>A new, read-only element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.</returns>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <exception cref="T:System.TypeInitializationException">
            The <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.CellTemplate"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTemplateColumn.PrepareCellForEdit(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when a cell in the column enters editing mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
            <returns>null in all cases.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn">
            <summary>
            Represents a <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGrid"/> column that hosts textual content in its cells.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.FontFamily">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.FontWeight">
            <summary>
            Gets or sets the font weight or thickness.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.Foreground">
            <summary>
            Gets or sets a brush that describes the foreground of the column cells.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.CancelCellEdit(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            Causes the column cell being edited to revert to the specified value.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="uneditedValue">The previous, unedited value in the cell being edited.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.GenerateEditingElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a <see cref="T:System.Windows.Controls.TextBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new <see cref="T:System.Windows.Controls.TextBox"/> control that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.GenerateElement(Microsoft.Toolkit.Uwp.UI.Controls.DataGridCell,System.Object)">
            <summary>
            Gets a read-only <see cref="T:System.Windows.Controls.TextBlock"/> element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.
            </summary>
            <param name="cell">The cell that will contain the generated element.</param>
            <param name="dataItem">The data item represented by the row that contains the intended cell.</param>
            <returns>A new, read-only <see cref="T:System.Windows.Controls.TextBlock"/> element that is bound to the column's <see cref="P:Microsoft.Toolkit.Uwp.UI.Controls.DataGridBoundColumn.Binding"/> property value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.PrepareCellForEdit(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when the cell in the column enters editing mode.
            </summary>
            <param name="editingElement">The element that the column displays for a cell in editing mode.</param>
            <param name="editingEventArgs">Information about the user gesture that is causing a cell to enter editing mode.</param>
            <returns>The unedited value. </returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.RefreshCellContent(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush,System.String)">
            <summary>
            Called by the DataGrid control when this column asks for its elements to be updated, because a property changed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.DataGridTextColumn.RefreshForeground(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Called when the computed foreground of a row changed.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.DataGridRowAutomationPeer_ItemType">
            <summary>
              Looks up a localized string similar to row.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.DataGridRowGroupHeader_ItemCountPlural">
            <summary>
              Looks up a localized string similar to ({0} items).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.DataGridRowGroupHeader_ItemCountSingular">
            <summary>
              Looks up a localized string similar to ({0} item).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.DataGridRowGroupHeader_PropertyName">
            <summary>
              Looks up a localized string similar to {0}:.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Controls.Properties.Resources.DefaultRowGroupHeaderPropertyNameAlternative">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.UISettingsHelper">
            <summary>
            Helper class for accessing UISettings properties.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates">
            <summary>
            Names and helpers for visual states in the control.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateNormal">
            <summary>
            Normal state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StatePointerOver">
            <summary>
            PointerOver state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StatePressed">
            <summary>
            Pressed state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateDisabled">
            <summary>
            Disabled state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupCommon">
            <summary>
            Common state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateExpanded">
            <summary>
            Expanded state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateCollapsed">
            <summary>
            Collapsed state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateEmpty">
            <summary>
            Empty state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateUnfocused">
            <summary>
            Unfocused state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateFocused">
            <summary>
            Focused state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupFocus">
            <summary>
            Focus state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSelected">
            <summary>
            Selected state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateUnselected">
            <summary>
            Unselected state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupSelection">
            <summary>
            Selection state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateActive">
            <summary>
            Active state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateInactive">
            <summary>
            Inactive state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupActive">
            <summary>
            Active state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateRegular">
            <summary>
            Regular state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateCurrent">
            <summary>
            Current state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateCurrentWithFocus">
            <summary>
            CurrentWithFocus state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupCurrent">
            <summary>
            Current state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateDisplay">
            <summary>
            Display state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateEditing">
            <summary>
            Editing state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupInteraction">
            <summary>
            Interaction state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateUnsorted">
            <summary>
            Unsorted state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSortAscending">
            <summary>
            Sort Ascending state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSortDescending">
            <summary>
            Sort Descending state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupSort">
            <summary>
            Sort state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateInvalid">
            <summary>
            Invalid state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateRowInvalid">
            <summary>
            RowInvalid state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateRowValid">
            <summary>
            RowValid state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateValid">
            <summary>
            Valid state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupValidation">
            <summary>
            Validation state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSeparatorExpanded">
            <summary>
            SeparatorExpanded state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSeparatorCollapsed">
            <summary>
            ScrollBarsSeparatorCollapsed state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSeparatorExpandedWithoutAnimation">
            <summary>
            SeparatorExpandedWithoutAnimation state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateSeparatorCollapsedWithoutAnimation">
            <summary>
            SeparatorCollapsedWithoutAnimation state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupScrollBarsSeparator">
            <summary>
            ScrollBarsSeparator state group
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateTouchIndicator">
            <summary>
            TouchIndicator state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateMouseIndicator">
            <summary>
            MouseIndicator state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateMouseIndicatorFull">
            <summary>
            MouseIndicatorFull state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.StateNoIndicator">
            <summary>
            NoIndicator state
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GroupScrollBars">
            <summary>
            ScrollBars state group
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Utilities.VisualStates.GoToState(Windows.UI.Xaml.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Utilities.Extensions.ContainsChild(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyObject)">
            <summary>
            Walks the visual tree to determine if a particular child is contained within a parent DependencyObject.
            </summary>
            <param name="element">Parent DependencyObject</param>
            <param name="child">Child DependencyObject</param>
            <returns>True if the parent element contains the child</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Utilities.Extensions.ContainsFocusedElement(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.UIElement)">
            <summary>
            Walks the visual tree to determine if the currently focused element is contained within
            a parent DependencyObject. The FocusManager's GetFocusedElement method is used to determine
            the currently focused element, which is updated synchronously.
            </summary>
            <param name="element">Parent DependencyObject</param>
            <param name="uiElement">Parent UIElement. Used to query the element's XamlRoot.</param>
            <returns>True if the currently focused element is within the visual tree of the parent</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Utilities.Extensions.GetIsReadOnly(System.Reflection.MemberInfo)">
            <summary>
            Checks a MemberInfo object (e.g. a Type or PropertyInfo) for the ReadOnly attribute
            and returns the value of IsReadOnly if it exists.
            </summary>
            <param name="memberInfo">MemberInfo to check</param>
            <returns>true if MemberInfo is read-only, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.AreClose(System.Double,System.Double)">
            <summary>
            AreClose - Returns whether or not two doubles are "close".  That is, whether or
            not they are within epsilon of each other.  Note that this epsilon is proportional
            to the numbers themselves to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the AreClose comparison.
            </returns>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.GreaterThan(System.Double,System.Double)">
            <summary>
            GreaterThan - Returns whether or not the first double is greater than the second double.
            That is, whether or not the first is strictly greater than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: This method should be used for optimizations only.
            </summary>
            <returns>
            bool - the result of the GreaterThan comparison.
            </returns>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.GreaterThanOrClose(System.Double,System.Double)">
            <summary>
            GreaterThanOrClose - Returns whether or not the first double is greater than or close to
            the second double.  That is, whether or not the first is strictly greater than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers
            themselves to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: This method should be used for optimizations only.
            </summary>
            <returns>
            bool - the result of the GreaterThanOrClose comparison.
            </returns>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.IsZero(System.Double)">
            <summary>
            IsZero - Returns whether or not the double is "close" to 0.  Same as AreClose(double, 0),
            but this is faster.
            </summary>
            <returns>
            bool - the result of the IsZero comparison.
            </returns>
            <param name="value">The double to compare to 0.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.LessThan(System.Double,System.Double)">
            <summary>
            LessThan - Returns whether or not the first double is less than the second double.
            That is, whether or not the first is strictly less than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: This method should be used for optimizations only.
            </summary>
            <returns>
            bool - the result of the LessThan comparison.
            </returns>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.DoubleUtil.LessThanOrClose(System.Double,System.Double)">
            <summary>
            LessThanOrClose - Returns whether or not the first double is less than or close to
            the second double.  That is, whether or not the first is strictly less than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers
            themselves to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: This method should be used for optimizations only.
            </summary>
            <returns>
            bool - the result of the LessThanOrClose comparison.
            </returns>
            <param name="value1">The first double to compare.</param>
            <param name="value2">The second double to compare.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.IndexCount">
            <summary>
            Gets the total number of indices represented in the table
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.IsEmpty">
            <summary>
            Gets a value indicating whether the table is empty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RangeCount">
            <summary>
            Gets the number of index ranges in the table
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.AddValue(System.Int32,`0)">
            <summary>
            Add a value with an associated index to the table
            </summary>
            <param name="index">Index where the value is to be added or updated</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.AddValues(System.Int32,System.Int32,`0)">
            <summary>
            Add multiples values with an associated start index to the table
            </summary>
            <param name="startIndex">index where first value is added</param>
            <param name="count">Total number of values to add (must be greater than 0)</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.Clear">
            <summary>
            Clears the index table
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.Contains(System.Int32)">
            <summary>
            Returns true if the given index is contained in the table
            </summary>
            <param name="index">index to search for</param>
            <returns>True if the index is contained in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.ContainsAll(System.Int32,System.Int32)">
            <summary>
            Returns true if the entire given index range is contained in the table
            </summary>
            <param name="startIndex">beginning of the range</param>
            <param name="endIndex">end of the range</param>
            <returns>True if the entire index range is present in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.ContainsIndexAndValue(System.Int32,`0)">
            <summary>
            Returns true if the given index is contained in the table with the the given value
            </summary>
            <param name="index">index to search for</param>
            <param name="value">value expected</param>
            <returns>true if the given index is contained in the table with the given value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.Copy">
            <summary>
            Returns a copy of this IndexToValueTable
            </summary>
            <returns>copy of this IndexToValueTable</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetIndexCount(System.Int32,System.Int32,`0)">
            <summary>
            Returns the inclusive index count between lowerBound and upperBound of all indexes with the given value
            </summary>
            <param name="lowerBound">lowerBound criteria</param>
            <param name="upperBound">upperBound criteria</param>
            <param name="value">value to look for</param>
            <returns>Number of indexes contained in the table between lowerBound and upperBound (inclusive)</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetIndexCount(System.Int32,System.Int32)">
            <summary>
            Returns the inclusive index count between lowerBound and upperBound
            </summary>
            <param name="lowerBound">lowerBound criteria</param>
            <param name="upperBound">upperBound criteria</param>
            <returns>Number of indexes contained in the table between lowerBound and upperBound (inclusive)</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetIndexCountBeforeGap(System.Int32,System.Int32)">
            <summary>
            Returns the number of indexes in this table after a given startingIndex but before
            reaching a gap of indexes of a given size
            </summary>
            <param name="startingIndex">Index to start at</param>
            <param name="gapSize">Size of index gap</param>
            <returns>the number of indexes in this table after a given startingIndex but before
            reaching a gap of indexes of a given size</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetIndexes">
            <summary>
            Returns an enumerator that goes through the indexes present in the table
            </summary>
            <returns>an enumerator that enumerates the indexes present in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetIndexes(System.Int32)">
            <summary>
            Returns all the indexes on or after a starting index
            </summary>
            <param name="startIndex">start index</param>
            <returns>all the indexes on or after a starting index</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetNthIndex(System.Int32)">
            <summary>
            Return the index of the Nth element in the table
            </summary>
            <param name="n">n</param>
            <returns>the index of the Nth element in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetValueAt(System.Int32)">
            <summary>
            Returns the value at a given index or the default value if the index is not in the table
            </summary>
            <param name="index">index to search for</param>
            <returns>the value at the given index or the default value if index is not in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.GetValueAt(System.Int32,System.Boolean@)">
            <summary>
            Returns the value at a given index or the default value if the index is not in the table
            </summary>
            <param name="index">index to search for</param>
            <param name="found">set to true by the method if the index was found; otherwise, false</param>
            <returns>the value at the given index or the default value if index is not in the table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.IndexOf(System.Int32)">
            <summary>
            Returns an index's index within this table
            </summary>
            <param name="index">index to search for</param>
            <returns>an index's index within this table</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.InsertIndex(System.Int32)">
            <summary>
            Inserts an index at the given location.  This does not alter values in the table
            </summary>
            <param name="index">index location to insert an index</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.InsertIndexAndValue(System.Int32,`0)">
            <summary>
            Inserts an index into the table with the given value
            </summary>
            <param name="index">index to insert</param>
            <param name="value">value for the index</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.InsertIndexes(System.Int32,System.Int32)">
            <summary>
            Inserts multiple indexes into the table.  This does not alter Values in the table
            </summary>
            <param name="startIndex">first index to insert</param>
            <param name="count">total number of indexes to insert</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.InsertIndexesAndValues(System.Int32,System.Int32,`0)">
            <summary>
            Inserts multiple indexes into the table with the given value
            </summary>
            <param name="startIndex">Index to insert first value</param>
            <param name="count">Total number of values to insert (must be greater than 0)</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveIndex(System.Int32)">
            <summary>
            Removes an index from the table.  This does not alter Values in the table
            </summary>
            <param name="index">index to remove</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveIndexAndValue(System.Int32)">
            <summary>
            Removes a value and its index from the table
            </summary>
            <param name="index">index to remove</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveIndexes(System.Int32,System.Int32)">
            <summary>
            Removes multiple indexes from the table.  This does not alter Values in the table
            </summary>
            <param name="startIndex">first index to remove</param>
            <param name="count">total number of indexes to remove</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveIndexesAndValues(System.Int32,System.Int32)">
            <summary>
            Removes multiple values and their indexes from the table
            </summary>
            <param name="startIndex">first index to remove</param>
            <param name="count">total number of indexes to remove</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveValue(System.Int32)">
            <summary>
            Removes a value from the table at the given index.  This does not alter other indexes in the table
            </summary>
            <param name="index">index where value should be removed</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.IndexToValueTable`1.RemoveValues(System.Int32,System.Int32)">
            <summary>
            Removes multiple values from the table.  This does not alter other indexes in the table
            </summary>
            <param name="startIndex">first index where values should be removed </param>
            <param name="count">total number of values to remove</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.FindIndexerInMembers(System.Reflection.MemberInfo[],System.String,System.Object[]@)">
            <summary>
            Finds an int or string indexer in the specified collection of members, where int indexers take priority
            over string indexers.  If found, this method will return the associated PropertyInfo and set the out index
            argument to its appropriate value.  If not found, the return value will be null, as will the index.
            </summary>
            <param name="members">Collection of members to search through for an indexer.</param>
            <param name="stringIndex">String value of indexer argument.</param>
            <param name="index">Resultant index value.</param>
            <returns>Indexer PropertyInfo if found, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetDefaultMemberName(System.Type)">
            <summary>
            Gets the default member name that is used for an indexer (e.g. "Item").
            </summary>
            <param name="type">Type to check.</param>
            <returns>Default member name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetDisplayName(System.Type,System.String)">
            <summary>
            Finds the PropertyInfo for the specified property path within this Type, and returns
            the value of GetShortName on its DisplayAttribute, if one exists. GetShortName will return
            the value of Name if there is no ShortName specified.
            </summary>
            <param name="type">Type to search</param>
            <param name="propertyPath">property path</param>
            <returns>DisplayAttribute.ShortName if it exists, null otherwise</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetNestedProperty(System.Type,System.String,System.Object@)">
            <summary>
            Finds the leaf PropertyInfo for the specified property path, and returns its value
            if the item is non-null.
            </summary>
            <param name="parentType">Type to search.</param>
            <param name="propertyPath">Property path.</param>
            <param name="item">Parent item which will be set to the property value if non-null.</param>
            <returns>The PropertyInfo.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetNestedPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of a given property path on a particular data item.
            </summary>
            <param name="item">Parent data item.</param>
            <param name="propertyPath">Property path.</param>
            <returns>Value.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetPropertyOrIndexer(System.Type,System.String,System.Object[]@)">
            <summary>
            Returns the PropertyInfo for the specified property path.  If the property path
            refers to an indexer (e.g. "[abc]"), then the index out parameter will be set to the value
            specified in the property path.  This method only supports indexers with a single parameter
            that is either an int or a string.  Int parameters take priority over string parameters.
            </summary>
            <param name="type">Type to search.</param>
            <param name="propertyPath">Property path.</param>
            <param name="index">Set to the index if return value is an indexer, otherwise null.</param>
            <returns>PropertyInfo for either a property or an indexer.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.PrependDefaultMemberName(System.Object,System.String)">
            <summary>
            If the specified property is an indexer, this method will prepend the object's
            default member name to it (e.g. "[foo]" returns "Item[foo]").
            </summary>
            <param name="item">Declaring data item.</param>
            <param name="property">Property name.</param>
            <returns>Property with default member name prepended, or property if unchanged.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.RemoveDefaultMemberName(System.String)">
            <summary>
            If the specified property is an indexer, this method will remove the object's
            default member name from it (e.g. "Item[foo]" returns "[foo]").
            </summary>
            <param name="property">Property name.</param>
            <returns>Property with default member name removed, or property if unchanged.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.SetNestedPropertyValue(System.Object@,System.Object,System.String)">
            <summary>
            Sets the value of a given property path on a particular item.
            </summary>
            <param name="item">Parent data item.</param>
            <param name="newValue">New child value</param>
            <param name="propertyPath">Property path</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.SplitPropertyPath(System.String)">
            <summary>
            Returns a list of substrings where each one represents a single property within a nested
            property path which may include indexers.  For example, the string "abc.d[efg][h].ijk"
            would return the substrings: "abc", "d", "[efg]", "[h]", and "ijk".
            </summary>
            <param name="propertyPath">Path to split.</param>
            <returns>List of property substrings.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.TypeHelper.GetCustomOrCLRType(System.Object)">
            <summary>
            Returns instance.GetCustomType() if the instance implements ICustomTypeProvider; otherwise,
            returns instance.GetType().
            </summary>
            <param name="instance">Object to return the type of</param>
            <returns>Type of the instance</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            Note: Copied from Microsoft.Toolkit.Uwp.Helpers.WeakEventListener to avoid taking a
            dependency on Microsoft.Toolkit.Uwp.dll and Microsoft.Toolkit.dll.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3"/> class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Utilities.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
    </members>
</doc>
