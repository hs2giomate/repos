<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Toolkit.Uwp.UI</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView">
            <summary>
            A collection view implementation that supports filtering, sorting and incremental loading
            </summary>
            <summary>
            A collection view implementation that supports filtering, grouping, sorting and incremental loading
            </summary>
            <summary>
            A collection view implementation that supports filtering, grouping, sorting and incremental loading
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor(System.Collections.IList,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView"/> class.
            </summary>
            <param name="source">source IEnumerable</param>
            <param name="isLiveShaping">Denotes whether or not this ACV should re-filter/re-sort if a PropertyChanged is raised for an observed property.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source">
            <summary>
            Gets or sets the source
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh">
            <summary>
            Manually refresh the view
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RefreshFilter">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RefreshSorting">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.VectorChanged">
            <summary>
            Occurs when the vector changes.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo(System.Object)">
            <summary>
            Move current index to item
            </summary>
            <param name="item">item</param>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Moves selected item to position
            </summary>
            <param name="index">index</param>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst">
            <summary>
            Move current item to first item
            </summary>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast">
            <summary>
            Move current item to last item
            </summary>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext">
            <summary>
            Move current item to next item
            </summary>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious">
            <summary>
            Move current item to previous item
            </summary>
            <returns>success of operation</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Load more items from the source
            </summary>
            <param name="count">number of items to load</param>
            <returns>Async operation of LoadMoreItemsResult</returns>
            <exception cref="T:System.NotImplementedException">Not implemented yet...</exception>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups">
            <summary>
            Gets the groups in collection
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem">
            <summary>
            Gets or sets the current item
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition">
            <summary>
            Gets the position of current item
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems">
            <summary>
            Gets a value indicating whether the source has more items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast">
            <summary>
            Gets a value indicating whether the current item is after the last visible item
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst">
            <summary>
            Gets a value indicating whether the current item is before the first visible item
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanged">
            <summary>
            Current item changed event handler
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanging">
            <summary>
            Current item changing event handler
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter">
            <summary>
            Gets a value indicating whether this CollectionView can filter its items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter">
            <summary>
            Gets or sets the predicate used to filter the visible items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort">
            <summary>
            Gets a value indicating whether this CollectionView can sort its items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions">
            <summary>
            Gets SortDescriptions to sort the visible items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection">
            <summary>
            Gets the source collection
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.System#Collections#Generic#IComparer{System#Object}#Compare(System.Object,System.Object)">
            <summary>
            IComparer implementation
            </summary>
            <param name="x">Object A</param>
            <param name="y">Object B</param>
            <returns>Comparison value</returns>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged(System.String)">
            <summary>
            Property changed event invoker
            </summary>
            <param name="propertyName">name of the property that changed</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.ObserveFilterProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.ClearObservedFilterProperties">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh">
            <summary>
            Stops refreshing until it is disposed
            </summary>
            <returns>An disposable object</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.NotificationDeferrer">
            <summary>
            Notification deferrer helper class
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.NotificationDeferrer.#ctor(Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.NotificationDeferrer"/> class.
            </summary>
            <param name="acvs">Source ACVS</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.NotificationDeferrer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnCurrentChanging(Windows.UI.Xaml.Data.CurrentChangingEventArgs)">
            <summary>
            Currently selected item changing event
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnCurrentChanged(System.Object)">
            <summary>
            Currently selected item changed event
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnVectorChanged(Windows.Foundation.Collections.IVectorChangedEventArgs)">
            <summary>
            Vector changed event
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView">
            <summary>
            Extended ICollectionView with filtering and sorting
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanFilter">
            <summary>
            Gets a value indicating whether this CollectionView can filter its items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Filter">
            <summary>
            Gets or sets the predicate used to filter the visible items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanSort">
            <summary>
            Gets a value indicating whether this CollectionView can sort its items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SortDescriptions">
            <summary>
            Gets SortDescriptions to sort the visible items
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SourceCollection">
            <summary>
            Gets the source collection
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh">
            <summary>
            Stops refreshing until it is disposed
            </summary>
            <returns>An disposable object</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh">
            <summary>
            Manually refreshes the view
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.RefreshFilter">
            <summary>
            Manually refreshes the filter on the view
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.RefreshSorting">
            <summary>
            Manually refreshes the sorting on the view
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.ObserveFilterProperty(System.String)">
            <summary>
            Add a property to re-filter an item on when it is changed
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.ClearObservedFilterProperties">
            <summary>
            Clears all properties items are re-filtered on
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.SortDescription">
            <summary>
            Sort description
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.SortDescription.PropertyName">
            <summary>
            Gets the name of property to sort on
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.SortDescription.Direction">
            <summary>
            Gets the direction of sort
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.SortDescription.Comparer">
            <summary>
            Gets the comparer
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.SortDescription.#ctor(Microsoft.Toolkit.Uwp.UI.SortDirection,System.Collections.IComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.SortDescription"/> class that describes
            a sort on the object itself
            </summary>
            <param name="direction">Direction of sort</param>
            <param name="comparer">Comparer to use. If null, will use default comparer</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.SortDescription.#ctor(System.String,Microsoft.Toolkit.Uwp.UI.SortDirection,System.Collections.IComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.SortDescription"/> class.
            </summary>
            <param name="propertyName">Name of property to sort on</param>
            <param name="direction">Direction of sort</param>
            <param name="comparer">Comparer to use. If null, will use default comparer</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.SortDirection">
            <summary>
            Sort direction enum
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.SortDirection.Ascending">
            <summary>
            Ascending order (eg. abc...)
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.SortDirection.Descending">
            <summary>
            Descending order (eg. zyx...)
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.VectorChangedEventArgs">
            <summary>
            Vector changed EventArgs
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.VectorChangedEventArgs.#ctor(Windows.Foundation.Collections.CollectionChange,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.VectorChangedEventArgs"/> class.
            </summary>
            <param name="cc">collection change type</param>
            <param name="index">index of item changed</param>
            <param name="item">item changed</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.VectorChangedEventArgs.CollectionChange">
            <summary>
            Gets the type of change that occurred in the vector.
            </summary>
            <returns>
            The type of change in the vector.
            </returns>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.VectorChangedEventArgs.Index">
            <summary>
            Gets the position where the change occurred in the vector.
            </summary>
            <returns>
            The zero-based position where the change occurred in the vector, if applicable.
            </returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.AutoFocusBehavior">
            <summary>
            This behavior automatically sets the focus on the associated <see cref="T:Windows.UI.Xaml.Controls.Control"/> when it is loaded.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.AutoFocusBehavior.OnAssociatedObjectLoaded">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1">
            <summary>
            Base class for behaviors that solves 2 problems:
              1. Prevent duplicate initialization that can happen (prevent multiple OnAttached calls);
              2. Whenever <see cref="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Initialize"/> initially fails, this method will subscribe to <see cref="E:Windows.UI.Xaml.FrameworkElement.SizeChanged"/> to allow lazy initialization.
            </summary>
            <typeparam name="T">The type of the associated object.</typeparam>
            <seealso cref="T:Microsoft.Xaml.Interactivity.Behavior`1" />
            <remarks>
            For more info, see https://github.com/windows-toolkit/WindowsCommunityToolkit/issues/1008.
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.IsAttached">
            <summary>
            Gets a value indicating whether this behavior is attached.
            </summary>
            <value>
            <c>true</c> if this behavior is attached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAttached">
            <summary>
            Called after the behavior is attached to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
            <remarks>
            Override this to hook up functionality to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnDetaching">
            <summary>
            Called when the behavior is being detached from its <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
            <remarks>
            Override this to unhook functionality from the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAssociatedObjectLoaded">
            <summary>
            Called when the associated object has been loaded.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAssociatedObjectUnloaded">
            <summary>
            Called when the associated object has been unloaded.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Initialize">
            <summary>
            Initializes the behavior to the associated object.
            </summary>
            <returns><c>true</c> if the initialization succeeded; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Uninitialize">
            <summary>
            Uninitializes the behavior from the associated object.
            </summary>
            <returns><c>true</c> if uninitialization succeeded; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior">
            <summary>
            This behavior sets the focus on the first control of <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.Targets"/> which accepts it.
            The focus will be set following the <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.Targets"/> order. The first control being ready
            and accepting the focus will receive it.
            The focus can be set to another control with a higher priority if it loads before <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.FocusEngagementTimeout"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.TargetsProperty">
            <summary>
            The DP to store the <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.Targets"/> property value.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.FocusEngagementTimeoutProperty">
            <summary>
            The DP to store the <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.FocusEngagementTimeout"/> property value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.Targets">
            <summary>
            Gets or sets the ordered list of controls which should receive the focus when the associated object is loaded.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.FocusEngagementTimeout">
            <summary>
            Gets or sets the timeout before the <see cref="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior"/> stops trying to set the focus to a control with
            a higher priority.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.OnAssociatedObjectLoaded">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior.OnDetaching">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTargetList">
            <summary>
            A collection of <see cref="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTarget"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTarget">
            <summary>
            A target for the <see cref="T:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusBehavior"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTarget.ControlProperty">
            <summary>
            The DP to store the <see cref="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTarget.Control"/> property value.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.FocusTarget.Control">
            <summary>
            Gets or sets the control that will receive the focus.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior">
            <summary>
            A class for listening element enter or exit the ScrollViewer viewport
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior._hostScrollViewer">
            <summary>
            The ScrollViewer hosting this element.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsFullyInViewportProperty">
            <summary>
            The IsFullyInViewport value of the associated element
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsInViewportProperty">
            <summary>
            The IsInViewport value of the associated element
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsAlwaysOnProperty">
            <summary>
            The IsAlwaysOn value of the associated element
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.EnteredViewport">
            <summary>
            Associated element fully enter the ScrollViewer viewport event
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.ExitedViewport">
            <summary>
            Associated element fully exit the ScrollViewer viewport event
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.EnteringViewport">
            <summary>
            Associated element enter the ScrollViewer viewport event
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.ExitingViewport">
            <summary>
            Associated element exit the ScrollViewer viewport event
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsAlwaysOn">
            <summary>
            Gets or sets a value indicating whether this behavior will remain attached after the associated element enters the viewport. When false, the behavior will remove itself after entering.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsFullyInViewport">
            <summary>
            Gets a value indicating whether associated element is fully in the ScrollViewer viewport
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.IsInViewport">
            <summary>
            Gets a value indicating whether associated element is in the ScrollViewer viewport
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
            <remarks>
            Override this to hook up functionality to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />
            </remarks>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Behaviors.ViewportBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
            <remarks>
            Override this to unhook functionality from the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />
            </remarks>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.CacheBase`1">
            <summary>
            Provides methods and tools to cache files in a folder
            </summary>
            <typeparam name="T">Generic type as supplied by consumer of the class</typeparam>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.CacheBase`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.CacheDuration">
            <summary>
            Gets or sets the life duration of every cache entry.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RetryCount">
            <summary>
            Gets or sets the number of retries trying to ensure the file is cached.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.MaxMemoryCacheCount">
            <summary>
            Gets or sets max in-memory item storage count
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.HttpClient">
            <summary>
            Gets instance of <see cref="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.HttpClient"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeAsync(Windows.Storage.StorageFolder,System.String,System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes FileCache and provides root folder and cache folder name
            </summary>
            <param name="folder">Folder that is used as root for cache</param>
            <param name="folderName">Cache folder name</param>
            <param name="httpMessageHandler">instance of <see cref="T:System.Net.Http.HttpMessageHandler"/></param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.ClearAsync">
            <summary>
            Clears all files in the cache
            </summary>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.ClearAsync(System.TimeSpan)">
            <summary>
            Clears file if it has expired
            </summary>
            <param name="duration">timespan to compute whether file has expired or not</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RemoveExpiredAsync(System.Nullable{System.TimeSpan})">
            <summary>
            Removes cached files that have expired
            </summary>
            <param name="duration">Optional timespan to compute whether file has expired or not. If no value is supplied, <see cref="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.CacheDuration"/> is used.</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RemoveAsync(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Removed items based on uri list passed
            </summary>
            <param name="uriForCachedItems">Enumerable uri list</param>
            <returns>awaitable Task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.PreCacheAsync(System.Uri,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Assures that item represented by Uri is cached.
            </summary>
            <param name="uri">Uri of the item</param>
            <param name="throwOnError">Indicates whether or not exception should be thrown if item cannot be cached</param>
            <param name="storeToMemoryCache">Indicates if item should be loaded into the in-memory storage</param>
            <param name="cancellationToken">instance of <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>Awaitable Task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFromCacheAsync(System.Uri,System.Boolean,System.Threading.CancellationToken,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Retrieves item represented by Uri from the cache. If the item is not found in the cache, it will try to downloaded and saved before returning it to the caller.
            </summary>
            <param name="uri">Uri of the item.</param>
            <param name="throwOnError">Indicates whether or not exception should be thrown if item cannot be found / downloaded.</param>
            <param name="cancellationToken">instance of <see cref="T:System.Threading.CancellationToken"/></param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>an instance of Generic type</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFileFromCacheAsync(System.Uri)">
            <summary>
            Gets the StorageFile containing cached item for given Uri
            </summary>
            <param name="uri">Uri of the item.</param>
            <returns>a StorageFile</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFromMemoryCache(System.Uri)">
            <summary>
            Retrieves item represented by Uri from the in-memory cache if it exists and is not out of date. If item is not found or is out of date, default instance of the generic type is returned.
            </summary>
            <param name="uri">Uri of the item.</param>
            <returns>an instance of Generic type</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeTypeAsync(System.IO.Stream,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="stream">input stream</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeTypeAsync(Windows.Storage.StorageFile,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="baseFile">storage file</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.IsFileOutOfDateAsync(Windows.Storage.StorageFile,System.TimeSpan,System.Boolean)">
            <summary>
            Override-able method that checks whether file is valid or not.
            </summary>
            <param name="file">storage file</param>
            <param name="duration">cache duration</param>
            <param name="treatNullFileAsOutOfDate">option to mark uninitialized file as expired</param>
            <returns>bool indicate whether file has expired or not</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.ForceInitialiseAsync">
            <summary>
            Initializes with default values if user has not initialized explicitly
            </summary>
            <returns>awaitable task</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.FileCache">
            <summary>
            Provides methods and tools to cache files in a folder
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.FileCache._instance">
            <summary>
            Private singleton field.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.FileCache.Instance">
            <summary>
            Gets public singleton property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.FileCache.InitializeTypeAsync(System.IO.Stream,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="stream">input stream</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.FileCache.InitializeTypeAsync(Windows.Storage.StorageFile,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="baseFile">storage file</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.ImageCache">
            <summary>
            Provides methods and tools to cache files in a folder
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.ImageCache._instance">
            <summary>
            Private singleton field.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.ImageCache.Instance">
            <summary>
            Gets public singleton property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.ImageCache.DispatcherQueue">
            <summary>
            Gets or sets which DispatcherQueue is used to dispatch UI updates.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.ImageCache.#ctor(Windows.System.DispatcherQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.ImageCache"/> class.
            </summary>
            <param name="dispatcherQueue">The DispatcherQueue that should be used to dispatch UI updates, or null if this is being called from the UI thread.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.ImageCache.InitializeTypeAsync(System.IO.Stream,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="stream">input stream</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.ImageCache.InitializeTypeAsync(Windows.Storage.StorageFile,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
            <param name="baseFile">storage file</param>
            <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
            <returns>awaitable task</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.ImageCache.IsFileOutOfDateAsync(Windows.Storage.StorageFile,System.TimeSpan,System.Boolean)">
            <summary>
            Override-able method that checks whether file is valid or not.
            </summary>
            <param name="file">storage file</param>
            <param name="duration">cache duration</param>
            <param name="treatNullFileAsOutOfDate">option to mark uninitialized file as expired</param>
            <returns>bool indicate whether file has expired or not</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1">
            <summary>
            Generic in-memory storage of items
            </summary>
            <typeparam name="T">T defines the type of item stored</typeparam>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.MaxItemCount">
            <summary>
            Gets or sets the maximum count of Items that can be stored in this InMemoryStorage instance.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.Clear">
            <summary>
            Clears all items stored in memory
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.Clear(System.TimeSpan)">
            <summary>
            Clears items stored in memory based on duration passed
            </summary>
            <param name="duration">TimeSpan to identify expired items</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove items based on provided keys
            </summary>
            <param name="keys">identified of the in-memory storage item</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.SetItem(Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem{`0})">
            <summary>
            Add new item to in-memory storage
            </summary>
            <param name="item">item to be stored</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorage`1.GetItem(System.String,System.TimeSpan)">
            <summary>
            Get item from in-memory storage as long as it has not ex
            </summary>
            <param name="id">id of the in-memory storage item</param>
            <param name="duration">timespan denoting expiration</param>
            <returns>Valid item if not out of date or return null if out of date or item does not exist</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1">
            <summary>
            Generic InMemoryStorageItem holds items for InMemoryStorage.
            </summary>
            <typeparam name="T">Type is set by consuming cache</typeparam>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1.Id">
            <summary>
            Gets the item identifier
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1.Created">
            <summary>
            Gets the item created timestamp.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1.LastUpdated">
            <summary>
            Gets the item last updated timestamp.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1.Item">
            <summary>
            Gets the item being stored.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1.#ctor(System.String,System.DateTime,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.InMemoryStorageItem`1"/> class.
            Constructor for InMemoryStorageItem
            </summary>
            <param name="id">uniquely identifies the item</param>
            <param name="lastUpdated">last updated timestamp</param>
            <param name="item">the item being stored</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.BoolNegationConverter">
            <summary>
            Value converter that applies NOT operator to a <see cref="T:System.Boolean"/> value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.BoolNegationConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert a boolean value to its negation.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to negate.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.BoolNegationConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert back a boolean value to its negation.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to negate.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter">
            <summary>
            This class converts a boolean value into an other object.
            Can be used to convert true/false to visibility, a couple of colors, couple of images, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.TrueValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.TrueValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.FalseValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.FalseValue"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.TrueValue">
            <summary>
            Gets or sets the value to be returned when the boolean is true
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.FalseValue">
            <summary>
            Gets or sets the value to be returned when the boolean is false
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert a boolean value to an other object.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert back the value to a boolean
            </summary>
            <remarks>If the <paramref name="value"/> parameter is a reference type, <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.BoolToObjectConverter.TrueValue"/> must match its reference to return true.</remarks>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.BoolToVisibilityConverter">
            <summary>
            This class converts a boolean value into a Visibility enumeration.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.BoolToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Converters.BoolToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.CollectionVisibilityConverter">
            <summary>
            This class converts a collection size to visibility.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.CollectionVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Converters.CollectionVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.ConverterTools">
            <summary>
            Static class used to provide internal tools
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.ConverterTools.TryParseBool(System.Object)">
            <summary>
            Helper method to safely cast an object to a boolean
            </summary>
            <param name="parameter">Parameter to cast to a boolean</param>
            <returns>Bool value or false if cast failed</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.ConverterTools.Convert(System.Object,System.Type)">
            <summary>
            Helper method to convert a value from a source type to a target type.
            </summary>
            <param name="value">The value to convert</param>
            <param name="targetType">The target type</param>
            <returns>The converted value</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter">
            <summary>
            This class converts a double value into an other object.
            Can be used to convert doubles to visibility, a couple of colors, couple of images, etc.
            If GreaterThan and LessThan are both set, the logic looks for a value between the two values.
            Otherwise the logic looks for the value to be GreaterThan or LessThan the specified value.
            The ConverterParameter can be used to invert the logic.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.TrueValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.TrueValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.FalseValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.FalseValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.NullValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.NullValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.GreaterThanProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.GreaterThan"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.LessThanProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.LessThan"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.TrueValue">
            <summary>
            Gets or sets the value to be returned when the expression is true
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.FalseValue">
            <summary>
            Gets or sets the value to be returned when the expression is false
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.NullValue">
            <summary>
            Gets or sets the value to be returned when the value passed is null
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.GreaterThan">
            <summary>
            Gets or sets the value to check if the value is GreaterThan this value.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.LessThan">
            <summary>
            Gets or sets the value to check if the value is LessThan this value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert a boolean value to an other object.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert back the value to a boolean
            </summary>
            <remarks>If the <paramref name="value"/> parameter is a reference type, <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.TrueValue"/> must match its reference to return true.</remarks>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter">
            <summary>
            This class converts a double value into a Visibility enumeration.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.EmptyCollectionToObjectConverter">
            <summary>
            This class converts a collection size into an other object.
            Can be used to convert to bind a visibility, a color or an image to the size of the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.EmptyCollectionToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks collection for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is an empty collection or does not implement IEnumerable, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter">
            <summary>
            This class converts an object value into a an object (if the value is null returns the false value).
            Can be used to bind a visibility, a color or an image to the value of an object.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.NotEmptyValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.NotEmptyValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.EmptyValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.EmptyValue"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.NotEmptyValue">
            <summary>
            Gets or sets the value to be returned when the object is neither null nor empty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.EmptyValue">
            <summary>
            Gets or sets the value to be returned when the object is either null or empty
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert a boolean value to an other object.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Not implemented
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.EmptyObjectToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks value for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is null, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.EmptyStringToObjectConverter">
            <summary>
            This class converts a string value into a an object (if the value is null or empty returns the false value).
            Can be used to bind a visibility, a color or an image to the value of a string.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.EmptyStringToObjectConverter.CheckValueIsEmpty(System.Object)">
            <summary>
            Checks string for emptiness.
            </summary>
            <param name="value">Value to be checked.</param>
            <returns>True if value is null or empty string, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.FileSizeToFriendlyStringConverter">
            <summary>
            Converts a file size in bytes to a more human-readable friendly format using <see cref="M:Microsoft.Toolkit.Converters.ToFileSizeString(System.Int64)"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.FileSizeToFriendlyStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.FileSizeToFriendlyStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.FormatStringConverter">
            <summary>
            Value converter that converts an <see cref="T:System.IFormattable"/> to a formatted <see cref="T:System.String"/>.
            The string format needs to be passed as the converter parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.FormatStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert an <see cref="T:System.IFormattable"/> value to a formatted <see cref="T:System.String"/>.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">The format string.</param>
            <param name="language">The language of the conversion. Not used.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.FormatStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.ResourceNameToResourceStringConverter">
            <summary>
            Value converter that look up for the source string in the App Resources strings and returns its value, if found.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.ResourceNameToResourceStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Take the source string as a resource name that will be looked up in the App Resources.
            If the resource exists, the value is returned, otherwise.
            </summary>
            <param name="value">The source string being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The string corresponding to the resource name.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.ResourceNameToResourceStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">The source string being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.StringFormatConverter">
            <summary>
            This class provides a binding converter to display formatted strings
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Return the formatted string version of the source object.
            </summary>
            <param name="value">Object to transform to string.</param>
            <param name="targetType">The type of the target property, as a type reference</param>
            <param name="parameter">An optional parameter to be used in the string.Format method.</param>
            <param name="language">The language of the conversion (not used).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, as a type reference (System.Type for Microsoft .NET, a TypeName helper struct for Visual C++ component extensions (C++/CX)).</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.StringVisibilityConverter">
            <summary>
            This class converts a string value into a Visibility value (if the value is null or empty returns a collapsed value).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.StringVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Converters.StringVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.TaskResultConverter">
            <summary>
            A converter that can be used to safely retrieve results from <see cref="T:System.Threading.Tasks.Task`1"/> instances.
            This is needed because accessing <see cref="P:System.Threading.Tasks.Task`1.Result"/> when the task has not
            completed yet will block the current thread and might cause a deadlock (eg. if the task was
            scheduled on the same synchronization context where the result is being retrieved from).
            The methods in this converter will safely return <see langword="default"/> if the input
            task is still running, or if it has faulted or has been canceled.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.TaskResultConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.TaskResultConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter">
            <summary>
            This class returns an object or another, depending on whether the type of the provided value matches another provided Type.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.TrueValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.TrueValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.FalseValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.FalseValue"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.TypeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.Type"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.TrueValue">
            <summary>
            Gets or sets the value to be returned when the type of the provided value matches <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.FalseValue">
            <summary>
            Gets or sets the value to be returned when the type of the provided value does not match <see cref="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.Type">
            <summary>
            Gets or sets the Type used to compare the type of the provided value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert the <paramref name="value"/>'s Type to an other object.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used to invert the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.TypeToObjectConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Converters.VisibilityToBoolConverter">
            <summary>
            This class converts a Visibility enumeration to a boolean value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.VisibilityToBoolConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert a <see cref="T:Windows.UI.Xaml.Visibility"/> value to boolean.
            </summary>
            <param name="value">The <see cref="T:Windows.UI.Xaml.Visibility"/> value to convert.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Converters.VisibilityToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Convert back a boolean value to <see cref="T:Windows.UI.Xaml.Visibility"/>.
            </summary>
            <param name="value">The <see cref="T:Windows.UI.Xaml.Visibility"/> value to convert back.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">Optional parameter. Not used.</param>
            <param name="language">The language of the conversion. Not used</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions">
            <summary>
            Provides attached properties for interacting with the <see cref="T:Windows.UI.ViewManagement.ApplicationView"/> on a window (app view).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.GetTitle(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets <see cref="T:System.String"/> for <see cref="P:Windows.UI.ViewManagement.ApplicationView.Title"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.SetTitle(Windows.UI.Xaml.Controls.Page,System.String)">
            <summary>
            Sets <see cref="T:System.String"/> to <see cref="P:Windows.UI.ViewManagement.ApplicationView.Title"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value"><see cref="T:System.String"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.GetExtendViewIntoTitleBar(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets <see cref="T:System.Boolean"/> CoreApplicationView.TitleBar.ExtendViewIntoTitleBar
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.SetExtendViewIntoTitleBar(Windows.UI.Xaml.Controls.Page,System.Boolean)">
            <summary>
            Sets <see cref="T:System.Boolean"/> to CoreApplicationView.TitleBar.ExtendViewIntoTitleBar
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value"><see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.GetBackButtonVisibility(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets <see cref="T:Windows.UI.Core.AppViewBackButtonVisibility"/> for <see cref="P:Windows.UI.Core.SystemNavigationManager.AppViewBackButtonVisibility"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ApplicationViewExtensions.SetBackButtonVisibility(Windows.UI.Xaml.Controls.Page,Windows.UI.Core.AppViewBackButtonVisibility)">
            <summary>
            Sets <see cref="T:Windows.UI.Core.AppViewBackButtonVisibility"/> to <see cref="P:Windows.UI.Core.SystemNavigationManager.AppViewBackButtonVisibility"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value"><see cref="T:Windows.UI.Core.AppViewBackButtonVisibility"/></param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.DispatcherTimerExtensions">
            <summary>
            Set of extention methods for using <see cref="T:Windows.UI.Xaml.DispatcherTimer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.DispatcherTimerExtensions.Debounce(Windows.UI.Xaml.DispatcherTimer,System.Action,System.TimeSpan,System.Boolean)">
             <summary>
             <para>Used to debounce (rate-limit) an event.  The action will be postponed and executed after the interval has elapsed.  At the end of the interval, the function will be called with the arguments that were passed most recently to the debounced function.</para>
             <para>Use this method to control the timer instead of calling Start/Interval/Stop manually.</para>
             <para>A scheduled debounce can still be stopped by calling the stop method on the timer instance.</para>
             <para>Each timer can only have one debounced function limited at a time.</para>
             </summary>
             <param name="timer">Timer instance, only one debounced function can be used per timer.</param>
             <param name="action">Action to execute at the end of the interval.</param>
             <param name="interval">Interval to wait before executing the action.</param>
             <param name="immediate">Determines if the action execute on the leading edge instead of trailing edge.</param>
             <example>
             <code>
             private DispatcherTimer _typeTimer = new DispatcherTimer();
            
             _typeTimer.Debounce(async () =>
                 {
                     // Only executes this code after 0.3 seconds have elapsed since last trigger.
                 }, TimeSpan.FromSeconds(0.3));
             </code>
             </example>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions">
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.FrameworkElement"/>
            </summary>
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.FrameworkElement"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.EnableActualSizeBindingProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for enabling actual size binding on any  <see cref="T:Windows.UI.Xaml.FrameworkElement"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.ActualHeightProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualHeight"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.ActualWidthProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualWidth"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.GetEnableActualSizeBinding(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the <see cref="T:System.Boolean"/> that enables/disables actual size binding update.
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to get the associated <see cref="T:System.Boolean"/> from</param>
            <returns>The <see cref="T:System.Boolean"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.SetEnableActualSizeBinding(Windows.UI.Xaml.FrameworkElement,System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Boolean"/> that enables/disables actual size binding update.
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to associate the <see cref="T:System.Boolean"/> with</param>
            <param name="value">The <see cref="T:System.Boolean"/> for binding to the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.GetActualHeight(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualHeight"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to get the associated <see cref="T:System.Double"/> from</param>
            <returns>The <see cref="T:System.Double"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.SetActualHeight(Windows.UI.Xaml.FrameworkElement,System.Double)">
            <summary>
            Sets the <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualHeight"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to associate the <see cref="T:System.Double"/> with</param>
            <param name="value">The <see cref="T:System.Double"/> for binding to the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.GetActualWidth(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualWidth"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to get the associated <see cref="T:System.Double"/> from</param>
            <returns>The <see cref="T:System.Double"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.SetActualWidth(Windows.UI.Xaml.FrameworkElement,System.Double)">
            <summary>
            Sets the <see cref="T:System.Double"/> for the <see cref="P:Windows.UI.Xaml.FrameworkElement.ActualWidth"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to associate the <see cref="T:System.Double"/> with</param>
            <param name="value">The <see cref="T:System.Double"/> for binding to the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.GetAncestor(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Retrieves the parent object of this framework element found of the given <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorTypeProperty"/>.
            </summary>
            <param name="obj">FrameworkElement</param>
            <returns>Parent object</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.SetAncestor(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the parent object of the framework element (internal).
            </summary>
            <param name="obj">Parent object</param>
            <param name="value">FrameworkElement</param>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for retrieving a parent <see cref="T:System.Object"/> for the <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorProperty"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.GetAncestorType(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Type of Ancestor to look for from this element.
            </summary>
            <returns>Type of Ancestor to look for from this element</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.SetAncestorType(Windows.UI.Xaml.DependencyObject,System.Type)">
            <summary>
            Sets the <see cref="T:System.Type"/> to look for from this element and place in the <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorProperty"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorTypeProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for retrieving a parent <see cref="T:System.Object"/> for the <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorProperty"/> based on the provided <see cref="T:System.Type"/> in the <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.FrameworkElementExtensions.AncestorTypeProperty"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions">
            <summary>
            Provides the Command attached dependency property for the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.CommandProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding an <see cref="T:System.Windows.Input.ICommand"/> to handle ListViewBase Item interaction by means of <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> ItemClick event. ListViewBase IsItemClickEnabled must be set to true.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.GetCommand(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Gets the <see cref="T:System.Windows.Input.ICommand"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to get the associated <see cref="T:System.Windows.Input.ICommand"/> from</param>
            <returns>The <see cref="T:System.Windows.Input.ICommand"/> associated with the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.SetCommand(Windows.UI.Xaml.Controls.ListViewBase,System.Windows.Input.ICommand)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.ICommand"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to associate the <see cref="T:System.Windows.Input.ICommand"/> with</param>
            <param name="value">The <see cref="T:System.Windows.Input.ICommand"/> for binding to the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.AlternateColorProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:Windows.UI.Xaml.Media.Brush"/> as an alternate background color to a <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.AlternateItemTemplateProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:Windows.UI.Xaml.DataTemplate"/> as an alternate template to a <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.StretchItemContainerDirectionProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for setting the container content stretch direction on the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.GetAlternateColor(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Gets the alternate <see cref="T:Windows.UI.Xaml.Media.Brush"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to get the associated <see cref="T:Windows.UI.Xaml.Media.Brush"/> from</param>
            <returns>The <see cref="T:Windows.UI.Xaml.Media.Brush"/> associated with the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.SetAlternateColor(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Sets the alternate <see cref="T:Windows.UI.Xaml.Media.Brush"/> associated with the specified <see cref="T:Windows.UI.Xaml.DependencyObject"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to associate the <see cref="T:Windows.UI.Xaml.Media.Brush"/> with</param>
            <param name="value">The <see cref="T:Windows.UI.Xaml.Media.Brush"/> for binding to the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.GetAlternateItemTemplate(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Gets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to get the associated <see cref="T:Windows.UI.Xaml.DataTemplate"/> from</param>
            <returns>The <see cref="T:Windows.UI.Xaml.DataTemplate"/> associated with the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.SetAlternateItemTemplate(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to associate the <see cref="T:Windows.UI.Xaml.DataTemplate"/> with</param>
            <param name="value">The <see cref="T:Windows.UI.Xaml.DataTemplate"/> for binding to the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.GetStretchItemContainerDirection(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Gets the stretch <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to get the associated <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> from</param>
            <returns>The <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> associated with the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.SetStretchItemContainerDirection(Windows.UI.Xaml.Controls.ListViewBase,Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection)">
            <summary>
            Sets the stretch <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> associated with the specified <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/> to associate the <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> with</param>
            <param name="value">The <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection"/> for binding to the <see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.DeselectItem``1(Windows.UI.Xaml.Controls.ListViewBase,``0)">
            <summary>
            Deselects the provided item.
            </summary>
            <typeparam name="T">Type of item.</typeparam>
            <param name="list"><see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
            <param name="item">Item to deselect.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.DeselectAll(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Deselects all items in list.
            </summary>
            <param name="list"><see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ListViewExtensions.SelectAllSafe(Windows.UI.Xaml.Controls.ListViewBase)">
            <summary>
            Selects all items in the list (or first one), if possible.
            </summary>
            <param name="list"><see cref="T:Windows.UI.Xaml.Controls.ListViewBase"/></param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection">
            <summary>
            Stretch direction
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection.Horizontal">
            <summary>
            Horizontal stretch
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection.Vertical">
            <summary>
            Vertical stretch
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.StretchDirection.Both">
            <summary>
            Horizontal and Vertical stretch
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension">
            <summary>
            An abstract <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which to produce text-based icons.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.FontSize">
            <summary>
            Gets or sets the size of the icon to display.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.SegoeMDL2AssetsFontFamily">
            <summary>
            Gets the reusable "Segoe MDL2 Assets" <see cref="T:Windows.UI.Xaml.Media.FontFamily"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.FontWeight">
            <summary>
            Gets or sets the thickness of the icon glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.FontStyle">
            <summary>
            Gets or sets the font style for the icon glyph.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.Foreground">
            <summary>
            Gets or sets the foreground <see cref="T:Windows.UI.Xaml.Media.Brush"/> for the icon.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.IsTextScaleFactorEnabled">
            <summary>
            Gets or sets a value indicating whether automatic text enlargement, to reflect the system text size setting, is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.TextIconExtension.MirroredWhenRightToLeft">
            <summary>
            Gets or sets a value indicating whether the icon is mirrored when the flow direction is right to left.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide <see cref="T:Windows.UI.Xaml.Controls.BitmapIcon"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconExtension.Source">
            <summary>
            Gets or sets the <see cref="T:System.Uri"/> representing the image to display.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconExtension.ShowAsMonochrome">
            <summary>
            Gets or sets a value indicating whether to display the icon as monochrome.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconSourceExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide <see cref="T:Windows.UI.Xaml.Controls.BitmapIconSource"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconSourceExtension.Source">
            <summary>
            Gets or sets the <see cref="T:System.Uri"/> representing the image to display.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconSourceExtension.ShowAsMonochrome">
            <summary>
            Gets or sets a value indicating whether to display the icon as monochrome.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.BitmapIconSourceExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.EnumValuesExtension">
            <summary>
            A markup extension that returns a collection of values of a specific <see langword="enum"/>
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.EnumValuesExtension.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the target <see langword="enum"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.EnumValuesExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide <see cref="T:Windows.UI.Xaml.Controls.FontIcon"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconExtension.Glyph">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing the icon to display.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconExtension.FontFamily">
            <summary>
            Gets or sets the font family to use to display the icon. If <see langword="null"/>, "Segoe MDL2 Assets" will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconSourceExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide <see cref="T:Windows.UI.Xaml.Controls.FontIconSource"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconSourceExtension.Glyph">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing the icon to display.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconSourceExtension.FontFamily">
            <summary>
            Gets or sets the font family to use to display the icon. If <see langword="null"/>, "Segoe MDL2 Assets" will be used.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.FontIconSourceExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide nullable bool values.
            See https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/17767198-nullable-dependency-properties.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.Value">
            <summary>
            Gets or sets a value indicating whether the value of the Boolean is true.  Ignored if <see cref="P:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.IsNull"/> is true.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.IsNull">
            <summary>
            Gets or sets a value indicating whether the value should be null.  Overrides the <see cref="P:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.Value"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice">
            <summary>
            The OnDevice markup extension allows you to customize UI appearance on a per-DeviceFamily basis.
            </summary>
            <example>
            The next TextBlock will show the text 'Hello' on desktop computers, 'World' on Xbox and 'Hi' on all other devices
            <code>
                <TextBlock Text="{helpers:OnDevice Default=Hi, Desktop=Hello, Xbox=World}"
                           xmlns:helpers="using:Microsoft.Toolkit.Uwp.UI.Extensions.Markup" />
            </code>
            </example>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.DeviceFamily">
            <summary>
            Gets the current device family.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Default">
            <summary>
            Gets or sets the default value for this property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Desktop">
            <summary>
            Gets or sets a value for this property on Desktop
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Holographic">
            <summary>
            Gets or sets a value for this property on Holographic
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.IoT">
            <summary>
            Gets or sets a value for this property on IoT
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Team">
            <summary>
            Gets or sets a value for this property on Team
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Xbox">
            <summary>
            Gets or sets a value for this property on Xbox
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.ProvideValue">
            <summary>
            Returns an object value for the current DeviceFamily, Default is used when it is not set.
            </summary>
            <returns>The object value to set on the property where the extension is applied.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide symbol-based <see cref="T:Windows.UI.Xaml.Controls.FontIcon"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconExtension.Symbol">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.Controls.Symbol"/> value representing the icon to display.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconSourceExtension">
            <summary>
            Custom <see cref="T:Windows.UI.Xaml.Markup.MarkupExtension"/> which can provide symbol-baased <see cref="T:Windows.UI.Xaml.Controls.FontIconSource"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconSourceExtension.Symbol">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.Controls.Symbol"/> value representing the icon to display.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SymbolIconSourceExtension.ProvideValue">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions">
            <summary>
            Provides a set of extensions to the <see cref="o:Windows.UI.Xaml.Media.Matrix"/> struct.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.HasInverse(Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>True if matrix has an inverse.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.Multiply(Windows.UI.Xaml.Media.Matrix,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Multiply this matrix to the given matrix and return the result.
            </summary>
            <param name="matrix1">Initial matrix.</param>
            <param name="matrix2">Matrix to multiply by.</param>
            <returns>Multiplied Matrix</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.Rotate(Windows.UI.Xaml.Media.Matrix,System.Double)">
            <summary>
            Applies a rotation of the specified angle about the origin of this Matrix structure and returns the result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="angle">The angle of rotation in degrees.</param>
            <returns>Rotated Matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.RotateAt(Windows.UI.Xaml.Media.Matrix,System.Double,System.Double,System.Double)">
            <summary>
            Rotates this matrix about the specified point and returns the new result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="angle">The angle of rotation in degrees.</param>
            <param name="centerX">The x-coordinate of the point about which to rotate this matrix.</param>
            <param name="centerY">The y-coordinate of the point about which to rotate this matrix.</param>
            <returns>Rotated Matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.Scale(Windows.UI.Xaml.Media.Matrix,System.Double,System.Double)">
            <summary>
            Appends the specified scale vector to this Matrix structure and returns the result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="scaleX">The value by which to scale this Matrix along the x-axis.</param>
            <param name="scaleY">The value by which to scale this Matrix along the y-axis.</param>
            <returns>Scaled Matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.ScaleAt(Windows.UI.Xaml.Media.Matrix,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Scales this Matrix by the specified amount about the specified point and returns the result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="scaleX">The value by which to scale this Matrix along the x-axis.</param>
            <param name="scaleY">The value by which to scale this Matrix along the y-axis.</param>
            <param name="centerX">The x-coordinate of the scale operation's center point.</param>
            <param name="centerY">The y-coordinate of the scale operation's center point.</param>
            <returns>Scaled Matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.Skew(Windows.UI.Xaml.Media.Matrix,System.Double,System.Double)">
            <summary>
            Appends a skew of the specified degrees in the x and y dimensions to this Matrix structure and returns the result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="skewX">The angle in the x dimension by which to skew this Matrix.</param>
            <param name="skewY">The angle in the y dimension by which to skew this Matrix.</param>
            <returns>Skewed Matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixExtensions.Translate(Windows.UI.Xaml.Media.Matrix,System.Double,System.Double)">
            <summary>
            Translates the matrix by the given amount and returns the result.
            </summary>
            <param name="matrix">Matrix to extend.</param>
            <param name="offsetX">The offset in the x dimension.</param>
            <param name="offsetY">The offset in the y dimension.</param>
            <returns>Translated Matrix.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixHelperEx">
            <summary>
            Static helper methods for <see cref="o:Windows.UI.Xaml.Media.Matrix"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixHelperEx.Multiply(Windows.UI.Xaml.Media.Matrix,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply.
            </summary>
            <param name="matrix1">The left matrix.</param>
            <param name="matrix2">The right matrix.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixHelperEx.Round(Windows.UI.Xaml.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a matrix to avoid issues due to floating point imprecision and returns the result.
            </summary>
            <param name="matrix">The matrix to round.</param>
            <param name="decimalsAfterRound">The number of decimals after the round.</param>
            <returns>The rounded matrix.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.MatrixHelperEx.RectTransform(Windows.Foundation.Rect,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implement WPF's Rect.Transform.
            </summary>
            <param name="rectangle">The rectangle to transform.</param>
            <param name="matrix">The matrix to use to transform the rectangle.
            </param>
            <returns>The transformed rectangle.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.RotateTransformExtensions">
            <summary>
            Extension methods for <see cref="T:Windows.UI.Xaml.Media.RotateTransform"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.RotateTransformExtensions.GetMatrix(Windows.UI.Xaml.Media.RotateTransform)">
            <summary>
            Gets the matrix that represents this transform.
            Implements WPF's SkewTransform.Value.
            </summary>
            <param name="transform">Extended SkewTranform.</param>
            <returns>Matrix representing transform.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.ScaleTransformExtensions">
            <summary>
            Extension methods for <see cref="T:Windows.UI.Xaml.Media.ScaleTransform"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScaleTransformExtensions.GetMatrix(Windows.UI.Xaml.Media.ScaleTransform)">
            <summary>
            Gets the matrix that represents this transform.
            Implements WPF's SkewTransform.Value.
            </summary>
            <param name="transform">Extended SkewTransform.</param>
            <returns>Matrix representing transform.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.SkewTransformExtensions">
            <summary>
            Extension methods for <see cref="T:Windows.UI.Xaml.Media.SkewTransform"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SkewTransformExtensions.GetMatrix(Windows.UI.Xaml.Media.SkewTransform)">
            <summary>
            Gets the matrix that represents this transform.
            Implements WPF's SkewTransform.Value.
            </summary>
            <param name="transform">Extended SkewTranform.</param>
            <returns>Matrix representing transform.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TranslateTransformExtensions">
            <summary>
            Extension methods for <see cref="T:Windows.UI.Xaml.Media.TranslateTransform"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TranslateTransformExtensions.GetMatrix(Windows.UI.Xaml.Media.TranslateTransform)">
            <summary>
            Gets the matrix that represents this transform.
            Implements WPF's TranslateTransform.Value.
            </summary>
            <param name="transform">Extended TranslateTranform.</param>
            <returns>Matrix representing transform.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.Mouse">
            <summary>
            Helper class for easily changing the mouseover cursor type.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.Mouse.CursorProperty">
            <summary>
            Dependency property for specifying the target <see cref="T:Windows.UI.Core.CoreCursorType"/> to be shown
            over the target <see cref="T:Windows.UI.Xaml.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.Mouse.SetCursor(Windows.UI.Xaml.FrameworkElement,Windows.UI.Core.CoreCursorType)">
            <summary>
            Set the target <see cref="T:Windows.UI.Core.CoreCursorType"/>.
            </summary>
            <param name="element">Object where the selector cursor type should be shown.</param>
            <param name="value">Target cursor type value.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.Mouse.GetCursor(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Get the current <see cref="T:Windows.UI.Core.CoreCursorType"/>.
            </summary>
            <param name="element">Object where the selector cursor type should be shown.</param>
            <returns>Cursor type set on target element.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.Axis">
            <summary>
            Indicates an axis in the 2D space
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.Axis.X">
            <summary>
            The X axis (horizontal)
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.Axis.Y">
            <summary>
            The Y axis (vertical)
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.VisualProperty">
            <summary>
            Indicates a property of a <see cref="T:Windows.UI.Composition.Visual"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualProperty.Offset">
            <summary>
            The offset property of a <see cref="T:Windows.UI.Composition.Visual"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualProperty.Translation">
            <summary>
            The translation property of a <see cref="T:Windows.UI.Composition.Visual"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions">
            <summary>
            Provides attached dependency properties and methods for the <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control.
            </summary>
            <summary>
            Provides attached dependency properties and methods for the <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control.
            </summary>
            <summary>
            Provides attached dependency properties and methods for the <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control.
            </summary>
            <summary>
            Provides attached dependency properties and methods for the <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.StartExpressionAnimation(Windows.UI.Xaml.Controls.ScrollViewer,Windows.UI.Xaml.UIElement,Microsoft.Toolkit.Uwp.UI.Extensions.Axis,Microsoft.Toolkit.Uwp.UI.Extensions.VisualProperty)">
            <summary>
            Creates and starts an animation on the target element that binds either the X or Y axis of the source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>.
            </summary>
            <param name="scroller">The source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control to use.</param>
            <param name="target">The target <see cref="T:Windows.UI.Xaml.UIElement"/> that will be animated.</param>
            <param name="axis">The scrolling axis of the source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>.</param>
            <param name="property">The target <see cref="T:Windows.UI.Composition.Visual"/> property to animate.</param>
            <returns>An <see cref="T:Windows.UI.Composition.ExpressionAnimation"/> instance that represents an already running animation.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.StartExpressionAnimation(Windows.UI.Xaml.Controls.ScrollViewer,Windows.UI.Xaml.UIElement,Microsoft.Toolkit.Uwp.UI.Extensions.Axis,Microsoft.Toolkit.Uwp.UI.Extensions.Axis,Microsoft.Toolkit.Uwp.UI.Extensions.VisualProperty)">
            <summary>
            Creates and starts an animation on the target element that binds either the X or Y axis of the source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
            <param name="scroller">The source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/> control to use</param>
            <param name="target">The target <see cref="T:Windows.UI.Xaml.UIElement"/> that will be animated</param>
            <param name="sourceAxis">The scrolling axis of the source <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/></param>
            <param name="targetAxis">The optional scrolling axis of the target element, if <see langword="null"/> the source axis will be used</param>
            <param name="property">The target <see cref="T:Windows.UI.Composition.Visual"/> property to animate.</param>
            <returns>An <see cref="T:Windows.UI.Composition.ExpressionAnimation"/> instance that represents an already running animation.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.OnEnableMiddleClickScrollingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Function will be called when <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty"/> is updated
            </summary>
            <param name="d">Holds the dependency object</param>
            <param name="e">Holds the dependency object args</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.UpdateChange(System.Boolean)">
            <summary>
            Function to update changes in <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty"/>
            </summary>
            <param name="newValue">New value from the <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.SubscribeMiddleClickScrolling(Windows.System.DispatcherQueue)">
            <summary>
            Function to set default value and subscribe to events
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.UnsubscribeMiddleClickScrolling">
            <summary>
            Function to set default value and unsubscribe to events
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.Scroll(System.Object)">
            <summary>
            This function will be called for every small interval by <see cref="T:System.Threading.Timer"/>
            </summary>
            <param name="state">Default param for <see cref="T:System.Threading.Timer"/>. In this function it will be `null`</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.CanScroll">
            <summary>
            Function to check the status of scrolling
            </summary>
            <returns>Return true if the scrolling is started</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.IsCursorResourceAvailable">
            <summary>
            Function to check the availability of cursor resource
            </summary>
            <returns>Returns `true` if the cursor resource is available</returns>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.HorizontalScrollBarMarginProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:Windows.UI.Xaml.Thickness"/> for the horizontal <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.VerticalScrollBarMarginProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a <see cref="T:Windows.UI.Xaml.Thickness"/> for the vertical <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for enabling middle click scrolling
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.GetVerticalScrollBarMargin(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the specified vertical <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to get the associated <see cref="T:Windows.UI.Xaml.Thickness"/> from</param>
            <returns>The <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.SetVerticalScrollBarMargin(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Thickness)">
            <summary>
            Sets the <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the specified vertical <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to associate the <see cref="T:Windows.UI.Xaml.Thickness"/> with</param>
            <param name="value">The <see cref="T:Windows.UI.Xaml.Thickness"/> for binding to the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.GetHorizontalScrollBarMargin(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the specified horizontal <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to get the associated <see cref="T:Windows.UI.Xaml.Thickness"/> from</param>
            <returns>The <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.SetHorizontalScrollBarMargin(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Thickness)">
            <summary>
            Sets the <see cref="T:Windows.UI.Xaml.Thickness"/> associated with the specified horizontal <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar"/> of a <see cref="T:Windows.UI.Xaml.Controls.ScrollViewer"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.FrameworkElement"/> to associate the <see cref="T:Windows.UI.Xaml.Thickness"/> with</param>
            <param name="value">The <see cref="T:Windows.UI.Xaml.Thickness"/> for binding to the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.GetEnableMiddleClickScrolling(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Get <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty"/>. Returns `true` if middle click scrolling is enabled else return `false`
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.DependencyObject"/> to get the associated `bool`</param>
            <returns>The `bool` associated with the <see cref="T:Windows.UI.Xaml.DependencyObject"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.SetEnableMiddleClickScrolling(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Set <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.ScrollViewerExtensions.EnableMiddleClickScrollingProperty"/>. `true` to enable middle click scrolling
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.DependencyObject"/> to associate the `bool` with</param>
            <param name="value">The `bool` for binding to the <see cref="T:Windows.UI.Xaml.DependencyObject"/></param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox">
            <summary>
            Helper class that provides attached properties to enable any TextBox with the Surface Dial. Rotate to change the value by StepValue between MinValue and MaxValue, and tap to go to the Next focus element from a TextBox
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.ForceMenuItemProperty">
            <summary>
            If you provide the Controller yourself, set this to true so you won't add new menu items.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.IconProperty">
            <summary>
            Set the default icon of the menu item that gets added. A user will most likely not see this. Defaults to the Ruler icon.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.StepValueProperty">
            <summary>
            The amount the TextBox will be modified for each rotation step on the Surface Dial. This can be any double value.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.EnableHapticFeedbackProperty">
            <summary>
            A flag to enable or disable haptic feedback when rotating the dial for the give TextBox. This is enabled by default.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.MinValueProperty">
            <summary>
            Sets the minimum value the TextBox can have when modifying it using a Surface Dial. Default is -100.0
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.MaxValueProperty">
            <summary>
            Sets the maximum value the TextBox can have when modifying it using a Surface Dial. Default is 100.0
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.EnableTapToNextControlProperty">
            <summary>
            TapToNext is a feature you can set to automatically try to focus the next focusable element from the Surface Dial enabled TextBox. This is on dy default.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.EnableMinMaxValueProperty">
            <summary>
            EnableMinMax limits the value in the textbox to your specified Min and Max values, see the other properties.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetEnableMinMaxValue(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the EnableMinMax property
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetEnableMinMaxValue(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Setter of the EnableMinMax property
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetEnableTapToNextControl(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the TapToNext flag.
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetEnableTapToNextControl(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Setter of the TapToNext flag.
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetMaxValue(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the MaxValue
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetMaxValue(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Setter of the MaxValue
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetMinValue(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the MinValue
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetMinValue(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Setter of the MinValue
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetStepValue(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Setter of the StepValue.
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetStepValue(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Getter of the StepValue
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetIcon(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the Icon
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetIcon(Windows.UI.Xaml.DependencyObject,Windows.UI.Input.RadialControllerMenuKnownIcon)">
            <summary>
            Setter of the Icon
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetEnableHapticFeedback(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Setter of the Haptic Feedback property
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetEnableHapticFeedback(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Getter of the Haptic Feedback property
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.GetForceMenuItem(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Getter of the Force Menu Item flag
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <returns>Return value of property</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.SetForceMenuItem(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Setter of the Force Menu Item flag
            </summary>
            <param name="obj">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.IsSupported">
            <summary>
            Gets a value indicating whether this attached proeprty is supported
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox._controller">
            <summary>
            The Surface Dial controller instance itself
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox._stepTextMenuItem">
            <summary>
            A default menu item that will be used for this to function. It will automatically be cleaned up when you move away from the TextBox, and created on Focus.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox._textBox">
            <summary>
            The textbox itself needed to reference the current TextBox that is being modified
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.Controller">
            <summary>
            Gets or sets the controller for the Surface Dial. The RadialController can be set from your app logic in case you use Surface Dial in other custom cases than on a TextBox.
            This helper class will do everything for you, but if you want to control the Menu Items and/or wish to use the same Surface Dial instance
            This is the property for the static controller so you can access it if needed.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.Controller_RotationChanged(Windows.UI.Input.RadialController,Windows.UI.Input.RadialControllerRotationChangedEventArgs)">
            <summary>
            This function gets called every time there is a rotational change on the connected Surface Dial while a Surface Dial enabled TextBox is in focus.
            This function ensures that the TextBox stays within the set range between MinValue and MaxValue while rotating the Surface Dial.
            It defaults the content of the TextBox to 0.0 if a non-numerical value is detected.
            </summary>
            <param name="sender">The RadialController being used.</param>
            <param name="args">The arguments of the changed event.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.StepValueChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Sets up the events needed for the current TextBox so it can trigger on GotFocus and LostFocus
            </summary>
            <param name="d">The Dependency Object we are dealing with, like a TextBox.</param>
            <param name="e">The arguments of the changed event.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.TextBox_LostFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            When the focus of the TextBox is lost, ensure we clean up the events and Surface Dial menu item.
            </summary>
            <param name="sender">The TextBox in being affected.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.TextBox_GotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            When a Surface Dial TextBox gets focus, ensure the proper events are setup, and connect the Surface Dial itself.
            </summary>
            <param name="sender">The TextBox in being affected.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.SurfaceDialTextbox.Controller_ButtonClicked(Windows.UI.Input.RadialController,Windows.UI.Input.RadialControllerButtonClickedEventArgs)">
            <summary>
            If the TapToNext flag is enabled, this function will try to take the focus to the next focusable element.
            </summary>
            <param name="sender">The RadialController being used.</param>
            <param name="args">The arguments of the changed event.</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask">
            <summary>
            TextBox mask property allows a user to more easily enter fixed width text in TextBox control
            where you would like them to enter the data in a certain format
            </summary>
            <summary>
            TextBox mask property allows a user to more easily enter fixed width text in TextBox control
            where you would like them to enter the data in a certain format
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.MaskProperty">
            <summary>
            Represents a mask/format for the textbox that the user must follow
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.PlaceHolderProperty">
            <summary>
            Represents the mask place holder which represents the variable character that the user can edit in the textbox
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.CustomMaskProperty">
            <summary>
            Represents the custom mask that the user can create to add his own variable characters based on regex expression
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.GetMask(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets mask value
            </summary>
            <param name="obj">TextBox control</param>
            <returns>mask value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.SetMask(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets textbox mask property which represents mask/format for the textbox that the user must follow
            </summary>
            <param name="obj">TextBox Control</param>
            <param name="value">Mask Value</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.GetPlaceHolder(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets placeholder value
            </summary>
            <param name="obj">TextBox control</param>
            <returns>placeholder value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.SetPlaceHolder(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets placeholder property which represents the variable character that the user can edit in the textbox
            </summary>
            <param name="obj">TextBox Control</param>
            <param name="value">placeholder Value</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.GetCustomMask(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets CustomMask value
            </summary>
            <param name="obj">TextBox control</param>
            <returns>CustomMask value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxMask.SetCustomMask(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets CustomMask property which represents the custom mask that the user can create to add his own variable characters based on certain regex expression
            </summary>
            <param name="obj">TextBox Control</param>
            <param name="value">CustomMask Value</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex">
            <summary>
            TextBoxRegex allows text validation using a regular expression.
            </summary>
            <remarks>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Normal then IsValid will be set according to whether the regex is valid.</see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Forced then IsValid will be set according to whether the regex is valid, when TextBox lose focus and in case the TextBox is invalid clear its value. </see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Dynamic then IsValid will be set according to whether the regex is valid. If the newest character is invalid, only invalid character of the TextBox will be deleted.</see>
            </remarks>
            <summary>
            TextBoxRegex allows text validation using a regular expression.
            </summary>
            <remarks>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Normal then IsValid will be set according to whether the regex is valid.</see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Forced then IsValid will be set according to whether the regex is valid, when TextBox lose focus and in case the textbox is invalid clear its value. </see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Dynamic then IsValid will be set according to whether the regex is valid. If the newest charachter is invalid, only invalid character of the Textbox will be deleted.</see>
            </remarks>
            <summary>
            TextBoxRegex allows text validation using a regular expression.
            </summary>
            <remarks>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Normal then IsValid will be set according to whether the regex is valid.</see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Forced then IsValid will be set according to whether the regex is valid, when TextBox lose focus and in case the textbox is invalid clear its value. </see>
            If <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"> is set to Dynamic then IsValid will be set according to whether the regex is valid. If the newest charachter is invalid, only invalid character of the Textbox will be deleted.</see>
            </remarks>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode">
            <summary>
            Regex validation mode
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode.Normal">
            <summary>
            Update IsValid property with validation result at text changed
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode.Forced">
            <summary>
            Update IsValid property with validation result and in case the textbox is not valid clear its value when the TextBox lose focus
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode.Dynamic">
            <summary>
            Update IsValid property with validation result at text changed and clear the newest character at input which is not valid
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType">
            <summary>
            Specify the type of validation required
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.Custom">
            <summary>
            The default validation that required property Regex to be setted
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.Email">
            <summary>
            Email validation
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.Number">
            <summary>
            Number validation
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.Decimal">
            <summary>
            Decimal validation
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.Characters">
            <summary>
            Text only validation
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType.PhoneNumber">
            <summary>
            Phone number validation
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.RegexProperty">
            <summary>
            Identifies the Regex attached dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.IsValidProperty">
            <summary>
            Identifies the IsValid attached dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationModeProperty">
            <summary>
            Identifies the ValidationMode attached dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationTypeProperty">
            <summary>
            Identifies the ValidationType attached dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.GetRegex(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Gets the value of the TextBoxRegex.Regex XAML attached property from the specified TextBox.
            </summary>
            <param name="textBox">TextBox to get Regex property from.</param>
            <returns>The regular expression assigned to the TextBox</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.SetRegex(Windows.UI.Xaml.Controls.TextBox,System.String)">
            <summary>
            Sets the value of the TextBoxRegex.Regex XAML attached property for a target TextBox.
            </summary>
            <param name="textBox">The TextBox to set the regular expression on</param>
            <param name="value">Regex value</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.GetIsValid(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Gets the value of the TextBoxRegex.IsValid XAML attached property from the specified TextBox.
            </summary>
            <param name="textBox">TextBox to be validated.</param>
            <returns>TextBox regular expression validation result</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.SetIsValid(Windows.UI.Xaml.Controls.TextBox,System.Boolean)">
            <summary>
            Sets the value of the TextBoxRegex.IsValid XAML attached property for a target TextBox.
            </summary>
            <param name="textBox">TextBox to be assigned the property</param>
            <param name="value">A value indicating if the Text is valid according to the Regex property.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.GetValidationMode(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Gets the value of the TextBoxRegex.ValidationMode XAML attached property from the specified TextBox.
            </summary>
            <param name="textBox">TextBox to get the <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"/> from</param>
            <returns>TextBox <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"/> value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.SetValidationMode(Windows.UI.Xaml.Controls.TextBox,Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode)">
            <summary>
            Sets the value of the TextBoxRegex.ValidationMode XAML attached property for a target TextBox.
            </summary>
            <param name="textBox">TextBox to set the <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"/> on.</param>
            <param name="value">TextBox <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationMode"/> value</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.GetValidationType(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Gets the value of the TextBoxRegex.ValidationType XAML attached property from the specified TextBox.
            </summary>
            <param name="textBox">TextBox to get <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType"/> from.</param>
            <returns>TextBox <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType"/> Value</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.SetValidationType(Windows.UI.Xaml.Controls.TextBox,Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType)">
            <summary>
            Sets the value of the TextBoxRegex.ValidationType XAML attached property for a target TextBox.
            </summary>
            <param name="textBox">TextBox to set the <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType"/> on.</param>
            <param name="value">TextBox <see cref="T:Microsoft.Toolkit.Uwp.UI.Extensions.TextBoxRegex.ValidationType"/> value</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions">
            <summary>
            Provides attached dependency properties for interacting with the <see cref="T:Windows.UI.ViewManagement.ApplicationViewTitleBar"/> on a window (app view).
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.BackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.BackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonHoverBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonHoverBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonHoverBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonHoverBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonHoverForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonHoverForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonHoverForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonHoverForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonInactiveBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonInactiveBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonInactiveBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonInactiveBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonInactiveForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonInactiveForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonInactiveForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonInactiveForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonPressedBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonPressedBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonPressedBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonPressedBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetButtonPressedForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonPressedForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetButtonPressedForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ButtonPressedForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.ForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetInactiveBackgroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.InactiveBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetInactiveBackgroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.InactiveBackgroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.GetInactiveForegroundColor(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets Color for <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.InactiveForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <returns>Color</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.TitleBarExtensions.SetInactiveForegroundColor(Windows.UI.Xaml.Controls.Page,Windows.UI.Color)">
            <summary>
            Sets Color to <see cref="P:Windows.UI.ViewManagement.ApplicationViewTitleBar.InactiveForegroundColor"/>
            </summary>
            <param name="page">The <see cref="T:Windows.UI.Xaml.Controls.Page"/></param>
            <param name="value">Color</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree">
            <summary>
            Defines a collection of extensions methods for UI.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildByName(Windows.UI.Xaml.FrameworkElement,System.String)">
            <summary>
            Find logical child control using its name.
            </summary>
            <param name="element">Parent element.</param>
            <param name="name">Name of the control to find.</param>
            <returns>Child control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChild``1(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Find first logical child control of a specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Parent element.</param>
            <returns>Child control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildren``1(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Find all logical child controls of the specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Parent element.</param>
            <returns>Child controls or empty if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParentByName(Windows.UI.Xaml.FrameworkElement,System.String)">
            <summary>
            Finds the logical parent element with the given name or returns null.
            </summary>
            <param name="element">Child element.</param>
            <param name="name">Name of the control to find.</param>
            <returns>Parent control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParent``1(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Find first logical parent control of a specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Child element.</param>
            <returns>Parent control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.GetContentControl(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Retrieves the Content control of this element as defined by the ContentPropertyAttribute.
            </summary>
            <param name="element">Parent element.</param>
            <returns>Child Content control or null if not available.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.ContentPropertySearch(System.Type)">
            <summary>
            Retrieves the Content Property's Name for the given type.
            </summary>
            <param name="type">UIElement based type to search for ContentProperty.</param>
            <returns>String name of ContentProperty for control.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.TryFindResource(Windows.UI.Xaml.FrameworkElement,System.Object)">
            <summary>
            Provides a WPF compatible version of TryFindResource to provide a static resource lookup.
            If the key is not found in the current element's resources, the logical tree is then searched element-by-element to look for the resource in each element's resources.
            If none of the elements contain the resource, the Application's resources are then searched.
            <seealso href="https://docs.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.tryfindresource"/>
            <seealso href="https://docs.microsoft.com/en-us/dotnet/desktop-wpf/fundamentals/xaml-resources-define#static-resource-lookup-behavior"/>
            </summary>
            <param name="start"><see cref="T:Windows.UI.Xaml.FrameworkElement"/> to start searching for Resource.</param>
            <param name="resourceKey">Key to search for.</param>
            <returns>Requested resource or null.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree">
            <summary>
            Defines a collection of extensions methods for UI.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendantByName(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Find descendant <see cref="T:Windows.UI.Xaml.FrameworkElement"/> control using its name.
            </summary>
            <param name="element">Parent element.</param>
            <param name="name">Name of the control to find</param>
            <returns>Descendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendant``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Find first descendant control of a specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Parent element.</param>
            <returns>Descendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendant(Windows.UI.Xaml.DependencyObject,System.Type)">
            <summary>
            Find first descendant control of a specified type.
            </summary>
            <param name="element">Parent element.</param>
            <param name="type">Type of descendant.</param>
            <returns>Descendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendants``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Find all descendant controls of the specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Parent element.</param>
            <returns>Descendant controls or empty if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendantByName(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Find visual ascendant <see cref="T:Windows.UI.Xaml.FrameworkElement"/> control using its name.
            </summary>
            <param name="element">Parent element.</param>
            <param name="name">Name of the control to find</param>
            <returns>Descendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendant``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Find first visual ascendant control of a specified type.
            </summary>
            <typeparam name="T">Type to search for.</typeparam>
            <param name="element">Child element.</param>
            <returns>Ascendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendant(Windows.UI.Xaml.DependencyObject,System.Type)">
            <summary>
            Find first visual ascendant control of a specified type.
            </summary>
            <param name="element">Child element.</param>
            <param name="type">Type of ascendant to look for.</param>
            <returns>Ascendant control or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendants(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Find all visual ascendants for the element.
            </summary>
            <param name="element">Child element.</param>
            <returns>A collection of parent elements or null if none found.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions">
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.UIElement"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions.ClipToBoundsProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> that indicates whether or not the contents of the target <see cref="T:Windows.UI.Xaml.UIElement"/> should always be clipped to their parent's bounds.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions.GetClipToBounds(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions.ClipToBoundsProperty"/>
            </summary>
            <param name="element">The <see cref="T:Windows.UI.Xaml.UIElement"/> to read the property value from</param>
            <returns>The <see cref="T:System.Boolean"/> associated with the <see cref="T:Windows.UI.Xaml.FrameworkElement"/></returns>.
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions.SetClipToBounds(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Sets the value of <see cref="F:Microsoft.Toolkit.Uwp.UI.Extensions.UIElementExtensions.ClipToBoundsProperty"/>
            </summary>
            <param name="element">The <see cref="T:Windows.UI.Xaml.UIElement"/> to set the property to</param>
            <param name="value">The new value of the attached property</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions">
            <summary>
            Extension methods and attached properties for <see cref="T:Windows.UI.Composition.Visual"/> objects
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.ToVector2(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:System.Numerics.Vector2"/>
            </summary>
            <param name="str">A string in the format of "float, float"</param>
            <returns><see cref="T:System.Numerics.Vector2"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.ToVector3(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:System.Numerics.Vector3"/>
            </summary>
            <param name="str">A string in the format of "float, float, float"</param>
            <returns><see cref="T:System.Numerics.Vector3"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.ToVector4(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:System.Numerics.Vector4"/>
            </summary>
            <param name="str">A string in the format of "float, float, float, float"</param>
            <returns><see cref="T:System.Numerics.Vector4"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetVisual(Windows.UI.Xaml.UIElement)">
            <summary>
            Retrieves the <see cref="T:Windows.UI.Composition.Visual"/> object of a <see cref="T:Windows.UI.Xaml.UIElement"/>
            </summary>
            <param name="element">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>The <see cref="T:Windows.UI.Composition.Visual"/> backing the <see cref="T:Windows.UI.Xaml.UIElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetAnchorPoint(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.AnchorPoint"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector2"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.AnchorPoint"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetAnchorPoint(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.AnchorPoint"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector2"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetCenterPoint(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetCenterPoint(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector3"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetOffset(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.Offset"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.Offset"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetOffset(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.Offset"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector3"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetOpacity(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.Opacity"/> of a UIElement
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>The <see cref="P:Windows.UI.Composition.Visual.Opacity"/> of the <see cref="T:Windows.UI.Xaml.UIElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetOpacity(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.Opacity"/> of a UIElement
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The opacity to be set between 0.0 and 1.0</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetRotationAngle(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.RotationAngle"/> of a UIElement in radians
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>The <see cref="P:Windows.UI.Composition.Visual.RotationAngle"/> of the <see cref="T:Windows.UI.Xaml.UIElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetRotationAngle(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.RotationAngle"/> of a UIElement in radians
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The rotation in radians</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetRotationAngleInDegrees(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.RotationAngleInDegrees"/> of a UIElement in degrees
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>The <see cref="P:Windows.UI.Composition.Visual.RotationAngleInDegrees"/> of the <see cref="T:Windows.UI.Xaml.UIElement"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetRotationAngleInDegrees(Windows.UI.Xaml.DependencyObject,System.Double)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.RotationAngleInDegrees"/> of a UIElement in radians
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The rotation in degrees</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetRotationAxis(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.RotationAxis"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.RotationAxis"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetRotationAxis(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.RotationAxis"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector3"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetScale(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.Scale"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector3"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.Scale"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetScale(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.Scale"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector3"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetSize(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.Size"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>A <see cref="T:System.Numerics.Vector2"/> string representation of the <see cref="P:Windows.UI.Composition.Visual.Size"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetSize(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the <see cref="P:Windows.UI.Composition.Visual.Size"/> of a UIElement in a string form
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">The string representation of the <see cref="T:System.Numerics.Vector2"/> to be set</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.GetNormalizedCenterPoint(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/> of the <see cref="T:Windows.UI.Xaml.UIElement"/> normalized between 0.0 and 1.0
            is centered even when the visual is resized
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <returns>a string representing Vector3 as the normalized <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/></returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SetNormalizedCenterPoint(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the normalized <see cref="P:Windows.UI.Composition.Visual.CenterPoint"/> of the <see cref="T:Windows.UI.Xaml.UIElement"/>
            is centered even when the visual is resized
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.UIElement"/></param>
            <param name="value">A string representing a Vector3 normalized between 0.0 and 1.0</param>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.AnchorPointProperty">
            <summary>
            Identifies the AnchorPointProperty attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.CenterPointProperty">
            <summary>
            Identifies the CenterPoint attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.OffsetProperty">
            <summary>
            Identifies the Offset attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.OpacityProperty">
            <summary>
            Identifies the Opacity attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.RotationAngleProperty">
            <summary>
            Identifies the RotationAngle attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.RotationAngleInDegreesProperty">
            <summary>
            Identifies the RotationAngleInDegrees attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.RotationAxisProperty">
            <summary>
            Identifies the RotationAxis attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.ScaleProperty">
            <summary>
            Identifies the Scale attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.SizeProperty">
            <summary>
            Identifies the Size attached property.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Extensions.VisualExtensions.NormalizedCenterPointProperty">
            <summary>
            Identifies the NormalizedCenterPoint attached property.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions">
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> content element that allows
            it to invoke a <see cref="T:System.Windows.Input.ICommand"/> when clicked
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding an <see cref="T:System.Windows.Input.ICommand"/> instance to a <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandParameterProperty">
            <summary>
            Attached <see cref="T:Windows.UI.Xaml.DependencyProperty"/> for binding a command parameter to a <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.GetCommand(Windows.UI.Xaml.Documents.Hyperlink)">
            <summary>
            Gets the <see cref="T:System.Windows.Input.ICommand"/> instance associated with the specified <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> from which to get the associated <see cref="T:System.Windows.Input.ICommand"/> instance</param>
            <returns>The <see cref="T:System.Windows.Input.ICommand"/> instance associated with the <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> or null</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.SetCommand(Windows.UI.Xaml.Documents.Hyperlink,System.Windows.Input.ICommand)">
            <summary>
            Sets the <see cref="T:System.Windows.Input.ICommand"/> instance associated with the specified <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> to associated the <see cref="T:System.Windows.Input.ICommand"/> instance to</param>
            <param name="value">The <see cref="T:System.Windows.Input.ICommand"/> instance to bind to the <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/></param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.GetCommandParameter(Windows.UI.Xaml.Documents.Hyperlink)">
            <summary>
            Gets the <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> instance associated with the specified <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> from which to get the associated <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> value</param>
            <returns>The <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> value associated with the <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> or null</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.SetCommandParameter(Windows.UI.Xaml.Documents.Hyperlink,System.Object)">
            <summary>
            Sets the <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> associated with the specified <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Documents.Hyperlink"/> to associated the <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> instance to</param>
            <param name="value">The <see cref="T:System.Object"/> to set the <see cref="F:Microsoft.Toolkit.Uwp.UI.HyperlinkExtensions.CommandProperty"/> to</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.WebViewExtensions">
            <summary>
            Provides attached dependency properties for the <see cref="T:Windows.UI.Xaml.Controls.WebView"/>
            that allows attaching HTML string content/>.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.ContentProperty">
            <summary>
            Using a DependencyProperty as the backing store for HTML content. This enables binding html string content.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.ContentUriProperty">
            <summary>
            Using a DependencyProperty as the backing store for Content Uri.  This binding Content Uri.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.GetContent(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets Content associated with the <see cref="T:Windows.UI.Xaml.Controls.WebView"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.WebView"/> that has the content</param>
            <returns>HTML content</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.SetContent(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets HTML from the <see cref="T:Windows.UI.Xaml.Controls.WebView"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.WebView"/> that content is being set to.</param>
            <param name="value">HTML content</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.GetContentUri(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets Uri source associated with the <see cref="T:Windows.UI.Xaml.Controls.WebView"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.WebView"/> that has the content uri.</param>
            <returns>HTML content</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.WebViewExtensions.SetContentUri(Windows.UI.Xaml.DependencyObject,System.Uri)">
            <summary>
            Sets HTML from the <see cref="T:Windows.UI.Xaml.Controls.WebView"/>
            </summary>
            <param name="obj">The <see cref="T:Windows.UI.Xaml.Controls.WebView"/> that content uri is being set to.</param>
            <param name="value">HTML content</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Helpers.BindableValueHolder">
            <summary>
            Holds the value.
            Can be used to change several objects' properties at a time.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Helpers.BindableValueHolder.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Helpers.BindableValueHolder.Value"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.BindableValueHolder.Value">
            <summary>
            Gets or sets the held value.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Helpers.CompositionTargetHelper">
            <summary>
            Provides helpers for the <see cref="T:Windows.UI.Xaml.Media.CompositionTarget"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.CompositionTargetHelper.ExecuteAfterCompositionRenderingAsync(System.Action)">
            <summary>
            Provides a method to execute code after the rendering pass is completed.
            <seealso href="https://github.com/microsoft/microsoft-ui-xaml/blob/c045cde57c5c754683d674634a0baccda34d58c4/dev/dll/SharedHelpers.cpp#L399"/>
            </summary>
            <param name="action">Action to be executed after render pass</param>
            <returns>Awaitable Task</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1">
            <summary>
            Used to Track Changes of a Dependency Property
            </summary>
            <typeparam name="T">Value of Dependency Property</typeparam>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.ValueProperty">
            <summary>
            Value of Value Property
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.PropertyChanged">
            <summary>
            Called when Property Changes.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.#ctor(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1"/> class.
            </summary>
            <param name="target">Target Dependency Object</param>
            <param name="propertyPath">Path of Property</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.Target">
            <summary>
            Gets the target Dependency Object
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.Value">
            <summary>
            Gets the current Value
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.OnPropertyChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Property is updated
            </summary>
            <param name="sender">Source</param>
            <param name="args">Args</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.DependencyPropertyWatcher`1.Dispose">
            <summary>
            Clears the Watcher object.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeChangedEvent">
            <summary>
            The Delegate for a ThemeChanged Event.
            </summary>
            <param name="sender">Sender ThemeListener</param>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener">
            <summary>
            Class which listens for changes to Application Theme or High Contrast Modes
            and Signals an Event when they occur.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentThemeName">
            <summary>
            Gets the Name of the Current Theme.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.CurrentTheme">
            <summary>
            Gets or sets the Current Theme.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.IsHighContrast">
            <summary>
            Gets or sets a value indicating whether the current theme is high contrast.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.DispatcherQueue">
            <summary>
            Gets or sets which DispatcherQueue is used to dispatch UI updates.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.ThemeChanged">
            <summary>
            An event that fires if the Theme changes.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.#ctor(Windows.System.DispatcherQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener"/> class.
            </summary>
            <param name="dispatcherQueue">The DispatcherQueue that should be used to dispatch UI updates, or null if this is being called from the UI thread.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.UpdateProperties">
            <summary>
            Set our current properties and fire a change notification.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Helpers.ThemeListener.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.DesignTimeHelpers">
            <summary>
            Class used to provide helpers for design time
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.DesignTimeHelpers.IsRunningInLegacyDesignerMode">
            <summary>
            Gets a value indicating whether app is running in the Legacy Designer
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.DesignTimeHelpers.IsRunningInEnhancedDesignerMode">
            <summary>
            Gets a value indicating whether app is running in the Enhanced Designer
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.DesignTimeHelpers.IsRunningInApplicationRuntimeMode">
            <summary>
            Gets a value indicating whether app is not running in the Designer
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.DesignTimeHelpers.InitializeDesignMode2">
            <summary>
            Used to enable or disable user code inside a XAML designer that targets the Windows 10 Fall Creators Update SDK, or later.
            </summary>
            <remarks>
            <para>
            Windows.ApplicationModel.DesignMode.DesignModeEnabled returns true when called from user code running inside any version of the XAML designer--regardless of which SDK version you target. This check is recommended for most users.
            </para><para>
            Starting with the Windows 10 Fall Creators Update, Visual Studio provides a new XAML designer that targets the Windows 10 Fall Creators Update and later.
            </para><para>
            Use Windows.ApplicationModel.DesignMode.DesignMode2Enabled to differentiate code that depends on functionality only enabled for a XAML designer that targets the Windows 10 Fall Creators Update SDK or later.
            </para>
            <para>
            More info here: https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode
            </para>
            </remarks>
            <returns>True if called from code running inside a XAML designer that targets the Windows 10 Fall Creators Update, or later; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger">
            <summary>
            Enables a state if the value is equal to, greater than, or less than another value
            </summary>
            <remarks>
            <para>
            Example: Trigger if a value is greater than 0
            <code lang="xaml">
                &lt;triggers:CompareStateTrigger Value="{Binding MyValue}" CompareTo="0" Comparison="GreaterThan" />
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.Value">
            <summary>
            Gets or sets the value for comparison.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.Value"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.To">
            <summary>
            Gets or sets the value to compare to.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.ToProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.To"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.Comparison">
            <summary>
            Gets or sets the comparison type
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.ComparisonProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.CompareStateTrigger.Comparison"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison">
            <summary>
            Comparison types
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison.LessThan">
            <summary>
            Less than
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison.LessThanOrEqual">
            <summary>
            Less than or equal
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison.Equal">
            <summary>
            Equals
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison.GreaterThanOrEqual">
            <summary>
            Greater than or equal
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.Comparison.GreaterThan">
            <summary>
            Greater than
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.FullScreenModeStateTrigger">
            <summary>
            Trigger for switching when in full screen mode.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.FullScreenModeStateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Triggers.FullScreenModeStateTrigger"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.FullScreenModeStateTrigger.IsFullScreen">
            <summary>
            Gets or sets a value indicating whether to trigger on full screen or not.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger">
            <summary>
            Enables a state if the value is equal to another value
            </summary>
            <remarks>
            <para>
            Example: Trigger if a value is null
            <code lang="xaml">
                &lt;triggers:EqualsStateTrigger Value="{Binding MyObject}" EqualTo="{x:Null}" />
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.Value">
            <summary>
            Gets or sets the value for comparison.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.Value"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.To">
            <summary>
            Gets or sets the value to compare equality to.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.ToProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsEqualStateTrigger.To"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger">
            <summary>
            Enables a state if the value is not equal to another value
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.Value">
            <summary>
            Gets or sets the value for comparison.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.Value"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.To">
            <summary>
            Gets or sets the value to compare inequality to.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.ToProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNotEqualStateTrigger.To"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.IsNullOrEmptyStateTrigger">
            <summary>
            Enables a state if an Object is <c>null</c> or a String/IEnumerable is empty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNullOrEmptyStateTrigger.Value">
            <summary>
            Gets or sets the value used to check for <c>null</c> or empty.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.IsNullOrEmptyStateTrigger.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.IsNullOrEmptyStateTrigger.Value"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger">
            <summary>
            Trigger for switching when the network availability changes
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.ConnectionState">
            <summary>
            Gets or sets the state of the connection to trigger on.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.ConnectionStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.ConnectionState"/> DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2"/> class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2.OnEvent(`1)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.NetworkConnectionStateTrigger.WeakEventListener`2.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.ConnectionState">
            <summary>
            ConnectionStates
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.ConnectionState.Connected">
            <summary>
            Connected
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.ConnectionState.Disconnected">
            <summary>
            Disconnected
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger">
            <summary>
            Enables a state if the regex expression is true for a given string value
            </summary>
            <remarks>
            <para>
            Example: Trigger user entered a valid email
            <code lang="xaml">
                &lt;triggers:RegexStateTrigger Value="{x:Bind myTextBox.Text}" Expression="^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$" Options="IgnoreCase" />
            </code>
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Value">
            <summary>
            Gets or sets the value for regex evaluation.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.ValueProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Value"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Expression">
            <summary>
            Gets or sets the regular expression.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.ExpressionProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Expression"/> DependencyProperty
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Options">
            <summary>
            Gets or sets the regular expression options
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.OptionsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.RegexStateTrigger.Options"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger">
            <summary>
            Trigger for switching UI based on whether the user favors their left or right hand.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger.HandPreference">
            <summary>
            Gets or sets the hand preference to trigger on.
            </summary>
            <value>A value from the <see cref="T:Windows.UI.ViewManagement.HandPreference"/> enum.</value>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger.HandPreferenceProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.UserHandPreferenceStateTrigger.HandPreference"/> DependencyProperty
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger">
            <summary>
            Trigger for switching when the User interaction mode changes (tablet mode)
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger.InteractionMode">
            <summary>
            Gets or sets the InteractionMode to trigger on.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger.InteractionModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Toolkit.Uwp.UI.Triggers.UserInteractionModeStateTrigger.InteractionMode"/> parameter.
            </summary>
        </member>
    </members>
</doc>
