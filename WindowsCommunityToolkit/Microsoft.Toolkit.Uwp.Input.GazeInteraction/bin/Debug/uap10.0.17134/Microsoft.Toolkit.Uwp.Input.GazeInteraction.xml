<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Toolkit.Uwp.Input.GazeInteraction</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellInvokedRoutedEventArgs">
            <summary>
            This parameter is passed to the GazeElement::Invoked event and allows
            the application to prevent default invocation when the user dwells on a control
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressEventArgs">
            <summary>
            This parameter is passed to the GazeElement.DwellProgressFeedback event. The event is fired to inform the application of the user's progress towards completing dwelling on a control
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressEventArgs.State">
            <summary>
            Gets an enum that reflects the current state of dwell progress
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressEventArgs.Progress">
            <summary>
            Gets a value between 0 and 1 that reflects the fraction of progress towards completing dwell
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressState">
            <summary>
            An enum that reflects the current state of progress towards dwell when a user is focused on a control
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressState.Idle">
            <summary>
            User is not looking at the control
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressState.Fixating">
            <summary>
            Gaze has entered control but we're not yet showing progress.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressState.Progressing">
            <summary>
            User is continuing to focus on a control with an intent to dwell and invoke
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.DwellProgressState.Complete">
            <summary>
            User has completed dwelling on a control
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeElement">
            <summary>
            Surrogate object attached to controls allowing subscription to per-control gaze events.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeElement.StateChanged">
            <summary>
            This event is fired when the state of the user's gaze on a control has changed
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeElement.Invoked">
            <summary>
            This event is fired when the user completed dwelling on a control and the control is about to be invoked by default. This event is fired to give the application an opportunity to prevent default invocation
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeElement.DwellProgressFeedback">
            <summary>
            This event is fired to inform the application of the progress towards dwell
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeEventArgs">
            <summary>
            EventArgs used to send Gaze events. See <see cref="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.GazeEvent"/>
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeEventArgs.Location">
            <summary>
            Gets the location of the Gaze event
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeEventArgs.Timestamp">
            <summary>
            Gets the timestamp of the gaze event
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeFilterArgs">
            <summary>
            This struct encapsulates the location and timestamp associated with the user's gaze
            and is used as an input and output parameter for the IGazeFilter.Update method
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeFilterArgs.Location">
            <summary>
            Gets the current point in the gaze stream
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeFilterArgs.Timestamp">
            <summary>
            Gets the timestamp associated with the current point
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPosition">
            <summary>
            Represents one Hid position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPosition.X">
            <summary>
            Gets or sets the X axis of this position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPosition.Y">
            <summary>
            Gets or sets the Y axis of this position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPosition.Z">
            <summary>
            Gets or sets the Z axis of this position
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionParser">
            <summary>
            Hid Position Parser
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionParser.#ctor(Windows.Devices.Input.Preview.GazeDevicePreview,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionParser"/> class.
            </summary>
            <param name="gazeDevice"><see cref="T:Windows.Devices.Input.Preview.GazeDevicePreview"/> used to parse.</param>
            <param name="usage">The <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidUsages"/> used to parse.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionParser.GetPosition(Windows.Devices.HumanInterfaceDevice.HidInputReport)">
            <summary>
            Parses the position from the report.
            </summary>
            <param name="report">A <see cref="T:Windows.Devices.HumanInterfaceDevice.HidInputReport"/> object used on the parsing.</param>
            <returns>The parsed <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions"/> from the report.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions">
            <summary>
            Represents the Hid positions
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions.LeftEyePosition">
            <summary>
            Gets or sets the left eye position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions.RightEyePosition">
            <summary>
            Gets or sets the right eye position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions.HeadPosition">
            <summary>
            Gets or sets the head position
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions.HeadRotation">
            <summary>
            Gets or sets the head rotation
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionsParser">
            <summary>
            Hid Positions Parser
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionsParser.#ctor(Windows.Devices.Input.Preview.GazeDevicePreview)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionsParser"/> class.
            </summary>
            <param name="gazeDevice"><see cref="T:Windows.Devices.Input.Preview.GazeDevicePreview"/> used to parse.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositionsParser.GetGazeHidPositions(Windows.Devices.HumanInterfaceDevice.HidInputReport)">
            <summary>
            Parses the positions from the report.
            </summary>
            <param name="report">A <see cref="T:Windows.Devices.HumanInterfaceDevice.HidInputReport"/> object used on the parsing.</param>
            <returns>The parsed <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPositions"/> from the report.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidRotationParser">
            <summary>
            Hid Rotation Parser
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidRotationParser.#ctor(Windows.Devices.Input.Preview.GazeDevicePreview,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidRotationParser"/> class.
            </summary>
            <param name="gazeDevice"><see cref="T:Windows.Devices.Input.Preview.GazeDevicePreview"/> used to parse.</param>
            <param name="usage">The <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidUsages"/> used to parse.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidRotationParser.GetRotation(Windows.Devices.HumanInterfaceDevice.HidInputReport)">
            <summary>
            Parses the rotation from the report.
            </summary>
            <param name="report">A <see cref="T:Windows.Devices.HumanInterfaceDevice.HidInputReport"/> object used on the parsing.</param>
            <returns>The parsed <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidParsers.GazeHidPosition"/> from the report.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeHidUsages">
             <summary>
             This enum specifies the various HID usages specified by the EyeHeadTracker HID specification
            
             https://www.usb.org/sites/default/files/hutrr74_-_usage_page_for_head_and_eye_trackers_0.pdf
             </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput">
            <summary>
            Static class primarily providing access to attached properties controlling gaze behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.InteractionProperty">
            <summary>
            Gets the Interaction dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.IsCursorVisibleProperty">
            <summary>
            Gets the IsCursorVisible dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.CursorRadiusProperty">
            <summary>
            Gets the CursorRadius dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GazeElementProperty">
            <summary>
            Gets the GazeElement dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.FixationDurationProperty">
            <summary>
            Gets the FixationDuration dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellDurationProperty">
            <summary>
            Gets the DwellDuration dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.RepeatDelayDurationProperty">
            <summary>
            Gets the RepeatDelayDuration dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellRepeatDurationProperty">
            <summary>
            Gets the DwellRepeatDuration dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.ThresholdDurationProperty">
            <summary>
            Gets the ThresholdDuration dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.MaxDwellRepeatCountProperty">
            <summary>
            Gets the MaxDwellRepeatCount dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.IsSwitchEnabledProperty">
            <summary>
            Gets the IsSwitchEnabled dependency property
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellFeedbackEnterBrush">
            <summary>
            Gets or sets the brush to use when displaying the default indication that gaze entered a control
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellFeedbackProgressBrush">
            <summary>
            Gets or sets the brush to use when displaying the default animation for dwell press
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellFeedbackCompleteBrush">
            <summary>
            Gets or sets the brush to use when displaying the default animation for dwell complete
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.DwellStrokeThickness">
            <summary>
            Gets or sets the thickness of the lines animated for dwell.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.Interaction">
            <summary>
            Gets or sets the interaction default
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetInteraction(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the status of gaze interaction over that particular XAML element.
            </summary>
            <returns>The status of gaze interaction over that particular XAML element.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetIsCursorVisible(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets a boolean indicating whether cursor is shown while user is looking at the school.
            </summary>
            <returns>True the cursor is shown while user is looking at the school; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetCursorRadius(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the size of the gaze cursor radius.
            </summary>
            <returns>The size of the gaze cursor radius.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetGazeElement(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the GazeElement associated with an UIElement.
            </summary>
            <returns>The GazeElement associated with an UIElement.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetFixationDuration(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the duration for the control to transition from the Enter state to the Fixation state. At this point, a StateChanged event is fired with PointerState set to Fixation. This event should be used to control the earliest visual feedback the application needs to provide to the user about the gaze location. The default is 350ms.
            </summary>
            <returns>Duration for the control to transition from the Enter state to the Fixation state.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetDwellDuration(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the duration for the control to transition from the Fixation state to the Dwell state. At this point, a StateChanged event is fired with PointerState set to Dwell. The Enter and Fixation states are typically achieved too rapidly for the user to have much control over. In contrast Dwell is conscious event. This is the point at which the control is invoked, e.g. a button click. The application can modify this property to control when a gaze enabled UI element gets invoked after a user starts looking at it.
            </summary>
            <returns>The duration for the control to transition from the Fixation state to the Dwell state.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetRepeatDelayDuration(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the additional duration for the first repeat to occur. This prevents inadvertent repeated invocation.
            </summary>
            <returns>The additional duration for the first repeat to occur.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetDwellRepeatDuration(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the duration of repeated dwell invocations, should the user continue to dwell on the control. The first repeat will occur after an additional delay specified by RepeatDelayDuration. Subsequent repeats happen after every period of DwellRepeatDuration. A control is invoked repeatedly only if MaxDwellRepeatCount is set to greater than zero.
            </summary>
            <returns>The duration of repeated dwell invocations.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetThresholdDuration(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the duration that controls when the PointerState moves to either the Enter state or the Exit state. When this duration has elapsed after the user's gaze first enters a control, the PointerState is set to Enter. And when this duration has elapsed after the user's gaze has left the control, the PointerState is set to Exit. In both cases, a StateChanged event is fired. The default is 50ms.
            </summary>
            <returns>The duration that controls when the PointerState moves to either the Enter state or the Exit state.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetMaxDwellRepeatCount(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control. The default value is zero which disables repeated invocation of a control. Developers can set a higher value to enable repeated invocation.
            </summary>
            <returns>The maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetIsSwitchEnabled(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets a boolean indicating whether gaze plus switch is enabled.
            </summary>
            <returns>A boolean indicating whether gaze plus switch is enabled.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetInteraction(Windows.UI.Xaml.UIElement,Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction)">
            <summary>
            Sets the status of gaze interaction over that particular XAML element.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetIsCursorVisible(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Sets a boolean indicating whether cursor is shown while user is looking at the school.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetCursorRadius(Windows.UI.Xaml.UIElement,System.Int32)">
            <summary>
            Sets the size of the gaze cursor radius.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetGazeElement(Windows.UI.Xaml.UIElement,Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeElement)">
            <summary>
            Sets the GazeElement associated with an UIElement.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetFixationDuration(Windows.UI.Xaml.UIElement,System.TimeSpan)">
            <summary>
            Sets the duration for the control to transition from the Enter state to the Fixation state. At this point, a StateChanged event is fired with PointerState set to Fixation. This event should be used to control the earliest visual feedback the application needs to provide to the user about the gaze location. The default is 350ms.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetDwellDuration(Windows.UI.Xaml.UIElement,System.TimeSpan)">
            <summary>
            Sets the duration for the control to transition from the Fixation state to the Dwell state. At this point, a StateChanged event is fired with PointerState set to Dwell. The Enter and Fixation states are typically achieved too rapidly for the user to have much control over. In contrast Dwell is conscious event. This is the point at which the control is invoked, e.g. a button click. The application can modify this property to control when a gaze enabled UI element gets invoked after a user starts looking at it.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetRepeatDelayDuration(Windows.UI.Xaml.UIElement,System.TimeSpan)">
            <summary>
            Sets the additional duration for the first repeat to occur.This prevents inadvertent repeated invocation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetDwellRepeatDuration(Windows.UI.Xaml.UIElement,System.TimeSpan)">
            <summary>
            Sets the duration of repeated dwell invocations, should the user continue to dwell on the control. The first repeat will occur after an additional delay specified by RepeatDelayDuration. Subsequent repeats happen after every period of DwellRepeatDuration. A control is invoked repeatedly only if MaxDwellRepeatCount is set to greater than zero.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetThresholdDuration(Windows.UI.Xaml.UIElement,System.TimeSpan)">
            <summary>
            Sets the duration that controls when the PointerState moves to either the Enter state or the Exit state. When this duration has elapsed after the user's gaze first enters a control, the PointerState is set to Enter. And when this duration has elapsed after the user's gaze has left the control, the PointerState is set to Exit. In both cases, a StateChanged event is fired. The default is 50ms.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetMaxDwellRepeatCount(Windows.UI.Xaml.UIElement,System.Int32)">
            <summary>
            Sets the maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control. The default value is zero which disables repeated invocation of a control. Developers can set a higher value to enable repeated invocation.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.SetIsSwitchEnabled(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Sets the boolean indicating whether gaze plus switch is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.GetGazePointer(Windows.UI.Xaml.Controls.Page)">
            <summary>
            Gets the GazePointer object.
            </summary>
            <returns>The GazePointer associated with that particular page.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.Invoke(Windows.UI.Xaml.UIElement)">
            <summary>
            Invoke the default action of the specified UIElement.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.IsDeviceAvailable">
            <summary>
            Gets a value indicating whether a gaze input device is available, and hence whether there is any possibility of gaze events occurring in the application.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.IsDeviceAvailableChanged">
            <summary>
            Event triggered whenever IsDeviceAvailable changes value.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeInput.LoadSettings(Windows.Foundation.Collections.ValueSet)">
            <summary>
            Loads a settings collection into GazeInput.
            Note: This must be loaded from a UI thread to be valid, since the GazeInput
            instance is tied to the UI thread.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer">
            <summary>
            Class of singleton object coordinating gaze input.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.LoadSettings(Windows.Foundation.Collections.ValueSet)">
            <summary>
            Loads a settings collection into GazePointer.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.Click">
            <summary>
            When in switch mode, will issue a click on the currently fixated element
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.RequestCalibrationAsync">
            <summary>
            Run device calibration.
            </summary>
            <returns>Task that returns true, if calibration completes successfully; otherwise, false.</returns>
        </member>
        <member name="E:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.GazeEvent">
            <summary>
            Event handler for Gaze related events, of with a <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeEventArgs"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.CursorElement">
            <summary>
            Gets or sets the UIElement representing the cursor.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.GetInheritenceParent(Windows.UI.Xaml.UIElement)">
            <summary>
            Find the parent to inherit properties from.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointer.IsAlwaysActivated">
            <summary>
            Gets or sets a value indicating whether this GazePointer should always be activated or not.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy">
             <summary>
             Helper class that helps track which UIElements in the visual tree are enabled.
            
             The GazePointer is enabled when one or more UIElements in the visual tree have
             their GazeInput.InteractionProperty value set to Enabled. Notice that there are
             two conditions for enablement: that attached property is Enabled; that the UIElement
             is in the visual tree.
             </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.IsLoadedHeuristic(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            The IsLoaded heuristic for testing whether a FrameworkElement is in the visual tree.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy._gazePointerProxyProperty">
            <summary>
            A private attached property for associating an instance of this class with the UIElement
            to which it refers.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.SetInteraction(Windows.UI.Xaml.FrameworkElement,Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction)">
            <summary>
            Method called when the GazeInput.Interaction attached property is set to a new value.
            </summary>
            <param name="element">The element being set. May be null to indicate whole user interface.</param>
            <param name="value">The interaction enablement value being set.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.#ctor(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy"/> class.
            </summary>
            <param name="element">The element proxy is attaching to.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.SetIsEnabled(System.Object,System.Boolean)">
            <summary>
            Set the enablement of this proxy.
            </summary>
            <param name="sender">The object setting the enable value.</param>
            <param name="value">The new enable value.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.OnLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            The handler to be called when the corresponding element joins the visual tree.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy.OnUnloaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            The handler to be called when the corresponding element leaves the visual tree.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy._uniqueId">
            <summary>
            Non-zero ID associated with this instance.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy._isLoaded">
            <summary>
            Indicator that the corresponding element is part of the visual tree.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazePointerProxy._isEnabled">
            <summary>
            Boolean representing whether gaze is enabled for the corresponding element and its subtree.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeSettingsHelper">
            <summary>
            A helper class to read a ValueSet and retrieve relevant settings
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeSettingsHelper.RetrieveSharedSettings(Windows.Foundation.Collections.ValueSet)">
            <summary>
            Retrieves settings as a ValueSet from a shared store.
            </summary>
            <returns>An <see cref="T:Windows.Foundation.IAsyncAction"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats">
            <summary>
            Provides basic stats for eye gaze
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats"/> class.
            </summary>
            <param name="maxHistoryLen">Defines the size of the circular history for the calculations of stats</param>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats.Reset">
            <summary>
            Resets the history, and stats
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats.Update(System.Single,System.Single)">
            <summary>
            Adds a new item to the history
            </summary>
            <param name="x">X axis of the new point</param>
            <param name="y">Y axis of the new point</param>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats.Mean">
            <summary>
            Gets the mean of the history of points
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.GazeStats.StandardDeviation">
            <summary>
            Gets the StandardDeviation of the items on the history => sqrt(Variance) = sqrt(E[X^2] – (E[X])^2)
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction">
            <summary>
            This enum indicates the current state of gaze interaction.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction.Inherited">
            <summary>
            The state of gaze interaction is inherited from the nearest parent
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction.Enabled">
            <summary>
            Gaze interaction is enabled
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.Interaction.Disabled">
            <summary>
            Gaze interaction is disabled
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState">
            <summary>
            This enum reflects the states that a user's gaze through while interacting with a control using their eyes.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.Exit">
            <summary>
            User's gaze is no longer on the control
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.PreEnter">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.Enter">
            <summary>
            User's gaze has entered a control
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.Fixation">
            <summary>
            User eye's are focused on the control
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.Dwell">
            <summary>
            User is consciously dwelling on the control with an intent to invoke, e.g. click a button
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Uwp.Input.GazeInteraction.PointerState.DwellRepeat">
            <summary>
            User is continuing to dwell on the control for repeated invocation. (For internal use only)
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Uwp.Input.GazeInteraction.StateChangedEventArgs">
            <summary>
            This parameter is passed to the StateChanged event.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.StateChangedEventArgs.PointerState">
            <summary>
            Gets the state of the user's gaze with respect to a control
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Uwp.Input.GazeInteraction.StateChangedEventArgs.ElapsedTime">
            <summary>
            Gets elapsed time since the last state
            </summary>
        </member>
    </members>
</doc>
